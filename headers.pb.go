// Code generated by protoc-gen-go. DO NOT EDIT.
// source: headers.proto

package web

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Wildcard is a directive for use inside a oneof.
//
// NB: The oneof handles the unspecified case (when populated by
// one of the other values) so we don't need a *_UNSPECIFIED=0
// value.
type Wildcard int32

const (
	Wildcard_STAR Wildcard = 0
)

var Wildcard_name = map[int32]string{
	0: "STAR",
}

var Wildcard_value = map[string]int32{
	"STAR": 0,
}

func (x Wildcard) String() string {
	return proto.EnumName(Wildcard_name, int32(x))
}

func (Wildcard) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{0}
}

// Already is a directive for use inside a oneof.
//
// NB: The oneof handles the unspecified case (when populated by
// one of the other values) so we don't need a *_UNSPECIFIED=0
// value.
type Already int32

const (
	Already_ALREADY Already = 0
)

var Already_name = map[int32]string{
	0: "ALREADY",
}

var Already_value = map[string]int32{
	"ALREADY": 0,
}

func (x Already) String() string {
	return proto.EnumName(Already_name, int32(x))
}

func (Already) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{1}
}

// Clear is a directive for use inside a oneof.
//
// NB: The oneof handles the unspecified case (when populated by
// one of the other values) so we don't need a *_UNSPECIFIED=0
// value.
type Clear int32

const (
	Clear_CLEAR Clear = 0
)

var Clear_name = map[int32]string{
	0: "CLEAR",
}

var Clear_value = map[string]int32{
	"CLEAR": 0,
}

func (x Clear) String() string {
	return proto.EnumName(Clear_name, int32(x))
}

func (Clear) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{2}
}

type Method int32

const (
	Method_UNUSED_METHOD Method = 0
	Method_GET           Method = 1
	Method_HEAD          Method = 2
	Method_POST          Method = 3
	Method_PUT           Method = 4
	Method_DELETE        Method = 5
	Method_CONNECT       Method = 6
	Method_OPTIONS       Method = 7
	Method_TRACE         Method = 8
)

var Method_name = map[int32]string{
	0: "UNUSED_METHOD",
	1: "GET",
	2: "HEAD",
	3: "POST",
	4: "PUT",
	5: "DELETE",
	6: "CONNECT",
	7: "OPTIONS",
	8: "TRACE",
}

var Method_value = map[string]int32{
	"UNUSED_METHOD": 0,
	"GET":           1,
	"HEAD":          2,
	"POST":          3,
	"PUT":           4,
	"DELETE":        5,
	"CONNECT":       6,
	"OPTIONS":       7,
	"TRACE":         8,
}

func (x Method) String() string {
	return proto.EnumName(Method_name, int32(x))
}

func (Method) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{3}
}

type CacheControlRequest_Directives int32

const (
	CacheControlRequest_UNUSED_DIRECTIVE CacheControlRequest_Directives = 0
	CacheControlRequest_MAX_AGE          CacheControlRequest_Directives = 1
	CacheControlRequest_MAX_STALE        CacheControlRequest_Directives = 2
	CacheControlRequest_MIN_FRESH        CacheControlRequest_Directives = 3
	CacheControlRequest_NO_CACHE         CacheControlRequest_Directives = 4
	CacheControlRequest_NO_STORE         CacheControlRequest_Directives = 5
	CacheControlRequest_NO_TRANSFORM     CacheControlRequest_Directives = 6
	CacheControlRequest_ONLY_OF_CACHED   CacheControlRequest_Directives = 7
)

var CacheControlRequest_Directives_name = map[int32]string{
	0: "UNUSED_DIRECTIVE",
	1: "MAX_AGE",
	2: "MAX_STALE",
	3: "MIN_FRESH",
	4: "NO_CACHE",
	5: "NO_STORE",
	6: "NO_TRANSFORM",
	7: "ONLY_OF_CACHED",
}

var CacheControlRequest_Directives_value = map[string]int32{
	"UNUSED_DIRECTIVE": 0,
	"MAX_AGE":          1,
	"MAX_STALE":        2,
	"MIN_FRESH":        3,
	"NO_CACHE":         4,
	"NO_STORE":         5,
	"NO_TRANSFORM":     6,
	"ONLY_OF_CACHED":   7,
}

func (x CacheControlRequest_Directives) String() string {
	return proto.EnumName(CacheControlRequest_Directives_name, int32(x))
}

func (CacheControlRequest_Directives) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{2, 0}
}

type RequestHeaders_TransferEncodingsValue int32

const (
	RequestHeaders_UNUSED_TRANSFER_ENCODINGS_VALUE RequestHeaders_TransferEncodingsValue = 0
	RequestHeaders_TRAILERS                        RequestHeaders_TransferEncodingsValue = 1
)

var RequestHeaders_TransferEncodingsValue_name = map[int32]string{
	0: "UNUSED_TRANSFER_ENCODINGS_VALUE",
	1: "TRAILERS",
}

var RequestHeaders_TransferEncodingsValue_value = map[string]int32{
	"UNUSED_TRANSFER_ENCODINGS_VALUE": 0,
	"TRAILERS":                        1,
}

func (x RequestHeaders_TransferEncodingsValue) String() string {
	return proto.EnumName(RequestHeaders_TransferEncodingsValue_name, int32(x))
}

func (RequestHeaders_TransferEncodingsValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{3, 0}
}

type RequestHeaders_XRequestedWithValue int32

const (
	RequestHeaders_UNUSED_X_REQUESTED_WITH_VALUE RequestHeaders_XRequestedWithValue = 0
	RequestHeaders_XMLHTTPREQUEST                RequestHeaders_XRequestedWithValue = 1
)

var RequestHeaders_XRequestedWithValue_name = map[int32]string{
	0: "UNUSED_X_REQUESTED_WITH_VALUE",
	1: "XMLHTTPREQUEST",
}

var RequestHeaders_XRequestedWithValue_value = map[string]int32{
	"UNUSED_X_REQUESTED_WITH_VALUE": 0,
	"XMLHTTPREQUEST":                1,
}

func (x RequestHeaders_XRequestedWithValue) String() string {
	return proto.EnumName(RequestHeaders_XRequestedWithValue_name, int32(x))
}

func (RequestHeaders_XRequestedWithValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{3, 1}
}

type RequestHeaders_DNTValue int32

const (
	RequestHeaders_UNUSED_DNT_VALUE RequestHeaders_DNTValue = 0
	RequestHeaders_DISABLED         RequestHeaders_DNTValue = 1
	RequestHeaders_ENABLED          RequestHeaders_DNTValue = 2
)

var RequestHeaders_DNTValue_name = map[int32]string{
	0: "UNUSED_DNT_VALUE",
	1: "DISABLED",
	2: "ENABLED",
}

var RequestHeaders_DNTValue_value = map[string]int32{
	"UNUSED_DNT_VALUE": 0,
	"DISABLED":         1,
	"ENABLED":          2,
}

func (x RequestHeaders_DNTValue) String() string {
	return proto.EnumName(RequestHeaders_DNTValue_name, int32(x))
}

func (RequestHeaders_DNTValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{3, 2}
}

type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{0}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type HeaderDescriptor struct {
	// name of header commonly appearing in HTTP spec, RFCs,
	// and documentation. E.g. "Access-Control-Allow-Credentials".
	HttpName string `protobuf:"bytes,1,opt,name=http_name,json=httpName,proto3" json:"http_name,omitempty"`
	// header is used in HTTP requests
	Request bool `protobuf:"varint,2,opt,name=request,proto3" json:"request,omitempty"`
	// header is used in HTTP responses
	Response             bool     `protobuf:"varint,3,opt,name=response,proto3" json:"response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeaderDescriptor) Reset()         { *m = HeaderDescriptor{} }
func (m *HeaderDescriptor) String() string { return proto.CompactTextString(m) }
func (*HeaderDescriptor) ProtoMessage()    {}
func (*HeaderDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{1}
}

func (m *HeaderDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderDescriptor.Unmarshal(m, b)
}
func (m *HeaderDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderDescriptor.Marshal(b, m, deterministic)
}
func (m *HeaderDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderDescriptor.Merge(m, src)
}
func (m *HeaderDescriptor) XXX_Size() int {
	return xxx_messageInfo_HeaderDescriptor.Size(m)
}
func (m *HeaderDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderDescriptor proto.InternalMessageInfo

func (m *HeaderDescriptor) GetHttpName() string {
	if m != nil {
		return m.HttpName
	}
	return ""
}

func (m *HeaderDescriptor) GetRequest() bool {
	if m != nil {
		return m.Request
	}
	return false
}

func (m *HeaderDescriptor) GetResponse() bool {
	if m != nil {
		return m.Response
	}
	return false
}

type CacheControlRequest struct {
	Directive            CacheControlRequest_Directives `protobuf:"varint,1,opt,name=directive,proto3,enum=web.CacheControlRequest_Directives" json:"directive,omitempty"`
	Seconds              uint64                         `protobuf:"varint,2,opt,name=seconds,proto3" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CacheControlRequest) Reset()         { *m = CacheControlRequest{} }
func (m *CacheControlRequest) String() string { return proto.CompactTextString(m) }
func (*CacheControlRequest) ProtoMessage()    {}
func (*CacheControlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{2}
}

func (m *CacheControlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheControlRequest.Unmarshal(m, b)
}
func (m *CacheControlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheControlRequest.Marshal(b, m, deterministic)
}
func (m *CacheControlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheControlRequest.Merge(m, src)
}
func (m *CacheControlRequest) XXX_Size() int {
	return xxx_messageInfo_CacheControlRequest.Size(m)
}
func (m *CacheControlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheControlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CacheControlRequest proto.InternalMessageInfo

func (m *CacheControlRequest) GetDirective() CacheControlRequest_Directives {
	if m != nil {
		return m.Directive
	}
	return CacheControlRequest_UNUSED_DIRECTIVE
}

func (m *CacheControlRequest) GetSeconds() uint64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

type RequestHeaders struct {
	Accept                     string `protobuf:"bytes,1,opt,name=accept,proto3" json:"accept,omitempty"`
	AcceptCharset              string `protobuf:"bytes,2,opt,name=accept_charset,json=acceptCharset,proto3" json:"accept_charset,omitempty"`
	AcceptDatetime             string `protobuf:"bytes,3,opt,name=accept_datetime,json=acceptDatetime,proto3" json:"accept_datetime,omitempty"`
	AcceptEncoding             string `protobuf:"bytes,4,opt,name=accept_encoding,json=acceptEncoding,proto3" json:"accept_encoding,omitempty"`
	AcceptLanguage             string `protobuf:"bytes,5,opt,name=accept_language,json=acceptLanguage,proto3" json:"accept_language,omitempty"`
	AccessControlRequestMethod Method `protobuf:"varint,6,opt,name=access_control_request_method,json=accessControlRequestMethod,proto3,enum=web.Method" json:"access_control_request_method,omitempty"`
	// TODO: headers here are just names, no values
	AccessControlRequestHeaders *RequestHeaders      `protobuf:"bytes,7,opt,name=access_control_request_headers,json=accessControlRequestHeaders,proto3" json:"access_control_request_headers,omitempty"`
	Authorization               string               `protobuf:"bytes,8,opt,name=authorization,proto3" json:"authorization,omitempty"`
	CacheControl                *CacheControlRequest `protobuf:"bytes,32,opt,name=cache_control,json=cacheControl,proto3" json:"cache_control,omitempty"`
	Expect                      string               `protobuf:"bytes,9,opt,name=expect,proto3" json:"expect,omitempty"`
	Forwarded                   []*KeyValue          `protobuf:"bytes,10,rep,name=forwarded,proto3" json:"forwarded,omitempty"`
	From                        string               `protobuf:"bytes,11,opt,name=from,proto3" json:"from,omitempty"`
	Host                        string               `protobuf:"bytes,12,opt,name=host,proto3" json:"host,omitempty"`
	Http2Settings               string               `protobuf:"bytes,13,opt,name=http2_settings,json=http2Settings,proto3" json:"http2_settings,omitempty"`
	IfMatch                     string               `protobuf:"bytes,14,opt,name=if_match,json=ifMatch,proto3" json:"if_match,omitempty"`
	IfModifiedSince             *timestamp.Timestamp `protobuf:"bytes,15,opt,name=if_modified_since,json=ifModifiedSince,proto3" json:"if_modified_since,omitempty"`
	IfNoneMatch                 []string             `protobuf:"bytes,16,rep,name=if_none_match,json=ifNoneMatch,proto3" json:"if_none_match,omitempty"`
	IfRange                     string               `protobuf:"bytes,17,opt,name=if_range,json=ifRange,proto3" json:"if_range,omitempty"`
	IfUnmodifiedSince           *timestamp.Timestamp `protobuf:"bytes,18,opt,name=if_unmodified_since,json=ifUnmodifiedSince,proto3" json:"if_unmodified_since,omitempty"`
	MaxForwards                 uint64               `protobuf:"varint,19,opt,name=max_forwards,json=maxForwards,proto3" json:"max_forwards,omitempty"`
	Origin                      string               `protobuf:"bytes,20,opt,name=origin,proto3" json:"origin,omitempty"`
	Pragma                      string               `protobuf:"bytes,21,opt,name=pragma,proto3" json:"pragma,omitempty"`
	ProxyAuthorization          string               `protobuf:"bytes,22,opt,name=proxy_authorization,json=proxyAuthorization,proto3" json:"proxy_authorization,omitempty"`
	// Types that are valid to be assigned to Range:
	//	*RequestHeaders_Bytes
	Range                isRequestHeaders_Range                  `protobuf_oneof:"Range"`
	Referer              string                                  `protobuf:"bytes,24,opt,name=referer,proto3" json:"referer,omitempty"`
	Te                   []RequestHeaders_TransferEncodingsValue `protobuf:"varint,25,rep,packed,name=te,proto3,enum=web.RequestHeaders_TransferEncodingsValue" json:"te,omitempty"`
	UserAgent            string                                  `protobuf:"bytes,26,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Via                  []string                                `protobuf:"bytes,27,rep,name=via,proto3" json:"via,omitempty"`
	Warning              string                                  `protobuf:"bytes,28,opt,name=warning,proto3" json:"warning,omitempty"`
	XRequestedWith       RequestHeaders_XRequestedWithValue      `protobuf:"varint,29,opt,name=x_requested_with,json=xRequestedWith,proto3,enum=web.RequestHeaders_XRequestedWithValue" json:"x_requested_with,omitempty"`
	Dnt                  RequestHeaders_DNTValue                 `protobuf:"varint,30,opt,name=dnt,proto3,enum=web.RequestHeaders_DNTValue" json:"dnt,omitempty"`
	Other                []*KeyValue                             `protobuf:"bytes,31,rep,name=other,proto3" json:"other,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *RequestHeaders) Reset()         { *m = RequestHeaders{} }
func (m *RequestHeaders) String() string { return proto.CompactTextString(m) }
func (*RequestHeaders) ProtoMessage()    {}
func (*RequestHeaders) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{3}
}

func (m *RequestHeaders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestHeaders.Unmarshal(m, b)
}
func (m *RequestHeaders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestHeaders.Marshal(b, m, deterministic)
}
func (m *RequestHeaders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestHeaders.Merge(m, src)
}
func (m *RequestHeaders) XXX_Size() int {
	return xxx_messageInfo_RequestHeaders.Size(m)
}
func (m *RequestHeaders) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestHeaders.DiscardUnknown(m)
}

var xxx_messageInfo_RequestHeaders proto.InternalMessageInfo

func (m *RequestHeaders) GetAccept() string {
	if m != nil {
		return m.Accept
	}
	return ""
}

func (m *RequestHeaders) GetAcceptCharset() string {
	if m != nil {
		return m.AcceptCharset
	}
	return ""
}

func (m *RequestHeaders) GetAcceptDatetime() string {
	if m != nil {
		return m.AcceptDatetime
	}
	return ""
}

func (m *RequestHeaders) GetAcceptEncoding() string {
	if m != nil {
		return m.AcceptEncoding
	}
	return ""
}

func (m *RequestHeaders) GetAcceptLanguage() string {
	if m != nil {
		return m.AcceptLanguage
	}
	return ""
}

func (m *RequestHeaders) GetAccessControlRequestMethod() Method {
	if m != nil {
		return m.AccessControlRequestMethod
	}
	return Method_UNUSED_METHOD
}

func (m *RequestHeaders) GetAccessControlRequestHeaders() *RequestHeaders {
	if m != nil {
		return m.AccessControlRequestHeaders
	}
	return nil
}

func (m *RequestHeaders) GetAuthorization() string {
	if m != nil {
		return m.Authorization
	}
	return ""
}

func (m *RequestHeaders) GetCacheControl() *CacheControlRequest {
	if m != nil {
		return m.CacheControl
	}
	return nil
}

func (m *RequestHeaders) GetExpect() string {
	if m != nil {
		return m.Expect
	}
	return ""
}

func (m *RequestHeaders) GetForwarded() []*KeyValue {
	if m != nil {
		return m.Forwarded
	}
	return nil
}

func (m *RequestHeaders) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *RequestHeaders) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *RequestHeaders) GetHttp2Settings() string {
	if m != nil {
		return m.Http2Settings
	}
	return ""
}

func (m *RequestHeaders) GetIfMatch() string {
	if m != nil {
		return m.IfMatch
	}
	return ""
}

func (m *RequestHeaders) GetIfModifiedSince() *timestamp.Timestamp {
	if m != nil {
		return m.IfModifiedSince
	}
	return nil
}

func (m *RequestHeaders) GetIfNoneMatch() []string {
	if m != nil {
		return m.IfNoneMatch
	}
	return nil
}

func (m *RequestHeaders) GetIfRange() string {
	if m != nil {
		return m.IfRange
	}
	return ""
}

func (m *RequestHeaders) GetIfUnmodifiedSince() *timestamp.Timestamp {
	if m != nil {
		return m.IfUnmodifiedSince
	}
	return nil
}

func (m *RequestHeaders) GetMaxForwards() uint64 {
	if m != nil {
		return m.MaxForwards
	}
	return 0
}

func (m *RequestHeaders) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *RequestHeaders) GetPragma() string {
	if m != nil {
		return m.Pragma
	}
	return ""
}

func (m *RequestHeaders) GetProxyAuthorization() string {
	if m != nil {
		return m.ProxyAuthorization
	}
	return ""
}

type isRequestHeaders_Range interface {
	isRequestHeaders_Range()
}

type RequestHeaders_Bytes struct {
	Bytes *RequestHeaders_ByteRange `protobuf:"bytes,23,opt,name=bytes,proto3,oneof"`
}

func (*RequestHeaders_Bytes) isRequestHeaders_Range() {}

func (m *RequestHeaders) GetRange() isRequestHeaders_Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *RequestHeaders) GetBytes() *RequestHeaders_ByteRange {
	if x, ok := m.GetRange().(*RequestHeaders_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (m *RequestHeaders) GetReferer() string {
	if m != nil {
		return m.Referer
	}
	return ""
}

func (m *RequestHeaders) GetTe() []RequestHeaders_TransferEncodingsValue {
	if m != nil {
		return m.Te
	}
	return nil
}

func (m *RequestHeaders) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *RequestHeaders) GetVia() []string {
	if m != nil {
		return m.Via
	}
	return nil
}

func (m *RequestHeaders) GetWarning() string {
	if m != nil {
		return m.Warning
	}
	return ""
}

func (m *RequestHeaders) GetXRequestedWith() RequestHeaders_XRequestedWithValue {
	if m != nil {
		return m.XRequestedWith
	}
	return RequestHeaders_UNUSED_X_REQUESTED_WITH_VALUE
}

func (m *RequestHeaders) GetDnt() RequestHeaders_DNTValue {
	if m != nil {
		return m.Dnt
	}
	return RequestHeaders_UNUSED_DNT_VALUE
}

func (m *RequestHeaders) GetOther() []*KeyValue {
	if m != nil {
		return m.Other
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RequestHeaders) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RequestHeaders_Bytes)(nil),
	}
}

type RequestHeaders_AcceptHeaders struct {
	ContentTypes         []*RequestHeaders_AcceptHeaders_ContentType `protobuf:"bytes,1,rep,name=content_types,json=contentTypes,proto3" json:"content_types,omitempty"`
	Encoding             []*RequestHeaders_AcceptHeaders_Encoding    `protobuf:"bytes,2,rep,name=encoding,proto3" json:"encoding,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *RequestHeaders_AcceptHeaders) Reset()         { *m = RequestHeaders_AcceptHeaders{} }
func (m *RequestHeaders_AcceptHeaders) String() string { return proto.CompactTextString(m) }
func (*RequestHeaders_AcceptHeaders) ProtoMessage()    {}
func (*RequestHeaders_AcceptHeaders) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{3, 0}
}

func (m *RequestHeaders_AcceptHeaders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestHeaders_AcceptHeaders.Unmarshal(m, b)
}
func (m *RequestHeaders_AcceptHeaders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestHeaders_AcceptHeaders.Marshal(b, m, deterministic)
}
func (m *RequestHeaders_AcceptHeaders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestHeaders_AcceptHeaders.Merge(m, src)
}
func (m *RequestHeaders_AcceptHeaders) XXX_Size() int {
	return xxx_messageInfo_RequestHeaders_AcceptHeaders.Size(m)
}
func (m *RequestHeaders_AcceptHeaders) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestHeaders_AcceptHeaders.DiscardUnknown(m)
}

var xxx_messageInfo_RequestHeaders_AcceptHeaders proto.InternalMessageInfo

func (m *RequestHeaders_AcceptHeaders) GetContentTypes() []*RequestHeaders_AcceptHeaders_ContentType {
	if m != nil {
		return m.ContentTypes
	}
	return nil
}

func (m *RequestHeaders_AcceptHeaders) GetEncoding() []*RequestHeaders_AcceptHeaders_Encoding {
	if m != nil {
		return m.Encoding
	}
	return nil
}

type RequestHeaders_AcceptHeaders_ContentType struct {
	// Types that are valid to be assigned to ContentType:
	//	*RequestHeaders_AcceptHeaders_ContentType_Type
	//	*RequestHeaders_AcceptHeaders_ContentType_AllTypes
	ContentType          isRequestHeaders_AcceptHeaders_ContentType_ContentType `protobuf_oneof:"content_type"`
	Q                    float32                                                `protobuf:"fixed32,3,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                               `json:"-"`
	XXX_unrecognized     []byte                                                 `json:"-"`
	XXX_sizecache        int32                                                  `json:"-"`
}

func (m *RequestHeaders_AcceptHeaders_ContentType) Reset() {
	*m = RequestHeaders_AcceptHeaders_ContentType{}
}
func (m *RequestHeaders_AcceptHeaders_ContentType) String() string { return proto.CompactTextString(m) }
func (*RequestHeaders_AcceptHeaders_ContentType) ProtoMessage()    {}
func (*RequestHeaders_AcceptHeaders_ContentType) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{3, 0, 0}
}

func (m *RequestHeaders_AcceptHeaders_ContentType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestHeaders_AcceptHeaders_ContentType.Unmarshal(m, b)
}
func (m *RequestHeaders_AcceptHeaders_ContentType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestHeaders_AcceptHeaders_ContentType.Marshal(b, m, deterministic)
}
func (m *RequestHeaders_AcceptHeaders_ContentType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestHeaders_AcceptHeaders_ContentType.Merge(m, src)
}
func (m *RequestHeaders_AcceptHeaders_ContentType) XXX_Size() int {
	return xxx_messageInfo_RequestHeaders_AcceptHeaders_ContentType.Size(m)
}
func (m *RequestHeaders_AcceptHeaders_ContentType) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestHeaders_AcceptHeaders_ContentType.DiscardUnknown(m)
}

var xxx_messageInfo_RequestHeaders_AcceptHeaders_ContentType proto.InternalMessageInfo

type isRequestHeaders_AcceptHeaders_ContentType_ContentType interface {
	isRequestHeaders_AcceptHeaders_ContentType_ContentType()
}

type RequestHeaders_AcceptHeaders_ContentType_Type struct {
	Type *MIMEType `protobuf:"bytes,1,opt,name=type,proto3,oneof"`
}

type RequestHeaders_AcceptHeaders_ContentType_AllTypes struct {
	AllTypes Wildcard `protobuf:"varint,2,opt,name=all_types,json=allTypes,proto3,enum=web.Wildcard,oneof"`
}

func (*RequestHeaders_AcceptHeaders_ContentType_Type) isRequestHeaders_AcceptHeaders_ContentType_ContentType() {
}

func (*RequestHeaders_AcceptHeaders_ContentType_AllTypes) isRequestHeaders_AcceptHeaders_ContentType_ContentType() {
}

func (m *RequestHeaders_AcceptHeaders_ContentType) GetContentType() isRequestHeaders_AcceptHeaders_ContentType_ContentType {
	if m != nil {
		return m.ContentType
	}
	return nil
}

func (m *RequestHeaders_AcceptHeaders_ContentType) GetType() *MIMEType {
	if x, ok := m.GetContentType().(*RequestHeaders_AcceptHeaders_ContentType_Type); ok {
		return x.Type
	}
	return nil
}

func (m *RequestHeaders_AcceptHeaders_ContentType) GetAllTypes() Wildcard {
	if x, ok := m.GetContentType().(*RequestHeaders_AcceptHeaders_ContentType_AllTypes); ok {
		return x.AllTypes
	}
	return Wildcard_STAR
}

func (m *RequestHeaders_AcceptHeaders_ContentType) GetQ() float32 {
	if m != nil {
		return m.Q
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RequestHeaders_AcceptHeaders_ContentType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RequestHeaders_AcceptHeaders_ContentType_Type)(nil),
		(*RequestHeaders_AcceptHeaders_ContentType_AllTypes)(nil),
	}
}

type RequestHeaders_AcceptHeaders_Encoding struct {
	Encoding             *RequestHeaders_AcceptHeaders_Encoding `protobuf:"bytes,1,opt,name=encoding,proto3" json:"encoding,omitempty"`
	Q                    float32                                `protobuf:"fixed32,2,opt,name=q,proto3" json:"q,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *RequestHeaders_AcceptHeaders_Encoding) Reset()         { *m = RequestHeaders_AcceptHeaders_Encoding{} }
func (m *RequestHeaders_AcceptHeaders_Encoding) String() string { return proto.CompactTextString(m) }
func (*RequestHeaders_AcceptHeaders_Encoding) ProtoMessage()    {}
func (*RequestHeaders_AcceptHeaders_Encoding) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{3, 0, 1}
}

func (m *RequestHeaders_AcceptHeaders_Encoding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestHeaders_AcceptHeaders_Encoding.Unmarshal(m, b)
}
func (m *RequestHeaders_AcceptHeaders_Encoding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestHeaders_AcceptHeaders_Encoding.Marshal(b, m, deterministic)
}
func (m *RequestHeaders_AcceptHeaders_Encoding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestHeaders_AcceptHeaders_Encoding.Merge(m, src)
}
func (m *RequestHeaders_AcceptHeaders_Encoding) XXX_Size() int {
	return xxx_messageInfo_RequestHeaders_AcceptHeaders_Encoding.Size(m)
}
func (m *RequestHeaders_AcceptHeaders_Encoding) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestHeaders_AcceptHeaders_Encoding.DiscardUnknown(m)
}

var xxx_messageInfo_RequestHeaders_AcceptHeaders_Encoding proto.InternalMessageInfo

func (m *RequestHeaders_AcceptHeaders_Encoding) GetEncoding() *RequestHeaders_AcceptHeaders_Encoding {
	if m != nil {
		return m.Encoding
	}
	return nil
}

func (m *RequestHeaders_AcceptHeaders_Encoding) GetQ() float32 {
	if m != nil {
		return m.Q
	}
	return 0
}

type RequestHeaders_ByteRange struct {
	Start                uint64   `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  uint64   `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestHeaders_ByteRange) Reset()         { *m = RequestHeaders_ByteRange{} }
func (m *RequestHeaders_ByteRange) String() string { return proto.CompactTextString(m) }
func (*RequestHeaders_ByteRange) ProtoMessage()    {}
func (*RequestHeaders_ByteRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_9cec2a7af668f07b, []int{3, 1}
}

func (m *RequestHeaders_ByteRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestHeaders_ByteRange.Unmarshal(m, b)
}
func (m *RequestHeaders_ByteRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestHeaders_ByteRange.Marshal(b, m, deterministic)
}
func (m *RequestHeaders_ByteRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestHeaders_ByteRange.Merge(m, src)
}
func (m *RequestHeaders_ByteRange) XXX_Size() int {
	return xxx_messageInfo_RequestHeaders_ByteRange.Size(m)
}
func (m *RequestHeaders_ByteRange) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestHeaders_ByteRange.DiscardUnknown(m)
}

var xxx_messageInfo_RequestHeaders_ByteRange proto.InternalMessageInfo

func (m *RequestHeaders_ByteRange) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *RequestHeaders_ByteRange) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

var E_HeaderDescriptor = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*HeaderDescriptor)(nil),
	Field:         7982732,
	Name:          "web.header_descriptor",
	Tag:           "bytes,7982732,opt,name=header_descriptor",
	Filename:      "headers.proto",
}

func init() {
	proto.RegisterEnum("web.Wildcard", Wildcard_name, Wildcard_value)
	proto.RegisterEnum("web.Already", Already_name, Already_value)
	proto.RegisterEnum("web.Clear", Clear_name, Clear_value)
	proto.RegisterEnum("web.Method", Method_name, Method_value)
	proto.RegisterEnum("web.CacheControlRequest_Directives", CacheControlRequest_Directives_name, CacheControlRequest_Directives_value)
	proto.RegisterEnum("web.RequestHeaders_TransferEncodingsValue", RequestHeaders_TransferEncodingsValue_name, RequestHeaders_TransferEncodingsValue_value)
	proto.RegisterEnum("web.RequestHeaders_XRequestedWithValue", RequestHeaders_XRequestedWithValue_name, RequestHeaders_XRequestedWithValue_value)
	proto.RegisterEnum("web.RequestHeaders_DNTValue", RequestHeaders_DNTValue_name, RequestHeaders_DNTValue_value)
	proto.RegisterType((*KeyValue)(nil), "web.KeyValue")
	proto.RegisterType((*HeaderDescriptor)(nil), "web.HeaderDescriptor")
	proto.RegisterType((*CacheControlRequest)(nil), "web.CacheControlRequest")
	proto.RegisterType((*RequestHeaders)(nil), "web.RequestHeaders")
	proto.RegisterType((*RequestHeaders_AcceptHeaders)(nil), "web.RequestHeaders.AcceptHeaders")
	proto.RegisterType((*RequestHeaders_AcceptHeaders_ContentType)(nil), "web.RequestHeaders.AcceptHeaders.ContentType")
	proto.RegisterType((*RequestHeaders_AcceptHeaders_Encoding)(nil), "web.RequestHeaders.AcceptHeaders.Encoding")
	proto.RegisterType((*RequestHeaders_ByteRange)(nil), "web.RequestHeaders.ByteRange")
	proto.RegisterExtension(E_HeaderDescriptor)
}

func init() { proto.RegisterFile("headers.proto", fileDescriptor_9cec2a7af668f07b) }

var fileDescriptor_9cec2a7af668f07b = []byte{
	// 1451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xcb, 0x6e, 0xdb, 0xcc,
	0x15, 0xb6, 0xee, 0xd4, 0xd1, 0xc5, 0xf4, 0xd8, 0xbf, 0x3b, 0xbf, 0x12, 0x27, 0x8e, 0xdc, 0x22,
	0x86, 0xdb, 0x28, 0x80, 0x83, 0x6e, 0x52, 0x74, 0x41, 0x4b, 0x74, 0xa4, 0x46, 0xa2, 0x9c, 0x11,
	0x9d, 0x38, 0x9b, 0xb2, 0x34, 0x39, 0x92, 0x88, 0x4a, 0xa4, 0x42, 0x8e, 0x63, 0xab, 0x8b, 0xae,
	0xba, 0x2c, 0xd0, 0x27, 0xe8, 0x1b, 0x74, 0xd9, 0x4d, 0x5f, 0xa7, 0x9b, 0xf6, 0x31, 0x8a, 0xb9,
	0x50, 0x96, 0x5d, 0x05, 0xc1, 0xbf, 0x9b, 0xf3, 0x9d, 0xcb, 0x9c, 0xdb, 0x9c, 0x33, 0x50, 0x9b,
	0x52, 0xd7, 0xa7, 0x71, 0xd2, 0x5a, 0xc4, 0x11, 0x8b, 0x50, 0xee, 0x96, 0x5e, 0x37, 0x9e, 0x4f,
	0xa2, 0x68, 0x32, 0xa3, 0xaf, 0x05, 0x74, 0x7d, 0x33, 0x7e, 0xcd, 0x82, 0x39, 0x4d, 0x98, 0x3b,
	0x5f, 0x48, 0xa9, 0xc6, 0xe1, 0x63, 0x01, 0x9f, 0x26, 0x5e, 0x1c, 0x2c, 0x58, 0x14, 0x2b, 0x09,
	0x98, 0x07, 0x73, 0x2a, 0xcf, 0xcd, 0x53, 0xd0, 0xde, 0xd3, 0xe5, 0x47, 0x77, 0x76, 0x43, 0x91,
	0x0e, 0xb9, 0x3f, 0xd2, 0x25, 0xce, 0x1c, 0x66, 0x8e, 0xcb, 0x84, 0x1f, 0xd1, 0x1e, 0x14, 0xbe,
	0x72, 0x16, 0xce, 0x0a, 0x4c, 0x12, 0x4d, 0x0a, 0x7a, 0x57, 0x38, 0xd6, 0x59, 0x59, 0x46, 0x4f,
	0xa0, 0x3c, 0x65, 0x6c, 0xe1, 0x84, 0xee, 0x9c, 0x2a, 0x0b, 0x1a, 0x07, 0x2c, 0x77, 0x4e, 0x11,
	0x86, 0x52, 0x4c, 0xbf, 0xdc, 0xd0, 0x84, 0x09, 0x43, 0x1a, 0x49, 0x49, 0xd4, 0x00, 0x2d, 0xa6,
	0xc9, 0x22, 0x0a, 0x13, 0x8a, 0x73, 0x82, 0xb5, 0xa2, 0x9b, 0x7f, 0xc9, 0xc2, 0x6e, 0xdb, 0xf5,
	0xa6, 0xb4, 0x1d, 0x85, 0x2c, 0x8e, 0x66, 0x44, 0xe9, 0x18, 0x50, 0xf6, 0x83, 0x98, 0x7a, 0x2c,
	0xf8, 0x2a, 0xaf, 0xaa, 0x9f, 0x1e, 0xb5, 0x6e, 0xe9, 0x75, 0x6b, 0x83, 0x70, 0xab, 0x93, 0x4a,
	0x26, 0xe4, 0x5e, 0x8b, 0x3b, 0x94, 0x50, 0x2f, 0x0a, 0xfd, 0x44, 0x38, 0x94, 0x27, 0x29, 0xd9,
	0xfc, 0x5b, 0x06, 0xe0, 0x5e, 0x07, 0xed, 0x81, 0x7e, 0x69, 0x5d, 0x8e, 0xcc, 0x8e, 0xd3, 0xe9,
	0x11, 0xb3, 0x6d, 0xf7, 0x3e, 0x9a, 0xfa, 0x16, 0xaa, 0x40, 0x69, 0x60, 0x5c, 0x39, 0xc6, 0x3b,
	0x53, 0xcf, 0xa0, 0x1a, 0x94, 0x39, 0x31, 0xb2, 0x8d, 0xbe, 0xa9, 0x67, 0x05, 0xd9, 0xb3, 0x9c,
	0x73, 0x62, 0x8e, 0xba, 0x7a, 0x0e, 0x55, 0x41, 0xb3, 0x86, 0x4e, 0xdb, 0x68, 0x77, 0x4d, 0x3d,
	0xaf, 0xa8, 0x91, 0x3d, 0x24, 0xa6, 0x5e, 0x40, 0x3a, 0x54, 0xad, 0xa1, 0x63, 0x13, 0xc3, 0x1a,
	0x9d, 0x0f, 0xc9, 0x40, 0x2f, 0x22, 0x04, 0xf5, 0xa1, 0xd5, 0xff, 0xec, 0x0c, 0xcf, 0xa5, 0x4a,
	0x47, 0x2f, 0x35, 0xff, 0xa1, 0x43, 0x5d, 0x45, 0x23, 0xb3, 0x9e, 0xa0, 0x7d, 0x28, 0xba, 0x9e,
	0x47, 0x17, 0x4c, 0x65, 0x5a, 0x51, 0xe8, 0x17, 0x50, 0x97, 0x27, 0xc7, 0x9b, 0xba, 0x71, 0x42,
	0x99, 0xaa, 0x5b, 0x4d, 0xa2, 0x6d, 0x09, 0xa2, 0x97, 0xb0, 0xad, 0xc4, 0x7c, 0x97, 0x51, 0xde,
	0x3f, 0x22, 0xf7, 0x65, 0xa2, 0xb4, 0x3b, 0x0a, 0x5d, 0x13, 0xa4, 0xa1, 0x17, 0xf9, 0x41, 0x38,
	0xc1, 0xf9, 0x75, 0x41, 0x53, 0xa1, 0x6b, 0x82, 0x33, 0x37, 0x9c, 0xdc, 0xb8, 0x13, 0x8a, 0x0b,
	0xeb, 0x82, 0x7d, 0x85, 0x22, 0x0b, 0x0e, 0x38, 0x92, 0x24, 0x8e, 0x27, 0xeb, 0xe4, 0xa8, 0x4e,
	0x70, 0xe6, 0x94, 0x4d, 0x23, 0x1f, 0x17, 0x45, 0x3d, 0x2b, 0xa2, 0x9e, 0x03, 0x01, 0x91, 0x86,
	0xd4, 0x78, 0x58, 0x58, 0xc9, 0x43, 0x57, 0xf0, 0xec, 0x1b, 0xf6, 0xd4, 0xd3, 0xc1, 0xa5, 0xc3,
	0xcc, 0x71, 0xe5, 0x74, 0x57, 0x18, 0x7c, 0x98, 0x46, 0xf2, 0x64, 0x93, 0xe1, 0x34, 0xc7, 0x3f,
	0x87, 0x9a, 0x7b, 0xc3, 0xa6, 0x51, 0x1c, 0xfc, 0xc9, 0x65, 0x41, 0x14, 0x62, 0x4d, 0xa5, 0x72,
	0x1d, 0x44, 0xbf, 0x85, 0x9a, 0xc7, 0xbb, 0x2e, 0xbd, 0x1e, 0x1f, 0x8a, 0xeb, 0xf0, 0xb7, 0xfa,
	0x91, 0x54, 0xbd, 0x35, 0x90, 0x17, 0x92, 0xde, 0x2d, 0xa8, 0xc7, 0x70, 0x59, 0x16, 0x52, 0x52,
	0xe8, 0x97, 0x50, 0x1e, 0x47, 0xf1, 0xad, 0x1b, 0xfb, 0xd4, 0xc7, 0x70, 0x98, 0x3b, 0xae, 0x9c,
	0xd6, 0x84, 0xc9, 0xf4, 0xad, 0x92, 0x7b, 0x3e, 0x42, 0x90, 0x1f, 0xc7, 0xd1, 0x1c, 0x57, 0x84,
	0x09, 0x71, 0xe6, 0xd8, 0x34, 0x4a, 0x18, 0xae, 0x4a, 0x8c, 0x9f, 0x79, 0x77, 0xf0, 0x17, 0x79,
	0xea, 0x24, 0x94, 0xb1, 0x20, 0x9c, 0x24, 0xb8, 0x26, 0x43, 0x12, 0xe8, 0x48, 0x81, 0xe8, 0x47,
	0xd0, 0x82, 0xb1, 0x33, 0x77, 0x99, 0x37, 0xc5, 0x75, 0x21, 0x50, 0x0a, 0xc6, 0x03, 0x4e, 0xa2,
	0x73, 0xd8, 0xe1, 0xac, 0xc8, 0x0f, 0xc6, 0x01, 0xf5, 0x9d, 0x24, 0x08, 0x3d, 0x8a, 0xb7, 0x45,
	0xc4, 0x8d, 0x96, 0x1c, 0x3b, 0xad, 0x74, 0xec, 0xb4, 0xec, 0x74, 0x2e, 0x91, 0xed, 0x60, 0x3c,
	0x50, 0x3a, 0x23, 0xae, 0x82, 0x9a, 0x50, 0x0b, 0xc6, 0x4e, 0x18, 0x85, 0x54, 0xdd, 0xa3, 0x1f,
	0xe6, 0x8e, 0xcb, 0xa4, 0x12, 0x8c, 0xad, 0x28, 0xa4, 0xf2, 0x2e, 0xe9, 0x46, 0xec, 0x86, 0x13,
	0x8a, 0x77, 0x52, 0x37, 0x08, 0x27, 0xd1, 0xef, 0x60, 0x37, 0x18, 0x3b, 0x37, 0xe1, 0x23, 0x47,
	0xd0, 0x77, 0x1d, 0xd9, 0x09, 0xc6, 0x97, 0x2b, 0x2d, 0xe9, 0xca, 0x0b, 0xa8, 0xce, 0xdd, 0x3b,
	0x47, 0x65, 0x33, 0xc1, 0xbb, 0x62, 0x1c, 0x54, 0xe6, 0xee, 0xdd, 0xb9, 0x82, 0x78, 0x91, 0xa2,
	0x38, 0x98, 0x04, 0x21, 0xde, 0x93, 0x45, 0x92, 0x14, 0xc7, 0x17, 0xb1, 0x3b, 0x99, 0xbb, 0xf8,
	0x07, 0x89, 0x4b, 0x0a, 0xbd, 0x86, 0xdd, 0x45, 0x1c, 0xdd, 0x2d, 0x9d, 0x87, 0xfd, 0xb3, 0x2f,
	0x84, 0x90, 0x60, 0x19, 0x0f, 0x9a, 0xe8, 0xd7, 0x50, 0xb8, 0x5e, 0x32, 0x9a, 0xe0, 0x9f, 0x89,
	0x08, 0x0e, 0x36, 0xf4, 0x6a, 0xeb, 0x6c, 0xc9, 0xa8, 0x88, 0xbe, 0xbb, 0x45, 0xa4, 0xb4, 0x9c,
	0xaa, 0x63, 0x1a, 0xd3, 0x18, 0x63, 0x99, 0x20, 0x45, 0xa2, 0xb7, 0x90, 0x65, 0x14, 0xff, 0x78,
	0x98, 0x3b, 0xae, 0x9f, 0x9e, 0x6c, 0xb2, 0x66, 0xc7, 0x6e, 0x98, 0x8c, 0x69, 0x9c, 0x3e, 0xe0,
	0x44, 0x36, 0x55, 0x96, 0x51, 0x74, 0x00, 0x70, 0x93, 0xd0, 0xd8, 0x71, 0x27, 0x34, 0x64, 0xb8,
	0x21, 0x0c, 0x97, 0x39, 0x62, 0x70, 0x80, 0xef, 0x88, 0xaf, 0x81, 0x8b, 0x9f, 0x88, 0x82, 0xf1,
	0x23, 0x77, 0xe3, 0xd6, 0x8d, 0x43, 0x3e, 0x1c, 0x9e, 0x4a, 0x37, 0x14, 0x89, 0x3e, 0x80, 0x7e,
	0x97, 0xbe, 0x47, 0xea, 0x3b, 0xb7, 0x01, 0x9b, 0xe2, 0x03, 0xf1, 0xbe, 0x5f, 0x6e, 0x72, 0xea,
	0x8a, 0xa4, 0xa2, 0x9f, 0x02, 0x36, 0x95, 0x1e, 0xd5, 0xef, 0x1e, 0x80, 0xa8, 0x05, 0x39, 0x3f,
	0x64, 0xf8, 0x99, 0xb0, 0xf2, 0x74, 0x93, 0x95, 0x8e, 0x65, 0x4b, 0x55, 0x2e, 0x88, 0x8e, 0xa0,
	0x10, 0xb1, 0x29, 0x8d, 0xf1, 0xf3, 0x4d, 0x8f, 0x48, 0xf2, 0x1a, 0xff, 0xcc, 0x41, 0xcd, 0x10,
	0x73, 0x2a, 0x7d, 0xfc, 0x2e, 0xd4, 0xf8, 0x83, 0xa6, 0x21, 0x73, 0xd8, 0x72, 0x41, 0x13, 0x9c,
	0x11, 0xea, 0xaf, 0x36, 0x5d, 0xf8, 0x40, 0xb3, 0xd5, 0x96, 0x6a, 0xf6, 0x72, 0x41, 0xcf, 0x6a,
	0xff, 0xfe, 0xef, 0xbf, 0x9e, 0x69, 0x50, 0x94, 0x12, 0xa4, 0xea, 0xdd, 0xf3, 0x12, 0xf4, 0x7b,
	0xd0, 0x56, 0x43, 0x35, 0x2b, 0xac, 0x9f, 0x7c, 0xdf, 0x7a, 0x5a, 0xaf, 0xb3, 0x7d, 0x6e, 0x7a,
	0x07, 0xb6, 0x25, 0xfb, 0x55, 0x8a, 0x93, 0x95, 0xcd, 0xc6, 0x9f, 0xa1, 0xb2, 0xe6, 0x0b, 0x3a,
	0x82, 0x3c, 0x8f, 0x44, 0x2c, 0x8c, 0x34, 0x0f, 0x83, 0xde, 0xc0, 0xe4, 0xcc, 0xee, 0x16, 0x11,
	0x4c, 0xf4, 0x2b, 0x28, 0xbb, 0xb3, 0x99, 0x0a, 0x39, 0x2b, 0x72, 0x2c, 0x25, 0x3f, 0x05, 0x33,
	0xdf, 0x73, 0x63, 0xbf, 0xbb, 0x45, 0x34, 0x77, 0x36, 0x93, 0x11, 0x54, 0x21, 0xf3, 0x45, 0x2c,
	0x8e, 0x2c, 0xc9, 0x7c, 0x39, 0xab, 0x43, 0x75, 0x3d, 0x65, 0x8d, 0x3f, 0x80, 0xb6, 0x5a, 0x0f,
	0xe7, 0x6b, 0xb1, 0x4a, 0x07, 0x7e, 0x42, 0xac, 0xf7, 0x31, 0xc9, 0x1b, 0xb3, 0xea, 0xc6, 0xc6,
	0x1b, 0x28, 0xaf, 0x5e, 0x05, 0xff, 0xa9, 0x24, 0xcc, 0x8d, 0xe5, 0x46, 0xcc, 0x13, 0x49, 0xf0,
	0x6e, 0xa5, 0xa1, 0xaf, 0x76, 0x3c, 0x3f, 0x36, 0xdf, 0xc3, 0xfe, 0xe6, 0xe6, 0x47, 0x47, 0xf0,
	0x5c, 0xad, 0x7a, 0xb9, 0x91, 0x4d, 0xe2, 0x98, 0x56, 0x7b, 0xd8, 0xe9, 0x59, 0xef, 0x46, 0xce,
	0x47, 0xa3, 0x7f, 0xc9, 0x37, 0x7f, 0x15, 0x34, 0x9b, 0x18, 0xbd, 0xbe, 0x49, 0x46, 0x7a, 0xa6,
	0xd9, 0x87, 0xdd, 0x0d, 0x4d, 0x8b, 0x5e, 0xc0, 0x81, 0xb2, 0x74, 0xe5, 0x10, 0xf3, 0xc3, 0xa5,
	0x39, 0xb2, 0xcd, 0x8e, 0xf3, 0xa9, 0x67, 0x77, 0x57, 0x76, 0x10, 0xd4, 0xaf, 0x06, 0xfd, 0xae,
	0x6d, 0x5f, 0x28, 0x01, 0x3d, 0xd3, 0xfc, 0x0d, 0x68, 0x69, 0xf3, 0xae, 0xff, 0x3b, 0x2c, 0x7b,
	0xfd, 0xf6, 0x4e, 0x6f, 0x64, 0x9c, 0xf5, 0xcd, 0x8e, 0x9e, 0xe1, 0xbf, 0x10, 0xd3, 0x92, 0x44,
	0xf6, 0xac, 0x04, 0x05, 0x91, 0x88, 0x93, 0x3d, 0xd0, 0xd2, 0x6a, 0x21, 0x0d, 0xf2, 0x23, 0xdb,
	0x20, 0xfa, 0xd6, 0xc9, 0x3e, 0x94, 0x8c, 0x59, 0x4c, 0x5d, 0x7f, 0xc9, 0xd5, 0x8c, 0x3e, 0x31,
	0x8d, 0xce, 0x67, 0x7d, 0xeb, 0x04, 0x41, 0xa1, 0x3d, 0xa3, 0x6e, 0x8c, 0xca, 0x50, 0x68, 0xf7,
	0x4d, 0x21, 0x1b, 0x43, 0x51, 0x6d, 0xd7, 0x1d, 0xa8, 0x29, 0x2f, 0x06, 0xa6, 0xdd, 0x1d, 0x76,
	0xf4, 0x2d, 0x54, 0x82, 0xdc, 0x3b, 0xd3, 0xd6, 0x33, 0xdc, 0x76, 0xd7, 0x34, 0x3a, 0x7a, 0x96,
	0x9f, 0x2e, 0x86, 0x23, 0x5b, 0xcf, 0x71, 0xe6, 0xc5, 0xa5, 0xad, 0xe7, 0x11, 0x40, 0xb1, 0x63,
	0xf6, 0x4d, 0x9b, 0xff, 0x72, 0x2a, 0x50, 0x6a, 0x0f, 0x2d, 0xcb, 0x6c, 0xdb, 0x7a, 0x91, 0x13,
	0xc3, 0x0b, 0xbb, 0x37, 0xb4, 0x46, 0x7a, 0x89, 0xdf, 0x69, 0x13, 0xa3, 0x6d, 0xea, 0xda, 0x5b,
	0x1f, 0x76, 0xe4, 0xc2, 0x76, 0xee, 0x7f, 0xab, 0xe8, 0xe0, 0xff, 0x46, 0xf9, 0x79, 0x40, 0x67,
	0xfe, 0x70, 0xc1, 0xa7, 0x66, 0x82, 0xff, 0xfa, 0xf7, 0xff, 0xe4, 0x44, 0x33, 0xfd, 0x20, 0x9a,
	0xe9, 0xf1, 0x97, 0x94, 0xe8, 0xd3, 0x47, 0xc8, 0x75, 0x51, 0x18, 0x7a, 0xf3, 0xbf, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xc7, 0x04, 0xa5, 0xd9, 0x58, 0x0b, 0x00, 0x00,
}
