// Code generated by protoc-gen-go. DO NOT EDIT.
// source: status.proto

package web

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml
type StatusCodes int32

const (
	StatusCodes_STATUS_CODE_UNUSED              StatusCodes = 0
	StatusCodes_CONTINUE                        StatusCodes = 100
	StatusCodes_SWITCING_PROTOCOLS              StatusCodes = 101
	StatusCodes_PROCESSING                      StatusCodes = 102
	StatusCodes_EARLY_HINTS                     StatusCodes = 103
	StatusCodes_OK                              StatusCodes = 200
	StatusCodes_CREATED                         StatusCodes = 201
	StatusCodes_ACCEPTED                        StatusCodes = 202
	StatusCodes_NON_AUTHORITATIVE_INFORMATION   StatusCodes = 203
	StatusCodes_NO_CONTENT                      StatusCodes = 204
	StatusCodes_RESET_CONTENT                   StatusCodes = 205
	StatusCodes_PARTIAL_CONTENT                 StatusCodes = 206
	StatusCodes_MULTI_STATUS                    StatusCodes = 207
	StatusCodes_ALREADY_REPORTED                StatusCodes = 208
	StatusCodes_IM_USED                         StatusCodes = 226
	StatusCodes_MULTIPLE_CHOICES                StatusCodes = 300
	StatusCodes_MOVED_PERMANENTLY               StatusCodes = 301
	StatusCodes_FOUND                           StatusCodes = 302
	StatusCodes_SEE_OTHER                       StatusCodes = 303
	StatusCodes_NOT_MODIFIED                    StatusCodes = 304
	StatusCodes_USE_PROXY                       StatusCodes = 305
	StatusCodes_TEMPORARY_REDIRECT              StatusCodes = 307
	StatusCodes_PERMANENT_REDIRECT              StatusCodes = 308
	StatusCodes_BAD_REQUEST                     StatusCodes = 400
	StatusCodes_NOT_AUTHORIZED                  StatusCodes = 401
	StatusCodes_PAYMENT_REQUIRED                StatusCodes = 402
	StatusCodes_FORBIDDEN                       StatusCodes = 403
	StatusCodes_NOT_FOUND                       StatusCodes = 404
	StatusCodes_METHOD_NOT_ALLOWED              StatusCodes = 405
	StatusCodes_NOT_ACCEPTABLE                  StatusCodes = 406
	StatusCodes_PROXY_AUTHENTICATION_REQUIRED   StatusCodes = 407
	StatusCodes_REQUEST_TIMEOUT                 StatusCodes = 408
	StatusCodes_CONFLICT                        StatusCodes = 409
	StatusCodes_GONE                            StatusCodes = 410
	StatusCodes_LENGTH_REQUIRED                 StatusCodes = 411
	StatusCodes_PRECONDITION_FAILED             StatusCodes = 412
	StatusCodes_PAYLOAD_TOO_LARGE               StatusCodes = 413
	StatusCodes_URI_TOO_LONG                    StatusCodes = 414
	StatusCodes_UNSUPPORTED_MEDIA_TYPE          StatusCodes = 415
	StatusCodes_RANGE_NOT_SATISFIABLE           StatusCodes = 416
	StatusCodes_EXPECTATION_FAILED              StatusCodes = 417
	StatusCodes_MISDIRECTED_REQUEST             StatusCodes = 421
	StatusCodes_UNPROCESSABLE_ENTITY            StatusCodes = 422
	StatusCodes_LOCKED                          StatusCodes = 423
	StatusCodes_FAILED_DEPENDENCY               StatusCodes = 424
	StatusCodes_TOO_EARLY                       StatusCodes = 425
	StatusCodes_UPGRADE_REQUIRED                StatusCodes = 426
	StatusCodes_PRECONDITION_REQUIRED           StatusCodes = 428
	StatusCodes_TOO_MANY_REQUESTS               StatusCodes = 429
	StatusCodes_REQUEST_HEADER_FIELDS_TOO_LARGE StatusCodes = 431
	StatusCodes_UNAVAILABLE_FOR_LEGAL_REASONS   StatusCodes = 451
	StatusCodes_INTERNAL_SERVER_ERROR           StatusCodes = 500
	StatusCodes_NOT_IMPLEMENTED                 StatusCodes = 501
	StatusCodes_BAD_GATEWAY                     StatusCodes = 502
	StatusCodes_SERVICE_UNAVAILABLE             StatusCodes = 503
	StatusCodes_GATEWAY_TIMEOUT                 StatusCodes = 504
	StatusCodes_HTTP_VERSION_NOT_SUPPORTED      StatusCodes = 505
	StatusCodes_VARIANT_ALSO_NEGOTIATES         StatusCodes = 506
	StatusCodes_INSUFFICIENT_STORAGE            StatusCodes = 507
	StatusCodes_LOOP_DETECTED                   StatusCodes = 508
	StatusCodes_NOT_EXTENDED                    StatusCodes = 510
	StatusCodes_NETWORK_AUTHENTICATION_REQUIRED StatusCodes = 511
)

var StatusCodes_name = map[int32]string{
	0:   "STATUS_CODE_UNUSED",
	100: "CONTINUE",
	101: "SWITCING_PROTOCOLS",
	102: "PROCESSING",
	103: "EARLY_HINTS",
	200: "OK",
	201: "CREATED",
	202: "ACCEPTED",
	203: "NON_AUTHORITATIVE_INFORMATION",
	204: "NO_CONTENT",
	205: "RESET_CONTENT",
	206: "PARTIAL_CONTENT",
	207: "MULTI_STATUS",
	208: "ALREADY_REPORTED",
	226: "IM_USED",
	300: "MULTIPLE_CHOICES",
	301: "MOVED_PERMANENTLY",
	302: "FOUND",
	303: "SEE_OTHER",
	304: "NOT_MODIFIED",
	305: "USE_PROXY",
	307: "TEMPORARY_REDIRECT",
	308: "PERMANENT_REDIRECT",
	400: "BAD_REQUEST",
	401: "NOT_AUTHORIZED",
	402: "PAYMENT_REQUIRED",
	403: "FORBIDDEN",
	404: "NOT_FOUND",
	405: "METHOD_NOT_ALLOWED",
	406: "NOT_ACCEPTABLE",
	407: "PROXY_AUTHENTICATION_REQUIRED",
	408: "REQUEST_TIMEOUT",
	409: "CONFLICT",
	410: "GONE",
	411: "LENGTH_REQUIRED",
	412: "PRECONDITION_FAILED",
	413: "PAYLOAD_TOO_LARGE",
	414: "URI_TOO_LONG",
	415: "UNSUPPORTED_MEDIA_TYPE",
	416: "RANGE_NOT_SATISFIABLE",
	417: "EXPECTATION_FAILED",
	421: "MISDIRECTED_REQUEST",
	422: "UNPROCESSABLE_ENTITY",
	423: "LOCKED",
	424: "FAILED_DEPENDENCY",
	425: "TOO_EARLY",
	426: "UPGRADE_REQUIRED",
	428: "PRECONDITION_REQUIRED",
	429: "TOO_MANY_REQUESTS",
	431: "REQUEST_HEADER_FIELDS_TOO_LARGE",
	451: "UNAVAILABLE_FOR_LEGAL_REASONS",
	500: "INTERNAL_SERVER_ERROR",
	501: "NOT_IMPLEMENTED",
	502: "BAD_GATEWAY",
	503: "SERVICE_UNAVAILABLE",
	504: "GATEWAY_TIMEOUT",
	505: "HTTP_VERSION_NOT_SUPPORTED",
	506: "VARIANT_ALSO_NEGOTIATES",
	507: "INSUFFICIENT_STORAGE",
	508: "LOOP_DETECTED",
	510: "NOT_EXTENDED",
	511: "NETWORK_AUTHENTICATION_REQUIRED",
}

var StatusCodes_value = map[string]int32{
	"STATUS_CODE_UNUSED":              0,
	"CONTINUE":                        100,
	"SWITCING_PROTOCOLS":              101,
	"PROCESSING":                      102,
	"EARLY_HINTS":                     103,
	"OK":                              200,
	"CREATED":                         201,
	"ACCEPTED":                        202,
	"NON_AUTHORITATIVE_INFORMATION":   203,
	"NO_CONTENT":                      204,
	"RESET_CONTENT":                   205,
	"PARTIAL_CONTENT":                 206,
	"MULTI_STATUS":                    207,
	"ALREADY_REPORTED":                208,
	"IM_USED":                         226,
	"MULTIPLE_CHOICES":                300,
	"MOVED_PERMANENTLY":               301,
	"FOUND":                           302,
	"SEE_OTHER":                       303,
	"NOT_MODIFIED":                    304,
	"USE_PROXY":                       305,
	"TEMPORARY_REDIRECT":              307,
	"PERMANENT_REDIRECT":              308,
	"BAD_REQUEST":                     400,
	"NOT_AUTHORIZED":                  401,
	"PAYMENT_REQUIRED":                402,
	"FORBIDDEN":                       403,
	"NOT_FOUND":                       404,
	"METHOD_NOT_ALLOWED":              405,
	"NOT_ACCEPTABLE":                  406,
	"PROXY_AUTHENTICATION_REQUIRED":   407,
	"REQUEST_TIMEOUT":                 408,
	"CONFLICT":                        409,
	"GONE":                            410,
	"LENGTH_REQUIRED":                 411,
	"PRECONDITION_FAILED":             412,
	"PAYLOAD_TOO_LARGE":               413,
	"URI_TOO_LONG":                    414,
	"UNSUPPORTED_MEDIA_TYPE":          415,
	"RANGE_NOT_SATISFIABLE":           416,
	"EXPECTATION_FAILED":              417,
	"MISDIRECTED_REQUEST":             421,
	"UNPROCESSABLE_ENTITY":            422,
	"LOCKED":                          423,
	"FAILED_DEPENDENCY":               424,
	"TOO_EARLY":                       425,
	"UPGRADE_REQUIRED":                426,
	"PRECONDITION_REQUIRED":           428,
	"TOO_MANY_REQUESTS":               429,
	"REQUEST_HEADER_FIELDS_TOO_LARGE": 431,
	"UNAVAILABLE_FOR_LEGAL_REASONS":   451,
	"INTERNAL_SERVER_ERROR":           500,
	"NOT_IMPLEMENTED":                 501,
	"BAD_GATEWAY":                     502,
	"SERVICE_UNAVAILABLE":             503,
	"GATEWAY_TIMEOUT":                 504,
	"HTTP_VERSION_NOT_SUPPORTED":      505,
	"VARIANT_ALSO_NEGOTIATES":         506,
	"INSUFFICIENT_STORAGE":            507,
	"LOOP_DETECTED":                   508,
	"NOT_EXTENDED":                    510,
	"NETWORK_AUTHENTICATION_REQUIRED": 511,
}

func (x StatusCodes) String() string {
	return proto.EnumName(StatusCodes_name, int32(x))
}

func (StatusCodes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_dfe4fce6682daf5b, []int{0}
}

func init() {
	proto.RegisterEnum("web.StatusCodes", StatusCodes_name, StatusCodes_value)
}

func init() { proto.RegisterFile("status.proto", fileDescriptor_dfe4fce6682daf5b) }

var fileDescriptor_dfe4fce6682daf5b = []byte{
	// 966 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x54, 0xcb, 0x72, 0x5c, 0x35,
	0x10, 0x65, 0x46, 0x8e, 0x33, 0x91, 0x1d, 0xbb, 0xa3, 0x24, 0x0e, 0x04, 0xa8, 0x54, 0xb9, 0x58,
	0xb1, 0x60, 0xc3, 0x17, 0xc8, 0x57, 0x7d, 0xef, 0xa8, 0xac, 0x2b, 0xdd, 0x48, 0x7d, 0xc7, 0xbe,
	0x6c, 0x54, 0xa4, 0x62, 0x60, 0x67, 0x0a, 0x9b, 0x62, 0xcb, 0x1f, 0xf0, 0x7e, 0xbf, 0x29, 0xde,
	0x4e, 0x9c, 0x10, 0xe0, 0x07, 0x80, 0x2a, 0xde, 0x04, 0x56, 0xac, 0x81, 0x4f, 0xe0, 0xfd, 0x08,
	0x50, 0xd2, 0xd8, 0x33, 0x61, 0x91, 0x55, 0x97, 0xa4, 0x56, 0x9f, 0xd3, 0xe7, 0xb4, 0xc4, 0xe7,
	0xb7, 0xb6, 0xef, 0xdc, 0xbe, 0x7f, 0xeb, 0xb6, 0x7b, 0xef, 0xdb, 0xdc, 0xde, 0x14, 0xec, 0x81,
	0x8d, 0x33, 0xb7, 0x5e, 0x9e, 0xe3, 0x73, 0x21, 0xef, 0x16, 0x9b, 0x67, 0x37, 0xb6, 0xc4, 0x12,
	0x17, 0x81, 0x24, 0xb5, 0x21, 0x16, 0x4e, 0x61, 0x6c, 0x6d, 0x1b, 0x50, 0xc1, 0x75, 0x62, 0x9e,
	0x0f, 0x0a, 0x67, 0x49, 0xdb, 0x16, 0xe1, 0x6c, 0xce, 0x5a, 0xd3, 0x54, 0x68, 0x5b, 0xc5, 0xc6,
	0x3b, 0x72, 0x85, 0x33, 0x01, 0x36, 0xc4, 0x02, 0xe7, 0x8d, 0x77, 0x05, 0x86, 0xa0, 0x6d, 0x05,
	0x77, 0x89, 0x45, 0x3e, 0x87, 0xd2, 0x9b, 0x2e, 0x0e, 0xb5, 0xa5, 0x00, 0x77, 0x8b, 0x83, 0xbc,
	0xef, 0x56, 0xe1, 0xd3, 0x9e, 0x98, 0xe7, 0x07, 0x0b, 0x8f, 0x92, 0x50, 0xc1, 0x67, 0x3d, 0x71,
	0x98, 0x0f, 0x64, 0x51, 0x60, 0x93, 0x96, 0x9f, 0xf7, 0xc4, 0x32, 0xbf, 0xd9, 0x3a, 0x1b, 0x65,
	0x4b, 0x43, 0xe7, 0x35, 0x49, 0xd2, 0x23, 0x8c, 0xda, 0x96, 0xce, 0xd7, 0x92, 0xb4, 0xb3, 0xf0,
	0x45, 0x4f, 0x2c, 0x72, 0x6e, 0x5d, 0x4c, 0x9c, 0xd0, 0x12, 0x7c, 0xd9, 0x13, 0x82, 0x1f, 0xf6,
	0x18, 0x90, 0x26, 0x7b, 0x5f, 0xf5, 0xc4, 0x31, 0xbe, 0xd8, 0x48, 0x4f, 0x5a, 0x9a, 0xc9, 0xee,
	0xd7, 0x3d, 0x71, 0x84, 0xcf, 0xd7, 0xad, 0x21, 0x1d, 0xc7, 0x9d, 0xc2, 0xe5, 0x9e, 0x38, 0xce,
	0x41, 0x1a, 0x8f, 0x52, 0x75, 0xd1, 0x63, 0xe3, 0x7c, 0x22, 0xf2, 0x4d, 0x66, 0xa9, 0xeb, 0x98,
	0x25, 0xf8, 0x21, 0x27, 0xe5, 0x7b, 0x8d, 0xc1, 0x58, 0x0c, 0x9d, 0x2e, 0x30, 0xc0, 0xb9, 0xbe,
	0x58, 0xe2, 0x47, 0x6a, 0x37, 0x42, 0x15, 0x1b, 0xf4, 0xb5, 0xb4, 0x68, 0xc9, 0x74, 0x70, 0xbe,
	0x2f, 0x38, 0x3f, 0x50, 0xba, 0xd6, 0x2a, 0xd8, 0xed, 0x8b, 0x05, 0x7e, 0x28, 0x20, 0x46, 0x47,
	0x43, 0xf4, 0x70, 0xa1, 0x9f, 0x28, 0x58, 0x47, 0xb1, 0x76, 0x4a, 0x97, 0x1a, 0x15, 0x5c, 0xcc,
	0x29, 0x6d, 0xc0, 0x24, 0xe7, 0x7a, 0x07, 0xef, 0xf6, 0xc5, 0x09, 0x2e, 0x08, 0xeb, 0xc6, 0x79,
	0xe9, 0x13, 0x29, 0xa5, 0x3d, 0x16, 0x04, 0xef, 0xe5, 0x83, 0x09, 0xd2, 0xf4, 0xe0, 0xfd, 0xbe,
	0x00, 0x3e, 0xb7, 0x22, 0x55, 0xf4, 0x78, 0xba, 0xc5, 0x40, 0xf0, 0x30, 0x13, 0x47, 0xf9, 0x42,
	0x82, 0xd9, 0x13, 0xf2, 0x0e, 0x54, 0xf0, 0x08, 0x4b, 0x6d, 0x34, 0xb2, 0xab, 0xc7, 0xb7, 0x4f,
	0xb7, 0xda, 0xa3, 0x82, 0x47, 0x59, 0xc2, 0x2f, 0x9d, 0x5f, 0xd1, 0x4a, 0xa1, 0x85, 0xc7, 0xf2,
	0x3a, 0xdd, 0x1d, 0xb7, 0xf0, 0x38, 0x4b, 0xb0, 0x35, 0xd2, 0xd0, 0xa9, 0x98, 0x4b, 0x1a, 0xe3,
	0xd6, 0x50, 0xc1, 0x13, 0x53, 0x90, 0x6c, 0xa0, 0x5c, 0x31, 0x08, 0x4f, 0xb2, 0x64, 0x61, 0xee,
	0x24, 0x63, 0xa3, 0x25, 0x5d, 0x64, 0xe7, 0xa6, 0x88, 0x4f, 0xb1, 0xe4, 0xce, 0x1e, 0xd7, 0x48,
	0xba, 0x46, 0xd7, 0x12, 0x3c, 0xcd, 0xd2, 0x2c, 0x14, 0xce, 0x96, 0x46, 0x17, 0x04, 0xcf, 0x30,
	0x71, 0x88, 0xcf, 0x54, 0xce, 0x22, 0x3c, 0x9b, 0xf3, 0x0d, 0xda, 0x8a, 0x86, 0xd3, 0x2a, 0xcf,
	0x31, 0x71, 0x3d, 0x3f, 0xda, 0x78, 0x2c, 0x9c, 0x55, 0x3a, 0x23, 0x94, 0x52, 0x1b, 0x54, 0xf0,
	0x3c, 0x4b, 0xc6, 0x34, 0xb2, 0x33, 0x4e, 0xaa, 0x48, 0xce, 0x45, 0x23, 0x7d, 0x85, 0xf0, 0x02,
	0x4b, 0xe2, 0xb7, 0x5e, 0x8f, 0xf7, 0x9c, 0xad, 0xe0, 0x45, 0x26, 0x6e, 0xe4, 0x4b, 0xad, 0x0d,
	0x6d, 0x33, 0xb6, 0x3e, 0xd6, 0xa8, 0xb4, 0x8c, 0xd4, 0x35, 0x08, 0x2f, 0x31, 0x71, 0x92, 0x1f,
	0xf7, 0xd2, 0x56, 0x98, 0x1b, 0x0f, 0x92, 0x74, 0x28, 0x75, 0xee, 0xf3, 0xe5, 0xac, 0x0a, 0xae,
	0x37, 0x58, 0x90, 0xbc, 0x1a, 0xfc, 0x95, 0x4c, 0xab, 0xd6, 0x61, 0x6c, 0x0e, 0x4e, 0x4d, 0x79,
	0x9d, 0x89, 0x1b, 0xf8, 0xb1, 0xd6, 0xee, 0x3d, 0x93, 0x54, 0x26, 0x26, 0x79, 0xa8, 0x83, 0x37,
	0x98, 0x98, 0xe3, 0xb3, 0xc6, 0x15, 0xab, 0xa8, 0xe0, 0xcd, 0x4c, 0x7f, 0x5c, 0x2e, 0x2a, 0x6c,
	0xd0, 0x2a, 0xb4, 0x45, 0x07, 0x6f, 0x65, 0x63, 0x12, 0xf5, 0xfc, 0xb0, 0xe0, 0xed, 0xec, 0x67,
	0xdb, 0x54, 0x5e, 0x2a, 0x9c, 0xea, 0xf2, 0x4e, 0x66, 0xfd, 0x3f, 0x5d, 0x26, 0x67, 0xe7, 0x72,
	0xe9, 0x54, 0xa2, 0x96, 0xb6, 0xdb, 0x67, 0x16, 0xe0, 0x3c, 0x13, 0xb7, 0xf0, 0x53, 0xfb, 0x8e,
	0x0c, 0x51, 0x2a, 0xf4, 0xb1, 0xd4, 0x68, 0x54, 0xb8, 0x4a, 0xbf, 0x0b, 0xd9, 0xdb, 0xd6, 0xca,
	0x91, 0xd4, 0x26, 0xd3, 0x2f, 0x9d, 0x8f, 0x06, 0x2b, 0x69, 0xa2, 0x47, 0x19, 0x9c, 0x0d, 0xf0,
	0x51, 0x46, 0xd7, 0x96, 0xd0, 0x5b, 0x69, 0x62, 0x40, 0x3f, 0x42, 0x1f, 0xd1, 0x7b, 0xe7, 0xe1,
	0xe7, 0xec, 0x63, 0x52, 0x52, 0xd7, 0x8d, 0xc1, 0x34, 0x86, 0xa8, 0xe0, 0x17, 0xb6, 0x3f, 0xbd,
	0x95, 0x24, 0x5c, 0x93, 0x1d, 0xfc, 0x9a, 0x25, 0x4c, 0x57, 0x75, 0x91, 0xfe, 0xa1, 0x09, 0x1e,
	0xfc, 0x96, 0x2b, 0xec, 0xe5, 0x4d, 0x26, 0xe7, 0x77, 0x26, 0x4e, 0xf1, 0x93, 0x43, 0xa2, 0x26,
	0x8e, 0xd0, 0x87, 0xd4, 0x71, 0xb6, 0x6b, 0xdf, 0x53, 0xf8, 0x83, 0x89, 0x9b, 0xf8, 0x89, 0x91,
	0xf4, 0x5a, 0xda, 0x34, 0xbf, 0xc1, 0x45, 0x8b, 0x95, 0x23, 0x2d, 0x09, 0x03, 0xfc, 0x99, 0x7d,
	0xd1, 0x36, 0xb4, 0x65, 0xa9, 0x0b, 0x9d, 0x1e, 0x47, 0x20, 0xe7, 0x65, 0x85, 0xf0, 0x17, 0x4b,
	0x7f, 0x8b, 0x71, 0xae, 0x89, 0x0a, 0x29, 0xdb, 0x09, 0x7f, 0xb3, 0xfd, 0x27, 0x8c, 0xeb, 0x94,
	0xbc, 0x51, 0xf0, 0x4f, 0x96, 0xcf, 0x22, 0xad, 0x39, 0xbf, 0x7a, 0xcd, 0xb1, 0xff, 0x97, 0x2d,
	0x1f, 0x18, 0xdc, 0x03, 0x9f, 0xf4, 0x96, 0x67, 0x07, 0xdf, 0xf6, 0xe0, 0xfb, 0x14, 0x7f, 0xec,
	0xc1, 0x4e, 0x7f, 0x79, 0x76, 0x70, 0xa9, 0x0f, 0x97, 0x52, 0xfc, 0xa0, 0x0f, 0x0f, 0xb1, 0xe5,
	0xd9, 0xc1, 0xab, 0x0c, 0x5e, 0x4b, 0x71, 0x87, 0xc1, 0x4e, 0x8a, 0xbb, 0x0c, 0x76, 0x53, 0xbc,
	0xc8, 0xe0, 0xc3, 0x14, 0x3f, 0x66, 0xf0, 0x53, 0x8a, 0x57, 0x18, 0x5c, 0x49, 0xf1, 0xc1, 0x19,
	0xf8, 0x6e, 0xe6, 0xcc, 0x6c, 0xfe, 0xdd, 0x6f, 0xff, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x39, 0x33,
	0x64, 0x2b, 0xed, 0x05, 0x00, 0x00,
}
