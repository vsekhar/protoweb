syntax = "proto3";

package web;

import "encoding.proto";
import "google/protobuf/timestamp.proto";
import "headers.proto";
import "mime.proto";
import "util.proto";

enum Method {
  UNUSED_METHOD = 0;
  GET = 1;
  HEAD = 2;
  POST = 3;
  PUT = 4;
  DELETE = 5;
  CONNECT = 6;
  OPTIONS = 7;
  TRACE = 8;
}

message RequestHeaders {
  message AcceptHeaders {
    message ContentType {
      oneof content_type {
        MIMEType type = 1;
        bool all_types = 2;
      }
      float q = 3;
    }
    repeated ContentType content_types = 1 [(header_descriptor).http_name = "Accept"];
    // Accept-Charset mostly ignored by browsers:
    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Charset

    message Encoding {
      oneof encoding {
        Encodings value = 1;
        bool wildcard = 2;
      }
      float q = 3;
    }
    repeated Encoding encoding = 2 [(header_descriptor).http_name = "Accept-Encoding"];
    google.protobuf.Timestamp datetime = 3 [(header_descriptor).http_name = "Accept-Datetime"];
  }
  AcceptHeaders accept = 1;
  string accept_language = 5;
  Method access_control_request_method = 6;
  // TODO: headers here are just names, no values
  RequestHeaders access_control_request_headers = 7;
  string authorization = 8;
  CacheControlRequest cache_control = 32;
  string expect = 9;
  repeated KeyValue forwarded = 10;
  string from = 11;
  string host = 12;
  string http2_settings = 13;
  string if_match = 14;
  google.protobuf.Timestamp if_modified_since = 15;
  repeated string if_none_match = 16;
  string if_range = 17;
  google.protobuf.Timestamp if_unmodified_since = 18;
  uint64 max_forwards = 19;
  string origin = 20;
  string pragma = 21;
  string proxy_authorization = 22;
  message ByteRange {
    uint64 start = 1;
    uint64 end = 2;
  }
  oneof Range {
    ByteRange bytes = 23;
  }
  string referer = 24;
  enum TransferEncodingsValue {
    UNUSED_TRANSFER_ENCODINGS_VALUE = 0;
    TRAILERS = 1; // only trailers is supported in HTTP/2
  }
  repeated TransferEncodingsValue te = 25;
  string user_agent = 26;
  repeated string via = 27;
  string warning = 28;
  // common non-standard fields

  enum XRequestedWithValue {
    UNUSED_X_REQUESTED_WITH_VALUE = 0;
    XMLHTTPREQUEST = 1;
  }
  XRequestedWithValue x_requested_with = 29;
  enum DNTValue {
    UNUSED_DNT_VALUE = 0;
    DISABLED = 1;
    ENABLED = 2;
  }
  DNTValue dnt = 30;
  repeated KeyValue other = 31;
  // next field number = 33

}

message Request {
  Method method = 1;
  // TODO: separate absolute vs. relative?
  oneof URI {
    string uri_string = 2;
    bool wildcard = 3; // server-wide "*" request, i.e. OPTIONS
  }
  repeated KeyValue query = 4;
  RequestHeaders header = 5;
}
