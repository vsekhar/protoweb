// Code generated by protoc-gen-go. DO NOT EDIT.
// source: web.proto

package web

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Wildcard is a directive for use inside a oneof.
//
// NB: The oneof handles the unspecified case (when populated by
// one of the other values) so we don't need a *_UNSPECIFIED=0
// value.
type Wildcard int32

const (
	Wildcard_STAR Wildcard = 0
)

var Wildcard_name = map[int32]string{
	0: "STAR",
}

var Wildcard_value = map[string]int32{
	"STAR": 0,
}

func (x Wildcard) String() string {
	return proto.EnumName(Wildcard_name, int32(x))
}

func (Wildcard) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{0}
}

// Already is a directive for use inside a oneof.
//
// NB: The oneof handles the unspecified case (when populated by
// one of the other values) so we don't need a *_UNSPECIFIED=0
// value.
type Already int32

const (
	Already_ALREADY Already = 0
)

var Already_name = map[int32]string{
	0: "ALREADY",
}

var Already_value = map[string]int32{
	"ALREADY": 0,
}

func (x Already) String() string {
	return proto.EnumName(Already_name, int32(x))
}

func (Already) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{1}
}

// Clear is a directive for use inside a oneof.
//
// NB: The oneof handles the unspecified case (when populated by
// one of the other values) so we don't need a *_UNSPECIFIED=0
// value.
type Clear int32

const (
	Clear_CLEAR Clear = 0
)

var Clear_name = map[int32]string{
	0: "CLEAR",
}

var Clear_value = map[string]int32{
	"CLEAR": 0,
}

func (x Clear) String() string {
	return proto.EnumName(Clear_name, int32(x))
}

func (Clear) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2}
}

type CacheControlRequest_Directives int32

const (
	CacheControlRequest_UNUSED_DIRECTIVE CacheControlRequest_Directives = 0
	CacheControlRequest_MAX_AGE          CacheControlRequest_Directives = 1
	CacheControlRequest_MAX_STALE        CacheControlRequest_Directives = 2
	CacheControlRequest_MIN_FRESH        CacheControlRequest_Directives = 3
	CacheControlRequest_NO_CACHE         CacheControlRequest_Directives = 4
	CacheControlRequest_NO_STORE         CacheControlRequest_Directives = 5
	CacheControlRequest_NO_TRANSFORM     CacheControlRequest_Directives = 6
	CacheControlRequest_ONLY_OF_CACHED   CacheControlRequest_Directives = 7
)

var CacheControlRequest_Directives_name = map[int32]string{
	0: "UNUSED_DIRECTIVE",
	1: "MAX_AGE",
	2: "MAX_STALE",
	3: "MIN_FRESH",
	4: "NO_CACHE",
	5: "NO_STORE",
	6: "NO_TRANSFORM",
	7: "ONLY_OF_CACHED",
}

var CacheControlRequest_Directives_value = map[string]int32{
	"UNUSED_DIRECTIVE": 0,
	"MAX_AGE":          1,
	"MAX_STALE":        2,
	"MIN_FRESH":        3,
	"NO_CACHE":         4,
	"NO_STORE":         5,
	"NO_TRANSFORM":     6,
	"ONLY_OF_CACHED":   7,
}

func (x CacheControlRequest_Directives) String() string {
	return proto.EnumName(CacheControlRequest_Directives_name, int32(x))
}

func (CacheControlRequest_Directives) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2, 0}
}

type CacheControlResponse_Directives int32

const (
	CacheControlResponse_UNUSED_DIRECTIVE CacheControlResponse_Directives = 0
	CacheControlResponse_MUST_REVALIDATE  CacheControlResponse_Directives = 1
	CacheControlResponse_NO_CACHE         CacheControlResponse_Directives = 2
	CacheControlResponse_NO_STORE         CacheControlResponse_Directives = 3
	CacheControlResponse_NO_TRANSFORM     CacheControlResponse_Directives = 4
	CacheControlResponse_PUBLIC           CacheControlResponse_Directives = 5
	CacheControlResponse_PRIVATE          CacheControlResponse_Directives = 6
	CacheControlResponse_PROXY_REVALIDATE CacheControlResponse_Directives = 7
	CacheControlResponse_MAX_AGE          CacheControlResponse_Directives = 8
	CacheControlResponse_S_MAXAGE         CacheControlResponse_Directives = 9
)

var CacheControlResponse_Directives_name = map[int32]string{
	0: "UNUSED_DIRECTIVE",
	1: "MUST_REVALIDATE",
	2: "NO_CACHE",
	3: "NO_STORE",
	4: "NO_TRANSFORM",
	5: "PUBLIC",
	6: "PRIVATE",
	7: "PROXY_REVALIDATE",
	8: "MAX_AGE",
	9: "S_MAXAGE",
}

var CacheControlResponse_Directives_value = map[string]int32{
	"UNUSED_DIRECTIVE": 0,
	"MUST_REVALIDATE":  1,
	"NO_CACHE":         2,
	"NO_STORE":         3,
	"NO_TRANSFORM":     4,
	"PUBLIC":           5,
	"PRIVATE":          6,
	"PROXY_REVALIDATE": 7,
	"MAX_AGE":          8,
	"S_MAXAGE":         9,
}

func (x CacheControlResponse_Directives) String() string {
	return proto.EnumName(CacheControlResponse_Directives_name, int32(x))
}

func (CacheControlResponse_Directives) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3, 0}
}

type Request_Method int32

const (
	Request_UNUSED_METHOD Request_Method = 0
	Request_GET           Request_Method = 1
	Request_HEAD          Request_Method = 2
	Request_POST          Request_Method = 3
	Request_PUT           Request_Method = 4
	Request_DELETE        Request_Method = 5
	Request_CONNECT       Request_Method = 6
	Request_OPTIONS       Request_Method = 7
	Request_TRACE         Request_Method = 8
)

var Request_Method_name = map[int32]string{
	0: "UNUSED_METHOD",
	1: "GET",
	2: "HEAD",
	3: "POST",
	4: "PUT",
	5: "DELETE",
	6: "CONNECT",
	7: "OPTIONS",
	8: "TRACE",
}

var Request_Method_value = map[string]int32{
	"UNUSED_METHOD": 0,
	"GET":           1,
	"HEAD":          2,
	"POST":          3,
	"PUT":           4,
	"DELETE":        5,
	"CONNECT":       6,
	"OPTIONS":       7,
	"TRACE":         8,
}

func (x Request_Method) String() string {
	return proto.EnumName(Request_Method_name, int32(x))
}

func (Request_Method) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{4, 0}
}

type Request_Headers_TransferEncodingsValue int32

const (
	Request_Headers_UNUSED_TRANSFER_ENCODINGS_VALUE Request_Headers_TransferEncodingsValue = 0
	Request_Headers_TRAILERS                        Request_Headers_TransferEncodingsValue = 1
)

var Request_Headers_TransferEncodingsValue_name = map[int32]string{
	0: "UNUSED_TRANSFER_ENCODINGS_VALUE",
	1: "TRAILERS",
}

var Request_Headers_TransferEncodingsValue_value = map[string]int32{
	"UNUSED_TRANSFER_ENCODINGS_VALUE": 0,
	"TRAILERS":                        1,
}

func (x Request_Headers_TransferEncodingsValue) String() string {
	return proto.EnumName(Request_Headers_TransferEncodingsValue_name, int32(x))
}

func (Request_Headers_TransferEncodingsValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{4, 0, 0}
}

type Request_Headers_XRequestedWithValue int32

const (
	Request_Headers_UNUSED_X_REQUESTED_WITH_VALUE Request_Headers_XRequestedWithValue = 0
	Request_Headers_XMLHTTPREQUEST                Request_Headers_XRequestedWithValue = 1
)

var Request_Headers_XRequestedWithValue_name = map[int32]string{
	0: "UNUSED_X_REQUESTED_WITH_VALUE",
	1: "XMLHTTPREQUEST",
}

var Request_Headers_XRequestedWithValue_value = map[string]int32{
	"UNUSED_X_REQUESTED_WITH_VALUE": 0,
	"XMLHTTPREQUEST":                1,
}

func (x Request_Headers_XRequestedWithValue) String() string {
	return proto.EnumName(Request_Headers_XRequestedWithValue_name, int32(x))
}

func (Request_Headers_XRequestedWithValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{4, 0, 1}
}

type Request_Headers_DNTValue int32

const (
	Request_Headers_UNUSED_DNT_VALUE Request_Headers_DNTValue = 0
	Request_Headers_DISABLED         Request_Headers_DNTValue = 1
	Request_Headers_ENABLED          Request_Headers_DNTValue = 2
)

var Request_Headers_DNTValue_name = map[int32]string{
	0: "UNUSED_DNT_VALUE",
	1: "DISABLED",
	2: "ENABLED",
}

var Request_Headers_DNTValue_value = map[string]int32{
	"UNUSED_DNT_VALUE": 0,
	"DISABLED":         1,
	"ENABLED":          2,
}

func (x Request_Headers_DNTValue) String() string {
	return proto.EnumName(Request_Headers_DNTValue_name, int32(x))
}

func (Request_Headers_DNTValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{4, 0, 2}
}

type Response_Headers_AccessControlAllowCredentialsValue int32

const (
	Response_Headers_UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE Response_Headers_AccessControlAllowCredentialsValue = 0
	Response_Headers_FALSE                                         Response_Headers_AccessControlAllowCredentialsValue = 1
	Response_Headers_TRUE                                          Response_Headers_AccessControlAllowCredentialsValue = 2
)

var Response_Headers_AccessControlAllowCredentialsValue_name = map[int32]string{
	0: "UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE",
	1: "FALSE",
	2: "TRUE",
}

var Response_Headers_AccessControlAllowCredentialsValue_value = map[string]int32{
	"UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE": 0,
	"FALSE": 1,
	"TRUE":  2,
}

func (x Response_Headers_AccessControlAllowCredentialsValue) String() string {
	return proto.EnumName(Response_Headers_AccessControlAllowCredentialsValue_name, int32(x))
}

func (Response_Headers_AccessControlAllowCredentialsValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{5, 0, 0}
}

type Response_Headers_XFrameOptionsValue int32

const (
	Response_Headers_UNUSED_X_FRAME_OPTIONS_VALUE Response_Headers_XFrameOptionsValue = 0
	Response_Headers_DENY                         Response_Headers_XFrameOptionsValue = 1
	Response_Headers_SAMEORIGIN                   Response_Headers_XFrameOptionsValue = 2
)

var Response_Headers_XFrameOptionsValue_name = map[int32]string{
	0: "UNUSED_X_FRAME_OPTIONS_VALUE",
	1: "DENY",
	2: "SAMEORIGIN",
}

var Response_Headers_XFrameOptionsValue_value = map[string]int32{
	"UNUSED_X_FRAME_OPTIONS_VALUE": 0,
	"DENY":                         1,
	"SAMEORIGIN":                   2,
}

func (x Response_Headers_XFrameOptionsValue) String() string {
	return proto.EnumName(Response_Headers_XFrameOptionsValue_name, int32(x))
}

func (Response_Headers_XFrameOptionsValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{5, 0, 1}
}

type Response_Headers_SetCookieMessage_SameSiteValue int32

const (
	Response_Headers_SetCookieMessage_UNUSED_SAMESITE_VALUE Response_Headers_SetCookieMessage_SameSiteValue = 0
	Response_Headers_SetCookieMessage_STRICT                Response_Headers_SetCookieMessage_SameSiteValue = 1
	Response_Headers_SetCookieMessage_LAX                   Response_Headers_SetCookieMessage_SameSiteValue = 2
	Response_Headers_SetCookieMessage_NONE                  Response_Headers_SetCookieMessage_SameSiteValue = 3
)

var Response_Headers_SetCookieMessage_SameSiteValue_name = map[int32]string{
	0: "UNUSED_SAMESITE_VALUE",
	1: "STRICT",
	2: "LAX",
	3: "NONE",
}

var Response_Headers_SetCookieMessage_SameSiteValue_value = map[string]int32{
	"UNUSED_SAMESITE_VALUE": 0,
	"STRICT":                1,
	"LAX":                   2,
	"NONE":                  3,
}

func (x Response_Headers_SetCookieMessage_SameSiteValue) String() string {
	return proto.EnumName(Response_Headers_SetCookieMessage_SameSiteValue_name, int32(x))
}

func (Response_Headers_SetCookieMessage_SameSiteValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{5, 0, 1, 0}
}

type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{0}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// StringList is used when a list of strings is needed inside
// a oneof, since oneof's don't support repeated fields.
type StringList struct {
	Strings              []string `protobuf:"bytes,1,rep,name=strings,proto3" json:"strings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringList) Reset()         { *m = StringList{} }
func (m *StringList) String() string { return proto.CompactTextString(m) }
func (*StringList) ProtoMessage()    {}
func (*StringList) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{1}
}

func (m *StringList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringList.Unmarshal(m, b)
}
func (m *StringList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringList.Marshal(b, m, deterministic)
}
func (m *StringList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringList.Merge(m, src)
}
func (m *StringList) XXX_Size() int {
	return xxx_messageInfo_StringList.Size(m)
}
func (m *StringList) XXX_DiscardUnknown() {
	xxx_messageInfo_StringList.DiscardUnknown(m)
}

var xxx_messageInfo_StringList proto.InternalMessageInfo

func (m *StringList) GetStrings() []string {
	if m != nil {
		return m.Strings
	}
	return nil
}

type CacheControlRequest struct {
	Directive            CacheControlRequest_Directives `protobuf:"varint,1,opt,name=directive,proto3,enum=web.CacheControlRequest_Directives" json:"directive,omitempty"`
	Seconds              uint64                         `protobuf:"varint,2,opt,name=seconds,proto3" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CacheControlRequest) Reset()         { *m = CacheControlRequest{} }
func (m *CacheControlRequest) String() string { return proto.CompactTextString(m) }
func (*CacheControlRequest) ProtoMessage()    {}
func (*CacheControlRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2}
}

func (m *CacheControlRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheControlRequest.Unmarshal(m, b)
}
func (m *CacheControlRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheControlRequest.Marshal(b, m, deterministic)
}
func (m *CacheControlRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheControlRequest.Merge(m, src)
}
func (m *CacheControlRequest) XXX_Size() int {
	return xxx_messageInfo_CacheControlRequest.Size(m)
}
func (m *CacheControlRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheControlRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CacheControlRequest proto.InternalMessageInfo

func (m *CacheControlRequest) GetDirective() CacheControlRequest_Directives {
	if m != nil {
		return m.Directive
	}
	return CacheControlRequest_UNUSED_DIRECTIVE
}

func (m *CacheControlRequest) GetSeconds() uint64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

type CacheControlResponse struct {
	Directive            CacheControlResponse_Directives `protobuf:"varint,1,opt,name=directive,proto3,enum=web.CacheControlResponse_Directives" json:"directive,omitempty"`
	Seconds              uint64                          `protobuf:"varint,2,opt,name=seconds,proto3" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CacheControlResponse) Reset()         { *m = CacheControlResponse{} }
func (m *CacheControlResponse) String() string { return proto.CompactTextString(m) }
func (*CacheControlResponse) ProtoMessage()    {}
func (*CacheControlResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3}
}

func (m *CacheControlResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CacheControlResponse.Unmarshal(m, b)
}
func (m *CacheControlResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CacheControlResponse.Marshal(b, m, deterministic)
}
func (m *CacheControlResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CacheControlResponse.Merge(m, src)
}
func (m *CacheControlResponse) XXX_Size() int {
	return xxx_messageInfo_CacheControlResponse.Size(m)
}
func (m *CacheControlResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CacheControlResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CacheControlResponse proto.InternalMessageInfo

func (m *CacheControlResponse) GetDirective() CacheControlResponse_Directives {
	if m != nil {
		return m.Directive
	}
	return CacheControlResponse_UNUSED_DIRECTIVE
}

func (m *CacheControlResponse) GetSeconds() uint64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

type Request struct {
	Method Request_Method `protobuf:"varint,1,opt,name=method,proto3,enum=web.Request_Method" json:"method,omitempty"`
	// TODO: separate absolute vs. relative?
	//
	// Types that are valid to be assigned to URI:
	//	*Request_UriWildcard
	//	*Request_UriString
	URI   isRequest_URI `protobuf_oneof:"URI"`
	Query []*KeyValue   `protobuf:"bytes,4,rep,name=query,proto3" json:"query,omitempty"`
	// message Headers
	Header               *Request_Headers `protobuf:"bytes,5,opt,name=header,proto3" json:"header,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{4}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetMethod() Request_Method {
	if m != nil {
		return m.Method
	}
	return Request_UNUSED_METHOD
}

type isRequest_URI interface {
	isRequest_URI()
}

type Request_UriWildcard struct {
	UriWildcard Wildcard `protobuf:"varint,2,opt,name=uri_wildcard,json=uriWildcard,proto3,enum=web.Wildcard,oneof"`
}

type Request_UriString struct {
	UriString string `protobuf:"bytes,3,opt,name=uri_string,json=uriString,proto3,oneof"`
}

func (*Request_UriWildcard) isRequest_URI() {}

func (*Request_UriString) isRequest_URI() {}

func (m *Request) GetURI() isRequest_URI {
	if m != nil {
		return m.URI
	}
	return nil
}

func (m *Request) GetUriWildcard() Wildcard {
	if x, ok := m.GetURI().(*Request_UriWildcard); ok {
		return x.UriWildcard
	}
	return Wildcard_STAR
}

func (m *Request) GetUriString() string {
	if x, ok := m.GetURI().(*Request_UriString); ok {
		return x.UriString
	}
	return ""
}

func (m *Request) GetQuery() []*KeyValue {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *Request) GetHeader() *Request_Headers {
	if m != nil {
		return m.Header
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Request) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Request_UriWildcard)(nil),
		(*Request_UriString)(nil),
	}
}

type Request_Headers struct {
	Accept                      string               `protobuf:"bytes,1,opt,name=accept,proto3" json:"accept,omitempty"`
	AcceptCharset               string               `protobuf:"bytes,2,opt,name=accept_charset,json=acceptCharset,proto3" json:"accept_charset,omitempty"`
	AcceptDatetime              string               `protobuf:"bytes,3,opt,name=accept_datetime,json=acceptDatetime,proto3" json:"accept_datetime,omitempty"`
	AcceptEncoding              string               `protobuf:"bytes,4,opt,name=accept_encoding,json=acceptEncoding,proto3" json:"accept_encoding,omitempty"`
	AcceptLanguage              string               `protobuf:"bytes,5,opt,name=accept_language,json=acceptLanguage,proto3" json:"accept_language,omitempty"`
	AccessControlRequestMethod  Request_Method       `protobuf:"varint,6,opt,name=access_control_request_method,json=accessControlRequestMethod,proto3,enum=web.Request_Method" json:"access_control_request_method,omitempty"`
	AccessControlRequestHeaders *Request_Headers     `protobuf:"bytes,7,opt,name=access_control_request_headers,json=accessControlRequestHeaders,proto3" json:"access_control_request_headers,omitempty"`
	Authorization               string               `protobuf:"bytes,8,opt,name=authorization,proto3" json:"authorization,omitempty"`
	CacheControl                *CacheControlRequest `protobuf:"bytes,32,opt,name=cache_control,json=cacheControl,proto3" json:"cache_control,omitempty"`
	Expect                      string               `protobuf:"bytes,9,opt,name=expect,proto3" json:"expect,omitempty"`
	Forwarded                   []*KeyValue          `protobuf:"bytes,10,rep,name=forwarded,proto3" json:"forwarded,omitempty"`
	From                        string               `protobuf:"bytes,11,opt,name=from,proto3" json:"from,omitempty"`
	Host                        string               `protobuf:"bytes,12,opt,name=host,proto3" json:"host,omitempty"`
	Http2Settings               string               `protobuf:"bytes,13,opt,name=http2_settings,json=http2Settings,proto3" json:"http2_settings,omitempty"`
	IfMatch                     string               `protobuf:"bytes,14,opt,name=if_match,json=ifMatch,proto3" json:"if_match,omitempty"`
	IfModifiedSince             *timestamp.Timestamp `protobuf:"bytes,15,opt,name=if_modified_since,json=ifModifiedSince,proto3" json:"if_modified_since,omitempty"`
	IfNoneMatch                 []string             `protobuf:"bytes,16,rep,name=if_none_match,json=ifNoneMatch,proto3" json:"if_none_match,omitempty"`
	IfRange                     string               `protobuf:"bytes,17,opt,name=if_range,json=ifRange,proto3" json:"if_range,omitempty"`
	IfUnmodifiedSince           *timestamp.Timestamp `protobuf:"bytes,18,opt,name=if_unmodified_since,json=ifUnmodifiedSince,proto3" json:"if_unmodified_since,omitempty"`
	MaxForwards                 uint64               `protobuf:"varint,19,opt,name=max_forwards,json=maxForwards,proto3" json:"max_forwards,omitempty"`
	Origin                      string               `protobuf:"bytes,20,opt,name=origin,proto3" json:"origin,omitempty"`
	Pragma                      string               `protobuf:"bytes,21,opt,name=pragma,proto3" json:"pragma,omitempty"`
	ProxyAuthorization          string               `protobuf:"bytes,22,opt,name=proxy_authorization,json=proxyAuthorization,proto3" json:"proxy_authorization,omitempty"`
	// Types that are valid to be assigned to Range:
	//	*Request_Headers_Bytes
	Range                isRequest_Headers_Range                  `protobuf_oneof:"Range"`
	Referer              string                                   `protobuf:"bytes,24,opt,name=referer,proto3" json:"referer,omitempty"`
	Te                   []Request_Headers_TransferEncodingsValue `protobuf:"varint,25,rep,packed,name=te,proto3,enum=web.Request_Headers_TransferEncodingsValue" json:"te,omitempty"`
	UserAgent            string                                   `protobuf:"bytes,26,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	Via                  []string                                 `protobuf:"bytes,27,rep,name=via,proto3" json:"via,omitempty"`
	Warning              string                                   `protobuf:"bytes,28,opt,name=warning,proto3" json:"warning,omitempty"`
	XRequestedWith       Request_Headers_XRequestedWithValue      `protobuf:"varint,29,opt,name=x_requested_with,json=xRequestedWith,proto3,enum=web.Request_Headers_XRequestedWithValue" json:"x_requested_with,omitempty"`
	Dnt                  Request_Headers_DNTValue                 `protobuf:"varint,30,opt,name=dnt,proto3,enum=web.Request_Headers_DNTValue" json:"dnt,omitempty"`
	Other                []*KeyValue                              `protobuf:"bytes,31,rep,name=other,proto3" json:"other,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *Request_Headers) Reset()         { *m = Request_Headers{} }
func (m *Request_Headers) String() string { return proto.CompactTextString(m) }
func (*Request_Headers) ProtoMessage()    {}
func (*Request_Headers) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{4, 0}
}

func (m *Request_Headers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request_Headers.Unmarshal(m, b)
}
func (m *Request_Headers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request_Headers.Marshal(b, m, deterministic)
}
func (m *Request_Headers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request_Headers.Merge(m, src)
}
func (m *Request_Headers) XXX_Size() int {
	return xxx_messageInfo_Request_Headers.Size(m)
}
func (m *Request_Headers) XXX_DiscardUnknown() {
	xxx_messageInfo_Request_Headers.DiscardUnknown(m)
}

var xxx_messageInfo_Request_Headers proto.InternalMessageInfo

func (m *Request_Headers) GetAccept() string {
	if m != nil {
		return m.Accept
	}
	return ""
}

func (m *Request_Headers) GetAcceptCharset() string {
	if m != nil {
		return m.AcceptCharset
	}
	return ""
}

func (m *Request_Headers) GetAcceptDatetime() string {
	if m != nil {
		return m.AcceptDatetime
	}
	return ""
}

func (m *Request_Headers) GetAcceptEncoding() string {
	if m != nil {
		return m.AcceptEncoding
	}
	return ""
}

func (m *Request_Headers) GetAcceptLanguage() string {
	if m != nil {
		return m.AcceptLanguage
	}
	return ""
}

func (m *Request_Headers) GetAccessControlRequestMethod() Request_Method {
	if m != nil {
		return m.AccessControlRequestMethod
	}
	return Request_UNUSED_METHOD
}

func (m *Request_Headers) GetAccessControlRequestHeaders() *Request_Headers {
	if m != nil {
		return m.AccessControlRequestHeaders
	}
	return nil
}

func (m *Request_Headers) GetAuthorization() string {
	if m != nil {
		return m.Authorization
	}
	return ""
}

func (m *Request_Headers) GetCacheControl() *CacheControlRequest {
	if m != nil {
		return m.CacheControl
	}
	return nil
}

func (m *Request_Headers) GetExpect() string {
	if m != nil {
		return m.Expect
	}
	return ""
}

func (m *Request_Headers) GetForwarded() []*KeyValue {
	if m != nil {
		return m.Forwarded
	}
	return nil
}

func (m *Request_Headers) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Request_Headers) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Request_Headers) GetHttp2Settings() string {
	if m != nil {
		return m.Http2Settings
	}
	return ""
}

func (m *Request_Headers) GetIfMatch() string {
	if m != nil {
		return m.IfMatch
	}
	return ""
}

func (m *Request_Headers) GetIfModifiedSince() *timestamp.Timestamp {
	if m != nil {
		return m.IfModifiedSince
	}
	return nil
}

func (m *Request_Headers) GetIfNoneMatch() []string {
	if m != nil {
		return m.IfNoneMatch
	}
	return nil
}

func (m *Request_Headers) GetIfRange() string {
	if m != nil {
		return m.IfRange
	}
	return ""
}

func (m *Request_Headers) GetIfUnmodifiedSince() *timestamp.Timestamp {
	if m != nil {
		return m.IfUnmodifiedSince
	}
	return nil
}

func (m *Request_Headers) GetMaxForwards() uint64 {
	if m != nil {
		return m.MaxForwards
	}
	return 0
}

func (m *Request_Headers) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *Request_Headers) GetPragma() string {
	if m != nil {
		return m.Pragma
	}
	return ""
}

func (m *Request_Headers) GetProxyAuthorization() string {
	if m != nil {
		return m.ProxyAuthorization
	}
	return ""
}

type isRequest_Headers_Range interface {
	isRequest_Headers_Range()
}

type Request_Headers_Bytes struct {
	Bytes *Request_Headers_ByteRange `protobuf:"bytes,23,opt,name=bytes,proto3,oneof"`
}

func (*Request_Headers_Bytes) isRequest_Headers_Range() {}

func (m *Request_Headers) GetRange() isRequest_Headers_Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *Request_Headers) GetBytes() *Request_Headers_ByteRange {
	if x, ok := m.GetRange().(*Request_Headers_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (m *Request_Headers) GetReferer() string {
	if m != nil {
		return m.Referer
	}
	return ""
}

func (m *Request_Headers) GetTe() []Request_Headers_TransferEncodingsValue {
	if m != nil {
		return m.Te
	}
	return nil
}

func (m *Request_Headers) GetUserAgent() string {
	if m != nil {
		return m.UserAgent
	}
	return ""
}

func (m *Request_Headers) GetVia() []string {
	if m != nil {
		return m.Via
	}
	return nil
}

func (m *Request_Headers) GetWarning() string {
	if m != nil {
		return m.Warning
	}
	return ""
}

func (m *Request_Headers) GetXRequestedWith() Request_Headers_XRequestedWithValue {
	if m != nil {
		return m.XRequestedWith
	}
	return Request_Headers_UNUSED_X_REQUESTED_WITH_VALUE
}

func (m *Request_Headers) GetDnt() Request_Headers_DNTValue {
	if m != nil {
		return m.Dnt
	}
	return Request_Headers_UNUSED_DNT_VALUE
}

func (m *Request_Headers) GetOther() []*KeyValue {
	if m != nil {
		return m.Other
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Request_Headers) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Request_Headers_Bytes)(nil),
	}
}

type Request_Headers_ByteRange struct {
	Start                uint64   `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  uint64   `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request_Headers_ByteRange) Reset()         { *m = Request_Headers_ByteRange{} }
func (m *Request_Headers_ByteRange) String() string { return proto.CompactTextString(m) }
func (*Request_Headers_ByteRange) ProtoMessage()    {}
func (*Request_Headers_ByteRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{4, 0, 0}
}

func (m *Request_Headers_ByteRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request_Headers_ByteRange.Unmarshal(m, b)
}
func (m *Request_Headers_ByteRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request_Headers_ByteRange.Marshal(b, m, deterministic)
}
func (m *Request_Headers_ByteRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request_Headers_ByteRange.Merge(m, src)
}
func (m *Request_Headers_ByteRange) XXX_Size() int {
	return xxx_messageInfo_Request_Headers_ByteRange.Size(m)
}
func (m *Request_Headers_ByteRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Request_Headers_ByteRange.DiscardUnknown(m)
}

var xxx_messageInfo_Request_Headers_ByteRange proto.InternalMessageInfo

func (m *Request_Headers_ByteRange) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Request_Headers_ByteRange) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

type Response struct {
	Status StatusCodes `protobuf:"varint,1,opt,name=status,proto3,enum=web.StatusCodes" json:"status,omitempty"`
	// message Headers
	Header               *Response_Headers `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Body                 []byte            `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{5}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() StatusCodes {
	if m != nil {
		return m.Status
	}
	return StatusCodes_STATUS_CODE_UNUSED
}

func (m *Response) GetHeader() *Response_Headers {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Response) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Response_Headers struct {
	// Types that are valid to be assigned to AccessControlAllowOrigin:
	//	*Response_Headers_AccessControlAllowOriginAll
	//	*Response_Headers_AccessControlAllowOriginOrigins
	AccessControlAllowOrigin      isResponse_Headers_AccessControlAllowOrigin         `protobuf_oneof:"AccessControlAllowOrigin"`
	AccessControlAllowCredentials Response_Headers_AccessControlAllowCredentialsValue `protobuf:"varint,3,opt,name=access_control_allow_credentials,json=accessControlAllowCredentials,proto3,enum=web.Response_Headers_AccessControlAllowCredentialsValue" json:"access_control_allow_credentials,omitempty"`
	AccessControlExposeHeaders    []string                                            `protobuf:"bytes,4,rep,name=access_control_expose_headers,json=accessControlExposeHeaders,proto3" json:"access_control_expose_headers,omitempty"`
	// Types that are valid to be assigned to Alt_Svc:
	//	*Response_Headers_AltSvcClear
	//	*Response_Headers_Service
	Alt_Svc      isResponse_Headers_Alt_Svc `protobuf_oneof:"Alt_Svc"`
	CacheControl *CacheControlResponse      `protobuf:"bytes,18,opt,name=cache_control,json=cacheControl,proto3" json:"cache_control,omitempty"`
	ContentType  *MIMEType                  `protobuf:"bytes,7,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Date         *timestamp.Timestamp       `protobuf:"bytes,8,opt,name=date,proto3" json:"date,omitempty"`
	// Types that are valid to be assigned to Expires:
	//	*Response_Headers_ExpiresAlready
	//	*Response_Headers_ExpiresDate
	Expires isResponse_Headers_Expires `protobuf_oneof:"Expires"`
	Server  string                     `protobuf:"bytes,11,opt,name=server,proto3" json:"server,omitempty"`
	// Types that are valid to be assigned to Vary:
	//	*Response_Headers_VaryAll
	//	*Response_Headers_VaryHeaders
	Vary                 isResponse_Headers_Vary              `protobuf_oneof:"Vary"`
	XFrameOptions        Response_Headers_XFrameOptionsValue  `protobuf:"varint,14,opt,name=x_frame_options,json=xFrameOptions,proto3,enum=web.Response_Headers_XFrameOptionsValue" json:"x_frame_options,omitempty"`
	XXssProtection       string                               `protobuf:"bytes,15,opt,name=x_xss_protection,json=xXssProtection,proto3" json:"x_xss_protection,omitempty"`
	SetCookie            []*Response_Headers_SetCookieMessage `protobuf:"bytes,16,rep,name=set_cookie,json=setCookie,proto3" json:"set_cookie,omitempty"`
	Other                []*KeyValue                          `protobuf:"bytes,17,rep,name=other,proto3" json:"other,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Response_Headers) Reset()         { *m = Response_Headers{} }
func (m *Response_Headers) String() string { return proto.CompactTextString(m) }
func (*Response_Headers) ProtoMessage()    {}
func (*Response_Headers) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{5, 0}
}

func (m *Response_Headers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers.Unmarshal(m, b)
}
func (m *Response_Headers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers.Marshal(b, m, deterministic)
}
func (m *Response_Headers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers.Merge(m, src)
}
func (m *Response_Headers) XXX_Size() int {
	return xxx_messageInfo_Response_Headers.Size(m)
}
func (m *Response_Headers) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers proto.InternalMessageInfo

type isResponse_Headers_AccessControlAllowOrigin interface {
	isResponse_Headers_AccessControlAllowOrigin()
}

type Response_Headers_AccessControlAllowOriginAll struct {
	AccessControlAllowOriginAll Wildcard `protobuf:"varint,1,opt,name=access_control_allow_origin_all,json=accessControlAllowOriginAll,proto3,enum=web.Wildcard,oneof"`
}

type Response_Headers_AccessControlAllowOriginOrigins struct {
	AccessControlAllowOriginOrigins *StringList `protobuf:"bytes,2,opt,name=access_control_allow_origin_origins,json=accessControlAllowOriginOrigins,proto3,oneof"`
}

func (*Response_Headers_AccessControlAllowOriginAll) isResponse_Headers_AccessControlAllowOrigin() {}

func (*Response_Headers_AccessControlAllowOriginOrigins) isResponse_Headers_AccessControlAllowOrigin() {
}

func (m *Response_Headers) GetAccessControlAllowOrigin() isResponse_Headers_AccessControlAllowOrigin {
	if m != nil {
		return m.AccessControlAllowOrigin
	}
	return nil
}

func (m *Response_Headers) GetAccessControlAllowOriginAll() Wildcard {
	if x, ok := m.GetAccessControlAllowOrigin().(*Response_Headers_AccessControlAllowOriginAll); ok {
		return x.AccessControlAllowOriginAll
	}
	return Wildcard_STAR
}

func (m *Response_Headers) GetAccessControlAllowOriginOrigins() *StringList {
	if x, ok := m.GetAccessControlAllowOrigin().(*Response_Headers_AccessControlAllowOriginOrigins); ok {
		return x.AccessControlAllowOriginOrigins
	}
	return nil
}

func (m *Response_Headers) GetAccessControlAllowCredentials() Response_Headers_AccessControlAllowCredentialsValue {
	if m != nil {
		return m.AccessControlAllowCredentials
	}
	return Response_Headers_UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE
}

func (m *Response_Headers) GetAccessControlExposeHeaders() []string {
	if m != nil {
		return m.AccessControlExposeHeaders
	}
	return nil
}

type isResponse_Headers_Alt_Svc interface {
	isResponse_Headers_Alt_Svc()
}

type Response_Headers_AltSvcClear struct {
	AltSvcClear Clear `protobuf:"varint,5,opt,name=alt_svc_clear,json=altSvcClear,proto3,enum=web.Clear,oneof"`
}

type Response_Headers_Service struct {
	Service *Response_Headers_AltSvcMessage `protobuf:"bytes,6,opt,name=service,proto3,oneof"`
}

func (*Response_Headers_AltSvcClear) isResponse_Headers_Alt_Svc() {}

func (*Response_Headers_Service) isResponse_Headers_Alt_Svc() {}

func (m *Response_Headers) GetAlt_Svc() isResponse_Headers_Alt_Svc {
	if m != nil {
		return m.Alt_Svc
	}
	return nil
}

func (m *Response_Headers) GetAltSvcClear() Clear {
	if x, ok := m.GetAlt_Svc().(*Response_Headers_AltSvcClear); ok {
		return x.AltSvcClear
	}
	return Clear_CLEAR
}

func (m *Response_Headers) GetService() *Response_Headers_AltSvcMessage {
	if x, ok := m.GetAlt_Svc().(*Response_Headers_Service); ok {
		return x.Service
	}
	return nil
}

func (m *Response_Headers) GetCacheControl() *CacheControlResponse {
	if m != nil {
		return m.CacheControl
	}
	return nil
}

func (m *Response_Headers) GetContentType() *MIMEType {
	if m != nil {
		return m.ContentType
	}
	return nil
}

func (m *Response_Headers) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type isResponse_Headers_Expires interface {
	isResponse_Headers_Expires()
}

type Response_Headers_ExpiresAlready struct {
	ExpiresAlready Already `protobuf:"varint,9,opt,name=expires_already,json=expiresAlready,proto3,enum=web.Already,oneof"`
}

type Response_Headers_ExpiresDate struct {
	ExpiresDate *timestamp.Timestamp `protobuf:"bytes,10,opt,name=expires_date,json=expiresDate,proto3,oneof"`
}

func (*Response_Headers_ExpiresAlready) isResponse_Headers_Expires() {}

func (*Response_Headers_ExpiresDate) isResponse_Headers_Expires() {}

func (m *Response_Headers) GetExpires() isResponse_Headers_Expires {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *Response_Headers) GetExpiresAlready() Already {
	if x, ok := m.GetExpires().(*Response_Headers_ExpiresAlready); ok {
		return x.ExpiresAlready
	}
	return Already_ALREADY
}

func (m *Response_Headers) GetExpiresDate() *timestamp.Timestamp {
	if x, ok := m.GetExpires().(*Response_Headers_ExpiresDate); ok {
		return x.ExpiresDate
	}
	return nil
}

func (m *Response_Headers) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

type isResponse_Headers_Vary interface {
	isResponse_Headers_Vary()
}

type Response_Headers_VaryAll struct {
	VaryAll Wildcard `protobuf:"varint,12,opt,name=vary_all,json=varyAll,proto3,enum=web.Wildcard,oneof"`
}

type Response_Headers_VaryHeaders struct {
	VaryHeaders *StringList `protobuf:"bytes,13,opt,name=vary_headers,json=varyHeaders,proto3,oneof"`
}

func (*Response_Headers_VaryAll) isResponse_Headers_Vary() {}

func (*Response_Headers_VaryHeaders) isResponse_Headers_Vary() {}

func (m *Response_Headers) GetVary() isResponse_Headers_Vary {
	if m != nil {
		return m.Vary
	}
	return nil
}

func (m *Response_Headers) GetVaryAll() Wildcard {
	if x, ok := m.GetVary().(*Response_Headers_VaryAll); ok {
		return x.VaryAll
	}
	return Wildcard_STAR
}

func (m *Response_Headers) GetVaryHeaders() *StringList {
	if x, ok := m.GetVary().(*Response_Headers_VaryHeaders); ok {
		return x.VaryHeaders
	}
	return nil
}

func (m *Response_Headers) GetXFrameOptions() Response_Headers_XFrameOptionsValue {
	if m != nil {
		return m.XFrameOptions
	}
	return Response_Headers_UNUSED_X_FRAME_OPTIONS_VALUE
}

func (m *Response_Headers) GetXXssProtection() string {
	if m != nil {
		return m.XXssProtection
	}
	return ""
}

func (m *Response_Headers) GetSetCookie() []*Response_Headers_SetCookieMessage {
	if m != nil {
		return m.SetCookie
	}
	return nil
}

func (m *Response_Headers) GetOther() []*KeyValue {
	if m != nil {
		return m.Other
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Response_Headers) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Response_Headers_AccessControlAllowOriginAll)(nil),
		(*Response_Headers_AccessControlAllowOriginOrigins)(nil),
		(*Response_Headers_AltSvcClear)(nil),
		(*Response_Headers_Service)(nil),
		(*Response_Headers_ExpiresAlready)(nil),
		(*Response_Headers_ExpiresDate)(nil),
		(*Response_Headers_VaryAll)(nil),
		(*Response_Headers_VaryHeaders)(nil),
	}
}

type Response_Headers_AltSvcMessage struct {
	Services             []*Response_Headers_AltSvcMessage_Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	MaxAge               uint64                                    `protobuf:"varint,2,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	Persist              bool                                      `protobuf:"varint,3,opt,name=persist,proto3" json:"persist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *Response_Headers_AltSvcMessage) Reset()         { *m = Response_Headers_AltSvcMessage{} }
func (m *Response_Headers_AltSvcMessage) String() string { return proto.CompactTextString(m) }
func (*Response_Headers_AltSvcMessage) ProtoMessage()    {}
func (*Response_Headers_AltSvcMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{5, 0, 0}
}

func (m *Response_Headers_AltSvcMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers_AltSvcMessage.Unmarshal(m, b)
}
func (m *Response_Headers_AltSvcMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers_AltSvcMessage.Marshal(b, m, deterministic)
}
func (m *Response_Headers_AltSvcMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers_AltSvcMessage.Merge(m, src)
}
func (m *Response_Headers_AltSvcMessage) XXX_Size() int {
	return xxx_messageInfo_Response_Headers_AltSvcMessage.Size(m)
}
func (m *Response_Headers_AltSvcMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers_AltSvcMessage.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers_AltSvcMessage proto.InternalMessageInfo

func (m *Response_Headers_AltSvcMessage) GetServices() []*Response_Headers_AltSvcMessage_Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *Response_Headers_AltSvcMessage) GetMaxAge() uint64 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

func (m *Response_Headers_AltSvcMessage) GetPersist() bool {
	if m != nil {
		return m.Persist
	}
	return false
}

type Response_Headers_AltSvcMessage_Service struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HostName             string   `protobuf:"bytes,2,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response_Headers_AltSvcMessage_Service) Reset() {
	*m = Response_Headers_AltSvcMessage_Service{}
}
func (m *Response_Headers_AltSvcMessage_Service) String() string { return proto.CompactTextString(m) }
func (*Response_Headers_AltSvcMessage_Service) ProtoMessage()    {}
func (*Response_Headers_AltSvcMessage_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{5, 0, 0, 0}
}

func (m *Response_Headers_AltSvcMessage_Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers_AltSvcMessage_Service.Unmarshal(m, b)
}
func (m *Response_Headers_AltSvcMessage_Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers_AltSvcMessage_Service.Marshal(b, m, deterministic)
}
func (m *Response_Headers_AltSvcMessage_Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers_AltSvcMessage_Service.Merge(m, src)
}
func (m *Response_Headers_AltSvcMessage_Service) XXX_Size() int {
	return xxx_messageInfo_Response_Headers_AltSvcMessage_Service.Size(m)
}
func (m *Response_Headers_AltSvcMessage_Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers_AltSvcMessage_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers_AltSvcMessage_Service proto.InternalMessageInfo

func (m *Response_Headers_AltSvcMessage_Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response_Headers_AltSvcMessage_Service) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *Response_Headers_AltSvcMessage_Service) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Response_Headers_SetCookieMessage struct {
	Name                 string                                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string                                          `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Expires              *timestamp.Timestamp                            `protobuf:"bytes,3,opt,name=expires,proto3" json:"expires,omitempty"`
	MaxAge               int64                                           `protobuf:"varint,4,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	Domain               string                                          `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
	Path                 string                                          `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Secure               bool                                            `protobuf:"varint,7,opt,name=secure,proto3" json:"secure,omitempty"`
	HttpOnly             bool                                            `protobuf:"varint,8,opt,name=http_only,json=httpOnly,proto3" json:"http_only,omitempty"`
	Samesite             Response_Headers_SetCookieMessage_SameSiteValue `protobuf:"varint,9,opt,name=samesite,proto3,enum=web.Response_Headers_SetCookieMessage_SameSiteValue" json:"samesite,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *Response_Headers_SetCookieMessage) Reset()         { *m = Response_Headers_SetCookieMessage{} }
func (m *Response_Headers_SetCookieMessage) String() string { return proto.CompactTextString(m) }
func (*Response_Headers_SetCookieMessage) ProtoMessage()    {}
func (*Response_Headers_SetCookieMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{5, 0, 1}
}

func (m *Response_Headers_SetCookieMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers_SetCookieMessage.Unmarshal(m, b)
}
func (m *Response_Headers_SetCookieMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers_SetCookieMessage.Marshal(b, m, deterministic)
}
func (m *Response_Headers_SetCookieMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers_SetCookieMessage.Merge(m, src)
}
func (m *Response_Headers_SetCookieMessage) XXX_Size() int {
	return xxx_messageInfo_Response_Headers_SetCookieMessage.Size(m)
}
func (m *Response_Headers_SetCookieMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers_SetCookieMessage.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers_SetCookieMessage proto.InternalMessageInfo

func (m *Response_Headers_SetCookieMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response_Headers_SetCookieMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Response_Headers_SetCookieMessage) GetExpires() *timestamp.Timestamp {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *Response_Headers_SetCookieMessage) GetMaxAge() int64 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

func (m *Response_Headers_SetCookieMessage) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Response_Headers_SetCookieMessage) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Response_Headers_SetCookieMessage) GetSecure() bool {
	if m != nil {
		return m.Secure
	}
	return false
}

func (m *Response_Headers_SetCookieMessage) GetHttpOnly() bool {
	if m != nil {
		return m.HttpOnly
	}
	return false
}

func (m *Response_Headers_SetCookieMessage) GetSamesite() Response_Headers_SetCookieMessage_SameSiteValue {
	if m != nil {
		return m.Samesite
	}
	return Response_Headers_SetCookieMessage_UNUSED_SAMESITE_VALUE
}

func init() {
	proto.RegisterEnum("web.Wildcard", Wildcard_name, Wildcard_value)
	proto.RegisterEnum("web.Already", Already_name, Already_value)
	proto.RegisterEnum("web.Clear", Clear_name, Clear_value)
	proto.RegisterEnum("web.CacheControlRequest_Directives", CacheControlRequest_Directives_name, CacheControlRequest_Directives_value)
	proto.RegisterEnum("web.CacheControlResponse_Directives", CacheControlResponse_Directives_name, CacheControlResponse_Directives_value)
	proto.RegisterEnum("web.Request_Method", Request_Method_name, Request_Method_value)
	proto.RegisterEnum("web.Request_Headers_TransferEncodingsValue", Request_Headers_TransferEncodingsValue_name, Request_Headers_TransferEncodingsValue_value)
	proto.RegisterEnum("web.Request_Headers_XRequestedWithValue", Request_Headers_XRequestedWithValue_name, Request_Headers_XRequestedWithValue_value)
	proto.RegisterEnum("web.Request_Headers_DNTValue", Request_Headers_DNTValue_name, Request_Headers_DNTValue_value)
	proto.RegisterEnum("web.Response_Headers_AccessControlAllowCredentialsValue", Response_Headers_AccessControlAllowCredentialsValue_name, Response_Headers_AccessControlAllowCredentialsValue_value)
	proto.RegisterEnum("web.Response_Headers_XFrameOptionsValue", Response_Headers_XFrameOptionsValue_name, Response_Headers_XFrameOptionsValue_value)
	proto.RegisterEnum("web.Response_Headers_SetCookieMessage_SameSiteValue", Response_Headers_SetCookieMessage_SameSiteValue_name, Response_Headers_SetCookieMessage_SameSiteValue_value)
	proto.RegisterType((*KeyValue)(nil), "web.KeyValue")
	proto.RegisterType((*StringList)(nil), "web.StringList")
	proto.RegisterType((*CacheControlRequest)(nil), "web.CacheControlRequest")
	proto.RegisterType((*CacheControlResponse)(nil), "web.CacheControlResponse")
	proto.RegisterType((*Request)(nil), "web.Request")
	proto.RegisterType((*Request_Headers)(nil), "web.Request.Headers")
	proto.RegisterType((*Request_Headers_ByteRange)(nil), "web.Request.Headers.ByteRange")
	proto.RegisterType((*Response)(nil), "web.Response")
	proto.RegisterType((*Response_Headers)(nil), "web.Response.Headers")
	proto.RegisterType((*Response_Headers_AltSvcMessage)(nil), "web.Response.Headers.AltSvcMessage")
	proto.RegisterType((*Response_Headers_AltSvcMessage_Service)(nil), "web.Response.Headers.AltSvcMessage.Service")
	proto.RegisterType((*Response_Headers_SetCookieMessage)(nil), "web.Response.Headers.SetCookieMessage")
}

func init() { proto.RegisterFile("web.proto", fileDescriptor_461bb3ac99194e85) }

var fileDescriptor_461bb3ac99194e85 = []byte{
	// 2232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x58, 0xcd, 0x72, 0x1b, 0xc7,
	0xf1, 0x27, 0xbe, 0x81, 0xc6, 0x07, 0x57, 0x43, 0x5a, 0x5e, 0x41, 0xa6, 0x48, 0x43, 0xfe, 0xfb,
	0xcf, 0x92, 0x62, 0x4a, 0x81, 0x55, 0x49, 0xaa, 0x5c, 0x89, 0x6b, 0x09, 0x2c, 0x05, 0xc4, 0xc0,
	0x82, 0x99, 0x5d, 0x52, 0xd4, 0x69, 0x6b, 0x09, 0x0c, 0x88, 0x2d, 0x03, 0xbb, 0xf0, 0xce, 0x80,
	0x04, 0x72, 0x4b, 0x55, 0x2e, 0x39, 0xe5, 0x2d, 0x72, 0xcd, 0xe3, 0xf8, 0x90, 0xca, 0x93, 0xe4,
	0x92, 0x9a, 0x8f, 0x05, 0x01, 0x12, 0xa4, 0x9c, 0x0b, 0x39, 0xdd, 0xd3, 0xdd, 0x33, 0xdd, 0xd3,
	0xdd, 0xbf, 0x5e, 0x40, 0xe1, 0x86, 0x5c, 0x1e, 0x4d, 0xa3, 0x90, 0x85, 0x28, 0x75, 0x43, 0x2e,
	0xab, 0xfb, 0x57, 0x61, 0x78, 0x35, 0x26, 0x6f, 0x04, 0xeb, 0x72, 0x36, 0x7c, 0xc3, 0xfc, 0x09,
	0xa1, 0xcc, 0x9b, 0x4c, 0xa5, 0x54, 0x15, 0x26, 0xfe, 0x84, 0xa8, 0x75, 0x89, 0x32, 0x8f, 0xcd,
	0xa8, 0xa4, 0x6a, 0x75, 0xc8, 0xff, 0x40, 0x16, 0xe7, 0xde, 0x78, 0x46, 0x90, 0x06, 0xa9, 0x1f,
	0xc9, 0x42, 0x4f, 0x1c, 0x24, 0x0e, 0x0b, 0x98, 0x2f, 0xd1, 0x2e, 0x64, 0xae, 0xf9, 0x96, 0x9e,
	0x14, 0x3c, 0x49, 0xd4, 0xbe, 0x06, 0xb0, 0x59, 0xe4, 0x07, 0x57, 0x1d, 0x9f, 0x32, 0xa4, 0x43,
	0x8e, 0x0a, 0x8a, 0xea, 0x89, 0x83, 0xd4, 0x61, 0x01, 0xc7, 0x64, 0xed, 0xaf, 0x49, 0xd8, 0x69,
	0x78, 0xfd, 0x11, 0x69, 0x84, 0x01, 0x8b, 0xc2, 0x31, 0x26, 0x3f, 0xcd, 0x08, 0x65, 0xc8, 0x80,
	0xc2, 0xc0, 0x8f, 0x48, 0x9f, 0xf9, 0xd7, 0x44, 0x9c, 0x56, 0xa9, 0xbf, 0x3c, 0xe2, 0x2e, 0x6d,
	0x10, 0x3e, 0x6a, 0xc6, 0x92, 0x14, 0xdf, 0x6a, 0x89, 0x43, 0x49, 0x3f, 0x0c, 0x06, 0x54, 0x5c,
	0x2d, 0x8d, 0x63, 0xb2, 0xf6, 0xf7, 0x04, 0xc0, 0xad, 0x0e, 0xda, 0x05, 0xed, 0xcc, 0x3a, 0xb3,
	0xcd, 0xa6, 0xdb, 0x6c, 0x63, 0xb3, 0xe1, 0xb4, 0xcf, 0x4d, 0x6d, 0x0b, 0x15, 0x21, 0xd7, 0x35,
	0x2e, 0x5c, 0xe3, 0xbd, 0xa9, 0x25, 0x50, 0x19, 0x0a, 0x9c, 0xb0, 0x1d, 0xa3, 0x63, 0x6a, 0x49,
	0x41, 0xb6, 0x2d, 0xf7, 0x04, 0x9b, 0x76, 0x4b, 0x4b, 0xa1, 0x12, 0xe4, 0xad, 0x9e, 0xdb, 0x30,
	0x1a, 0x2d, 0x53, 0x4b, 0x2b, 0xca, 0x76, 0x7a, 0xd8, 0xd4, 0x32, 0x48, 0x83, 0x92, 0xd5, 0x73,
	0x1d, 0x6c, 0x58, 0xf6, 0x49, 0x0f, 0x77, 0xb5, 0x2c, 0x42, 0x50, 0xe9, 0x59, 0x9d, 0x8f, 0x6e,
	0xef, 0x44, 0xaa, 0x34, 0xb5, 0x5c, 0xed, 0x1f, 0x49, 0xd8, 0x5d, 0xf7, 0x8c, 0x4e, 0xc3, 0x80,
	0x12, 0x74, 0x7c, 0x3f, 0x0e, 0x5f, 0x6d, 0x88, 0x83, 0x94, 0xfe, 0x9f, 0x03, 0xf1, 0xcf, 0x5f,
	0x12, 0x88, 0x1d, 0xd8, 0xee, 0x9e, 0xd9, 0x8e, 0x8b, 0xcd, 0x73, 0xa3, 0xd3, 0x6e, 0x1a, 0x0e,
	0x0f, 0xc8, 0xaa, 0xcb, 0xc9, 0x35, 0x97, 0x53, 0xf7, 0x5c, 0x4e, 0x23, 0x80, 0xec, 0xe9, 0xd9,
	0x71, 0xa7, 0xdd, 0xd0, 0x32, 0x3c, 0xae, 0xa7, 0xb8, 0x7d, 0xce, 0xcd, 0x64, 0xf9, 0x89, 0xa7,
	0xb8, 0x77, 0xf1, 0x71, 0xd5, 0x78, 0x6e, 0x35, 0xf4, 0x79, 0x6e, 0xdb, 0x76, 0xbb, 0xc6, 0x05,
	0xa7, 0x0a, 0xb5, 0x9f, 0xb7, 0x21, 0x17, 0xe7, 0xc8, 0x6b, 0xc8, 0x4e, 0x08, 0x1b, 0x85, 0x03,
	0x15, 0x98, 0x1d, 0x11, 0x98, 0x38, 0x29, 0xba, 0x62, 0x0b, 0x2b, 0x11, 0x54, 0x87, 0xd2, 0x2c,
	0xf2, 0xdd, 0x1b, 0x7f, 0x3c, 0xe8, 0x7b, 0xd1, 0x40, 0x44, 0xa2, 0x52, 0x2f, 0x0b, 0x95, 0x0f,
	0x8a, 0xd9, 0xda, 0xc2, 0xc5, 0x59, 0xe4, 0xc7, 0x24, 0xda, 0x07, 0xe0, 0x3a, 0x32, 0x57, 0xf5,
	0x14, 0xcf, 0xef, 0xd6, 0x16, 0x2e, 0xcc, 0x22, 0x5f, 0xe6, 0x36, 0x7a, 0x09, 0x99, 0x9f, 0x66,
	0x24, 0x5a, 0xe8, 0xe9, 0x83, 0xd4, 0x61, 0x51, 0x59, 0x8b, 0x6b, 0x05, 0xcb, 0x3d, 0xf4, 0x2b,
	0xc8, 0x8e, 0x88, 0x37, 0x20, 0x91, 0x9e, 0x39, 0x48, 0x1c, 0x16, 0xeb, 0xbb, 0x6b, 0xd7, 0x6c,
	0x89, 0x2d, 0x8a, 0x95, 0x4c, 0xf5, 0x3f, 0x25, 0xc8, 0x29, 0x1e, 0x7a, 0x0a, 0x59, 0xaf, 0xdf,
	0x27, 0x53, 0xa6, 0xea, 0x4d, 0x51, 0xe8, 0xff, 0xa0, 0x22, 0x57, 0x6e, 0x7f, 0xe4, 0x45, 0x94,
	0x30, 0x55, 0x7b, 0x65, 0xc9, 0x6d, 0x48, 0x26, 0xfa, 0x7f, 0xd8, 0x56, 0x62, 0x03, 0x8f, 0x11,
	0x5e, 0xef, 0xd2, 0x07, 0xac, 0xb4, 0x9b, 0x8a, 0xbb, 0x22, 0x48, 0x82, 0x7e, 0x38, 0xe0, 0xce,
	0xa6, 0x57, 0x05, 0x4d, 0xc5, 0x5d, 0x11, 0x1c, 0x7b, 0xc1, 0xd5, 0xcc, 0xbb, 0x22, 0xc2, 0xa7,
	0xa5, 0x60, 0x47, 0x71, 0xd1, 0x39, 0xec, 0x71, 0x0e, 0xa5, 0x6e, 0x5f, 0xa6, 0xa8, 0x1b, 0x49,
	0x7f, 0x5d, 0xf5, 0x62, 0xd9, 0x87, 0x5f, 0xac, 0x2a, 0x35, 0xd7, 0x6b, 0x5c, 0xee, 0xa1, 0x8f,
	0xf0, 0xe2, 0x01, 0xbb, 0x32, 0x7c, 0x54, 0xcf, 0x3d, 0x12, 0xe3, 0xe7, 0x9b, 0x2c, 0xc7, 0xc1,
	0xfe, 0x0a, 0xca, 0xde, 0x8c, 0x8d, 0xc2, 0xc8, 0xff, 0xb3, 0xc7, 0xfc, 0x30, 0xd0, 0xf3, 0x2a,
	0xa6, 0xab, 0x4c, 0xf4, 0x7b, 0x28, 0xf7, 0x79, 0xe5, 0xc5, 0xe7, 0xeb, 0x07, 0xe2, 0x3c, 0xfd,
	0xa1, 0xde, 0x84, 0x4b, 0xfd, 0x15, 0x26, 0x7f, 0x51, 0x32, 0x9f, 0x92, 0x3e, 0xd3, 0x0b, 0xf2,
	0x45, 0x25, 0x85, 0x5e, 0x43, 0x61, 0x18, 0x46, 0x37, 0x5e, 0x34, 0x20, 0x03, 0x1d, 0x36, 0x25,
	0xd3, 0xed, 0x3e, 0x42, 0x90, 0x1e, 0x46, 0xe1, 0x44, 0x2f, 0x0a, 0x13, 0x62, 0xcd, 0x79, 0xa3,
	0x90, 0x32, 0xbd, 0x24, 0x79, 0x7c, 0xcd, 0xd3, 0x64, 0xc4, 0xd8, 0xb4, 0xee, 0x52, 0xc2, 0x98,
	0x68, 0xbe, 0x65, 0xe9, 0x92, 0xe0, 0xda, 0x8a, 0x89, 0x9e, 0x41, 0xde, 0x1f, 0xba, 0x13, 0x8f,
	0xf5, 0x47, 0x7a, 0x45, 0x08, 0xe4, 0xfc, 0x61, 0x97, 0x93, 0xe8, 0x04, 0x9e, 0xf0, 0xad, 0x70,
	0xe0, 0x0f, 0x7d, 0x32, 0x70, 0xa9, 0x1f, 0xf4, 0x89, 0xbe, 0x2d, 0x3c, 0xae, 0x1e, 0x49, 0x40,
	0x39, 0x8a, 0x01, 0xe5, 0xc8, 0x89, 0x01, 0x05, 0x6f, 0xfb, 0xc3, 0xae, 0xd2, 0xb1, 0xb9, 0x0a,
	0xaa, 0x41, 0xd9, 0x1f, 0xba, 0x41, 0x18, 0x10, 0x75, 0x8e, 0x26, 0x50, 0xa0, 0xe8, 0x0f, 0xad,
	0x30, 0x20, 0xf2, 0x2c, 0x79, 0x8d, 0xc8, 0x0b, 0xae, 0x88, 0xfe, 0x24, 0xbe, 0x06, 0xe6, 0x24,
	0xfa, 0x23, 0xec, 0xf8, 0x43, 0x77, 0x16, 0xdc, 0xb9, 0x08, 0xfa, 0xe4, 0x45, 0x9e, 0xf8, 0xc3,
	0xb3, 0xa5, 0x96, 0xbc, 0xca, 0x97, 0x50, 0x9a, 0x78, 0x73, 0x57, 0x45, 0x93, 0xea, 0x3b, 0xa2,
	0x23, 0x16, 0x27, 0xde, 0xfc, 0x44, 0xb1, 0xf8, 0x23, 0x85, 0x91, 0x7f, 0xe5, 0x07, 0xfa, 0xae,
	0x7c, 0x24, 0x49, 0x71, 0xfe, 0x34, 0xf2, 0xae, 0x26, 0x9e, 0xfe, 0x99, 0xe4, 0x4b, 0x0a, 0xbd,
	0x81, 0x9d, 0x69, 0x14, 0xce, 0x17, 0xee, 0x7a, 0xfe, 0x3c, 0x15, 0x42, 0x48, 0x6c, 0x19, 0x6b,
	0x49, 0xf4, 0x1b, 0xc8, 0x5c, 0x2e, 0x18, 0xa1, 0xfa, 0xe7, 0xc2, 0x83, 0x17, 0x9b, 0x92, 0xf5,
	0xe8, 0x78, 0xc1, 0x88, 0x70, 0xbf, 0xb5, 0x85, 0xa5, 0x38, 0x6f, 0xe4, 0x11, 0x19, 0x92, 0x88,
	0x44, 0xba, 0x2e, 0x23, 0xa4, 0x48, 0xf4, 0x1d, 0x24, 0x19, 0xd1, 0x9f, 0x1d, 0xa4, 0x0e, 0x2b,
	0xf5, 0xd7, 0x1b, 0xcd, 0x39, 0x91, 0x17, 0xd0, 0x21, 0x89, 0xe2, 0x5a, 0xa6, 0x32, 0xad, 0x92,
	0x8c, 0xa0, 0x3d, 0x80, 0x19, 0x25, 0x91, 0xeb, 0x5d, 0x91, 0x80, 0xe9, 0x55, 0x61, 0xb9, 0xc0,
	0x39, 0x06, 0x67, 0x70, 0xc8, 0xbf, 0xf6, 0x3d, 0xfd, 0xb9, 0x78, 0x32, 0xbe, 0xe4, 0xf7, 0xb8,
	0xf1, 0xa2, 0x80, 0xf7, 0x89, 0x2f, 0xe4, 0x3d, 0x14, 0x89, 0x30, 0x68, 0xf3, 0xb8, 0x24, 0xc9,
	0xc0, 0xbd, 0xf1, 0xd9, 0x48, 0xdf, 0x13, 0xa5, 0x7e, 0xb8, 0xf1, 0x56, 0x17, 0x38, 0x96, 0xfd,
	0xe0, 0xb3, 0x91, 0xbc, 0x52, 0x65, 0xbe, 0xc6, 0x44, 0x6f, 0x20, 0x35, 0x08, 0x98, 0xfe, 0x42,
	0x98, 0xd9, 0xdb, 0x68, 0xa6, 0x69, 0x39, 0x52, 0x97, 0x4b, 0xf2, 0xae, 0x1c, 0xb2, 0x11, 0x89,
	0xf4, 0xfd, 0x8d, 0x5d, 0x59, 0xec, 0x55, 0xbf, 0x85, 0xc2, 0x32, 0xc2, 0x7c, 0x86, 0xa1, 0xcc,
	0x8b, 0x64, 0x9f, 0x4d, 0x63, 0x49, 0x70, 0xc7, 0x49, 0x30, 0x50, 0x98, 0xc9, 0x97, 0xb5, 0x1f,
	0xe0, 0xe9, 0xe6, 0x38, 0xa2, 0x97, 0xb0, 0xaf, 0xa0, 0x53, 0xe2, 0x9e, 0x89, 0x5d, 0xd3, 0x6a,
	0xf4, 0x9a, 0x6d, 0xeb, 0xbd, 0xed, 0x9e, 0x1b, 0x9d, 0x33, 0x8e, 0xa4, 0x25, 0xc8, 0x3b, 0xd8,
	0x68, 0x77, 0x4c, 0x6c, 0x6b, 0x89, 0x5a, 0x07, 0x76, 0x36, 0xb8, 0x8f, 0xbe, 0x84, 0x3d, 0x65,
	0xe9, 0xc2, 0xc5, 0xe6, 0x9f, 0xce, 0x4c, 0xdb, 0x31, 0x9b, 0xee, 0x87, 0xb6, 0xd3, 0x5a, 0xda,
	0x41, 0x50, 0xb9, 0xe8, 0x76, 0x5a, 0x8e, 0x73, 0xaa, 0x04, 0xb4, 0x44, 0xed, 0x3b, 0xc8, 0xc7,
	0x51, 0x58, 0xc5, 0x71, 0xcb, 0x59, 0x3d, 0xbd, 0xd9, 0xb6, 0x8d, 0xe3, 0x8e, 0xd9, 0xd4, 0x12,
	0x1c, 0x63, 0x4d, 0x4b, 0x12, 0xc9, 0xe3, 0x1c, 0x64, 0x44, 0x20, 0x6a, 0x11, 0x64, 0x55, 0xa7,
	0x7d, 0x02, 0x65, 0x65, 0xa3, 0x6b, 0x3a, 0xad, 0x5e, 0x53, 0xdb, 0x42, 0x39, 0x48, 0xbd, 0x37,
	0x1d, 0x2d, 0x81, 0xf2, 0x90, 0x6e, 0x99, 0x46, 0x53, 0x4b, 0xf2, 0xd5, 0x69, 0xcf, 0x76, 0xb4,
	0x14, 0xdf, 0x3c, 0x3d, 0x73, 0x24, 0xd6, 0x37, 0xcd, 0x8e, 0xe9, 0x98, 0x12, 0xeb, 0x1b, 0x3d,
	0xcb, 0x32, 0x1b, 0x8e, 0x96, 0xe5, 0x44, 0xef, 0xd4, 0x69, 0xf7, 0x2c, 0x5b, 0xcb, 0xa1, 0x02,
	0x64, 0x1c, 0x6c, 0x34, 0x4c, 0x2d, 0x7f, 0x9c, 0x81, 0xd4, 0x19, 0x6e, 0xd7, 0x7e, 0xd6, 0x20,
	0xbf, 0x1c, 0x7b, 0x0e, 0x21, 0x2b, 0x47, 0x50, 0x05, 0xed, 0x9a, 0x78, 0x43, 0x5b, 0xb0, 0x1a,
	0xe1, 0x80, 0x50, 0xac, 0xf6, 0xd1, 0x37, 0x4b, 0x74, 0x4d, 0x8a, 0x62, 0xfa, 0x4c, 0x25, 0x88,
	0x9a, 0x88, 0xee, 0xc0, 0x2b, 0xef, 0x93, 0x97, 0xe1, 0x60, 0x21, 0x80, 0xb0, 0x84, 0xc5, 0xba,
	0xfa, 0xef, 0xed, 0x5b, 0xc8, 0x3d, 0x83, 0xfd, 0x3b, 0x00, 0xe3, 0x8d, 0xc7, 0xe1, 0x8d, 0x2b,
	0x5b, 0x00, 0x27, 0xd4, 0x8d, 0xee, 0x4d, 0x0e, 0xeb, 0xe0, 0x62, 0x70, 0xad, 0x9e, 0x50, 0x32,
	0xc6, 0x63, 0xe4, 0xc2, 0xcb, 0xc7, 0xcc, 0xca, 0x7f, 0x54, 0xb9, 0xb0, 0xad, 0x9c, 0x8d, 0xc7,
	0xe7, 0xd6, 0x16, 0xde, 0x7f, 0xc8, 0xb8, 0xfc, 0x4b, 0xd1, 0x5f, 0x12, 0x70, 0xb0, 0xf1, 0x84,
	0x7e, 0x44, 0x06, 0x24, 0x60, 0xbe, 0x37, 0xa6, 0xc2, 0xe9, 0x4a, 0xfd, 0x77, 0x1b, 0x23, 0x74,
	0x64, 0xdc, 0x3b, 0xa1, 0x71, 0xab, 0x2a, 0x4b, 0x67, 0xcf, 0x7b, 0x4c, 0x06, 0x19, 0xf7, 0x40,
	0x9f, 0xcc, 0xa7, 0x21, 0x25, 0x4b, 0x6c, 0x4e, 0x8b, 0x16, 0xb2, 0x8e, 0xef, 0xa6, 0x10, 0x89,
	0xc3, 0xff, 0x16, 0xca, 0xde, 0x98, 0xb9, 0xf4, 0xba, 0xef, 0xf6, 0xc7, 0xc4, 0x93, 0x23, 0x53,
	0xa5, 0x0e, 0x12, 0x5e, 0x39, 0xa7, 0x95, 0xc0, 0x45, 0x6f, 0xcc, 0xec, 0xeb, 0xbe, 0x20, 0xd1,
	0xf7, 0x7c, 0xb8, 0x8d, 0xae, 0xfd, 0x3e, 0x11, 0x33, 0x45, 0x51, 0x7d, 0x26, 0xdc, 0x77, 0x4f,
	0xe8, 0x74, 0x09, 0xa5, 0xde, 0x15, 0x69, 0x25, 0x70, 0xac, 0x85, 0xfe, 0x70, 0x17, 0xd1, 0x25,
	0xac, 0x3c, 0x7b, 0x70, 0xca, 0xbe, 0x03, 0xe9, 0x6f, 0xa1, 0xc4, 0x35, 0x49, 0xc0, 0x5c, 0xb6,
	0x98, 0x12, 0x35, 0x80, 0xc8, 0xf4, 0xe8, 0xb6, 0xbb, 0xa6, 0xb3, 0x98, 0x12, 0x5c, 0x54, 0x22,
	0x9c, 0x40, 0x47, 0x90, 0xe6, 0x03, 0x99, 0x18, 0x30, 0x1e, 0xc7, 0x2f, 0x21, 0x87, 0x7e, 0x0b,
	0xdb, 0x64, 0x3e, 0xf5, 0x23, 0x42, 0x5d, 0x6f, 0x1c, 0x11, 0x6f, 0xb0, 0x10, 0xd3, 0x43, 0xa5,
	0x5e, 0x12, 0x87, 0x18, 0x92, 0xd7, 0x4a, 0xe2, 0x8a, 0x12, 0x53, 0x1c, 0xf4, 0x3d, 0x94, 0x62,
	0x45, 0x71, 0x20, 0x7c, 0xea, 0xc0, 0x56, 0x12, 0x17, 0x95, 0x06, 0x1f, 0x0e, 0x39, 0xe2, 0xf1,
	0x30, 0x91, 0x48, 0xcd, 0x1a, 0x8a, 0x42, 0xaf, 0x20, 0x7f, 0xed, 0x45, 0x0b, 0x51, 0x0e, 0xa5,
	0x4d, 0xe5, 0x90, 0xc2, 0x39, 0x2e, 0xc0, 0x53, 0xff, 0x1d, 0x94, 0x84, 0x6c, 0x9c, 0x04, 0xe5,
	0xcd, 0x39, 0x9e, 0xc2, 0x45, 0x2e, 0x16, 0x27, 0xc2, 0x29, 0x6c, 0xcf, 0xdd, 0x61, 0xe4, 0x4d,
	0x88, 0x1b, 0x4e, 0x39, 0x68, 0x52, 0x31, 0x9b, 0xdc, 0xe2, 0xc8, 0x9d, 0xe7, 0xbd, 0x38, 0xe1,
	0xb2, 0x3d, 0x29, 0x2a, 0xb3, 0xb5, 0x3c, 0x5f, 0xe5, 0xa1, 0x43, 0x0e, 0x4d, 0x73, 0x4a, 0x5d,
	0xee, 0x36, 0xff, 0xe2, 0x09, 0x03, 0x31, 0xca, 0x14, 0x70, 0x65, 0x7e, 0x41, 0xe9, 0xe9, 0x92,
	0x8b, 0x4c, 0x00, 0x4a, 0x98, 0xdb, 0x0f, 0xc3, 0x1f, 0x7d, 0x22, 0x46, 0x95, 0x62, 0xfd, 0xeb,
	0xcd, 0xc7, 0xda, 0x84, 0x35, 0x84, 0x98, 0x4a, 0x2c, 0x5c, 0xa0, 0x31, 0xe7, 0x16, 0x86, 0x9e,
	0x3c, 0x02, 0x43, 0xff, 0x4a, 0x40, 0x79, 0x2d, 0x35, 0xd1, 0x7b, 0xc8, 0xab, 0xd4, 0x94, 0x1f,
	0xcb, 0xc5, 0x25, 0xa0, 0x3f, 0x96, 0xd1, 0x47, 0xb6, 0xd4, 0xc1, 0x4b, 0x65, 0xf4, 0x39, 0xe4,
	0xf8, 0xa4, 0xc3, 0x87, 0x74, 0x09, 0x61, 0xd9, 0x89, 0x37, 0x37, 0xae, 0xc4, 0xf7, 0xe0, 0x94,
	0x44, 0xd4, 0xa7, 0x4c, 0x74, 0x84, 0x3c, 0x8e, 0xc9, 0xaa, 0x05, 0x39, 0x65, 0x87, 0x37, 0xca,
	0xc0, 0x9b, 0x10, 0xf5, 0xe5, 0x21, 0xd6, 0xe8, 0x39, 0x14, 0xf8, 0x60, 0xe9, 0x8a, 0x0d, 0xf9,
	0xc9, 0x91, 0xe7, 0x0c, 0x8b, 0x6f, 0x22, 0x48, 0x4f, 0xc3, 0x48, 0x9a, 0x2c, 0x63, 0xb1, 0xae,
	0xfe, 0x2d, 0x05, 0xda, 0xdd, 0x10, 0x6d, 0xb4, 0xbc, 0xf1, 0x47, 0x04, 0xf4, 0x0e, 0x72, 0x2a,
	0x1b, 0x85, 0xd5, 0xc7, 0x6b, 0x25, 0x16, 0x5d, 0xf5, 0x9b, 0x7f, 0xc5, 0xa4, 0x96, 0x7e, 0x3f,
	0x85, 0xec, 0x20, 0x9c, 0x78, 0x7e, 0xa0, 0x3e, 0x5a, 0x14, 0x25, 0x6e, 0xee, 0xb1, 0x91, 0xe8,
	0x1f, 0x05, 0x2c, 0xd6, 0x32, 0xf3, 0xfb, 0xb3, 0x48, 0xd6, 0x73, 0x1e, 0x2b, 0x4a, 0x84, 0x80,
	0xb1, 0xa9, 0x1b, 0x06, 0xe3, 0x85, 0x28, 0xe0, 0x3c, 0xce, 0x73, 0x46, 0x2f, 0x18, 0x2f, 0xd0,
	0x29, 0xe4, 0xa9, 0x37, 0x21, 0xd4, 0x67, 0x44, 0x55, 0xe8, 0xbb, 0x5f, 0x96, 0x36, 0x47, 0xb6,
	0x37, 0x21, 0xb6, 0xcf, 0x88, 0xcc, 0x8d, 0xa5, 0x95, 0x5a, 0x1b, 0xca, 0x6b, 0x5b, 0xe8, 0x19,
	0x7c, 0xa6, 0x60, 0xd9, 0x36, 0xba, 0xa6, 0xdd, 0x76, 0xcc, 0x25, 0xbe, 0x03, 0x64, 0x6d, 0x07,
	0xb7, 0x1b, 0x1c, 0xa1, 0x73, 0x90, 0xea, 0x18, 0x17, 0x12, 0xa0, 0xad, 0x9e, 0x65, 0x6a, 0xa9,
	0xda, 0x18, 0x6a, 0x9f, 0x6e, 0xf1, 0xe8, 0xd7, 0xf0, 0x8d, 0xb2, 0x6f, 0x34, 0x1a, 0xa6, 0x6d,
	0xbb, 0x8d, 0x9e, 0xe5, 0xe0, 0x5e, 0xc7, 0x35, 0x3a, 0x9d, 0xde, 0x07, 0xb7, 0x81, 0xcd, 0xa6,
	0x69, 0x39, 0x6d, 0xa3, 0x73, 0x3b, 0xd5, 0x14, 0x20, 0x73, 0x62, 0x74, 0x6c, 0x53, 0x0e, 0x06,
	0x0e, 0x3e, 0x33, 0xb5, 0x64, 0xed, 0x14, 0xd0, 0xfd, 0x92, 0x44, 0x07, 0xf0, 0xc5, 0x72, 0xb6,
	0x39, 0xc1, 0x46, 0xd7, 0x74, 0xd5, 0x44, 0xb0, 0x34, 0x96, 0x87, 0x74, 0xd3, 0xb4, 0x3e, 0x6a,
	0x09, 0x54, 0x01, 0xe0, 0x2e, 0xf6, 0x70, 0xfb, 0x7d, 0xdb, 0xd2, 0x92, 0xc7, 0x55, 0xd0, 0x8d,
	0x07, 0x40, 0xf0, 0xb8, 0x00, 0x39, 0x63, 0xcc, 0x5c, 0xfb, 0xba, 0xcf, 0x97, 0xa6, 0x4c, 0x84,
	0xe3, 0x2c, 0xa4, 0xcf, 0xbd, 0x68, 0xf1, 0x6a, 0x17, 0xf2, 0xcb, 0x4f, 0xfa, 0x3c, 0xa4, 0x6d,
	0xc7, 0xc0, 0xda, 0xd6, 0xab, 0xa7, 0x5c, 0x47, 0xf6, 0xc9, 0x22, 0xe4, 0x8c, 0x0e, 0x36, 0x8d,
	0xe6, 0x47, 0x6d, 0xeb, 0x15, 0x82, 0x8c, 0x44, 0x96, 0x02, 0x64, 0x1a, 0x1d, 0x93, 0xcb, 0xd6,
	0x5f, 0x41, 0xea, 0x03, 0xb9, 0x44, 0x2f, 0x21, 0xd9, 0xec, 0xa1, 0xd2, 0xea, 0x08, 0x5a, 0x2d,
	0xaf, 0xbd, 0xf0, 0xdb, 0xc4, 0x65, 0x56, 0xe4, 0xe6, 0xb7, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0xf2, 0x89, 0x18, 0xdf, 0x81, 0x13, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WebClient is the client API for Web service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebClient interface {
	// TODO: should the methods be captured here? separate request/response messages?
	DO(ctx context.Context, in *Request, opts ...grpc.CallOption) (Web_DOClient, error)
}

type webClient struct {
	cc *grpc.ClientConn
}

func NewWebClient(cc *grpc.ClientConn) WebClient {
	return &webClient{cc}
}

func (c *webClient) DO(ctx context.Context, in *Request, opts ...grpc.CallOption) (Web_DOClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Web_serviceDesc.Streams[0], "/web.Web/DO", opts...)
	if err != nil {
		return nil, err
	}
	x := &webDOClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Web_DOClient interface {
	Recv() (*Response, error)
	grpc.ClientStream
}

type webDOClient struct {
	grpc.ClientStream
}

func (x *webDOClient) Recv() (*Response, error) {
	m := new(Response)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// WebServer is the server API for Web service.
type WebServer interface {
	// TODO: should the methods be captured here? separate request/response messages?
	DO(*Request, Web_DOServer) error
}

// UnimplementedWebServer can be embedded to have forward compatible implementations.
type UnimplementedWebServer struct {
}

func (*UnimplementedWebServer) DO(req *Request, srv Web_DOServer) error {
	return status.Errorf(codes.Unimplemented, "method DO not implemented")
}

func RegisterWebServer(s *grpc.Server, srv WebServer) {
	s.RegisterService(&_Web_serviceDesc, srv)
}

func _Web_DO_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Request)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WebServer).DO(m, &webDOServer{stream})
}

type Web_DOServer interface {
	Send(*Response) error
	grpc.ServerStream
}

type webDOServer struct {
	grpc.ServerStream
}

func (x *webDOServer) Send(m *Response) error {
	return x.ServerStream.SendMsg(m)
}

var _Web_serviceDesc = grpc.ServiceDesc{
	ServiceName: "web.Web",
	HandlerType: (*WebServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DO",
			Handler:       _Web_DO_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "web.proto",
}
