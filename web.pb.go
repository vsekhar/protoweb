// Code generated by protoc-gen-go. DO NOT EDIT.
// source: web.proto

package web

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request_Method int32

const (
	Request_UNUSED_METHOD Request_Method = 0
	Request_GET           Request_Method = 1
	Request_HEAD          Request_Method = 2
	Request_POST          Request_Method = 3
	Request_PUT           Request_Method = 4
	Request_DELETE        Request_Method = 5
	Request_CONNECT       Request_Method = 6
	Request_OPTIONS       Request_Method = 7
	Request_TRACE         Request_Method = 8
)

var Request_Method_name = map[int32]string{
	0: "UNUSED_METHOD",
	1: "GET",
	2: "HEAD",
	3: "POST",
	4: "PUT",
	5: "DELETE",
	6: "CONNECT",
	7: "OPTIONS",
	8: "TRACE",
}

var Request_Method_value = map[string]int32{
	"UNUSED_METHOD": 0,
	"GET":           1,
	"HEAD":          2,
	"POST":          3,
	"PUT":           4,
	"DELETE":        5,
	"CONNECT":       6,
	"OPTIONS":       7,
	"TRACE":         8,
}

func (x Request_Method) String() string {
	return proto.EnumName(Request_Method_name, int32(x))
}

func (Request_Method) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{1, 0}
}

type Request_Headers_Transfer_Encodings_Value int32

const (
	// only trailers is supported in HTTP/2
	Request_Headers_UNUSED_TRANSFER_ENCODINGS_VALUE Request_Headers_Transfer_Encodings_Value = 0
	Request_Headers_TRAILERS                        Request_Headers_Transfer_Encodings_Value = 1
)

var Request_Headers_Transfer_Encodings_Value_name = map[int32]string{
	0: "UNUSED_TRANSFER_ENCODINGS_VALUE",
	1: "TRAILERS",
}

var Request_Headers_Transfer_Encodings_Value_value = map[string]int32{
	"UNUSED_TRANSFER_ENCODINGS_VALUE": 0,
	"TRAILERS":                        1,
}

func (x Request_Headers_Transfer_Encodings_Value) String() string {
	return proto.EnumName(Request_Headers_Transfer_Encodings_Value_name, int32(x))
}

func (Request_Headers_Transfer_Encodings_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{1, 0, 0}
}

type Request_Headers_X_Requested_With_Value int32

const (
	Request_Headers_UNUSED_X_REQUESTED_WITH_VALUE Request_Headers_X_Requested_With_Value = 0
	Request_Headers_XMLHTTPREQUEST                Request_Headers_X_Requested_With_Value = 1
)

var Request_Headers_X_Requested_With_Value_name = map[int32]string{
	0: "UNUSED_X_REQUESTED_WITH_VALUE",
	1: "XMLHTTPREQUEST",
}

var Request_Headers_X_Requested_With_Value_value = map[string]int32{
	"UNUSED_X_REQUESTED_WITH_VALUE": 0,
	"XMLHTTPREQUEST":                1,
}

func (x Request_Headers_X_Requested_With_Value) String() string {
	return proto.EnumName(Request_Headers_X_Requested_With_Value_name, int32(x))
}

func (Request_Headers_X_Requested_With_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{1, 0, 1}
}

type Request_Headers_DNT_Value int32

const (
	Request_Headers_UNUSED_DNT_VALUE Request_Headers_DNT_Value = 0
	Request_Headers_DISABLED         Request_Headers_DNT_Value = 1
	Request_Headers_ENABLED          Request_Headers_DNT_Value = 2
)

var Request_Headers_DNT_Value_name = map[int32]string{
	0: "UNUSED_DNT_VALUE",
	1: "DISABLED",
	2: "ENABLED",
}

var Request_Headers_DNT_Value_value = map[string]int32{
	"UNUSED_DNT_VALUE": 0,
	"DISABLED":         1,
	"ENABLED":          2,
}

func (x Request_Headers_DNT_Value) String() string {
	return proto.EnumName(Request_Headers_DNT_Value_name, int32(x))
}

func (Request_Headers_DNT_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{1, 0, 2}
}

type Response_Codes int32

const (
	Response_UNUSED_CODE Response_Codes = 0
	Response_OK          Response_Codes = 200
)

var Response_Codes_name = map[int32]string{
	0:   "UNUSED_CODE",
	200: "OK",
}

var Response_Codes_value = map[string]int32{
	"UNUSED_CODE": 0,
	"OK":          200,
}

func (x Response_Codes) String() string {
	return proto.EnumName(Response_Codes_name, int32(x))
}

func (Response_Codes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2, 0}
}

type Response_Headers_Access_Control_Allow_Credentials_Value int32

const (
	Response_Headers_UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE Response_Headers_Access_Control_Allow_Credentials_Value = 0
	Response_Headers_FALSE                                         Response_Headers_Access_Control_Allow_Credentials_Value = 1
	Response_Headers_TRUE                                          Response_Headers_Access_Control_Allow_Credentials_Value = 2
)

var Response_Headers_Access_Control_Allow_Credentials_Value_name = map[int32]string{
	0: "UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE",
	1: "FALSE",
	2: "TRUE",
}

var Response_Headers_Access_Control_Allow_Credentials_Value_value = map[string]int32{
	"UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE": 0,
	"FALSE": 1,
	"TRUE":  2,
}

func (x Response_Headers_Access_Control_Allow_Credentials_Value) String() string {
	return proto.EnumName(Response_Headers_Access_Control_Allow_Credentials_Value_name, int32(x))
}

func (Response_Headers_Access_Control_Allow_Credentials_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2, 0, 0}
}

type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{0}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type Request struct {
	Method Request_Method `protobuf:"varint,1,opt,name=method,proto3,enum=web.Request_Method" json:"method,omitempty"`
	// Unset URI implies server-wide "*" request, i.e. for OPTIONS
	// TODO: separate absolute vs. relative?
	Uri                  string           `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Query                []*KeyValue      `protobuf:"bytes,3,rep,name=query,proto3" json:"query,omitempty"`
	Headers              *Request_Headers `protobuf:"bytes,4,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{1}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetMethod() Request_Method {
	if m != nil {
		return m.Method
	}
	return Request_UNUSED_METHOD
}

func (m *Request) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Request) GetQuery() []*KeyValue {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *Request) GetHeaders() *Request_Headers {
	if m != nil {
		return m.Headers
	}
	return nil
}

type Request_Headers struct {
	Accept                         string               `protobuf:"bytes,1,opt,name=Accept,proto3" json:"Accept,omitempty"`
	Accept_Charset                 string               `protobuf:"bytes,2,opt,name=Accept_Charset,json=AcceptCharset,proto3" json:"Accept_Charset,omitempty"`
	Accept_Datetime                string               `protobuf:"bytes,3,opt,name=Accept_Datetime,json=AcceptDatetime,proto3" json:"Accept_Datetime,omitempty"`
	Accept_Encoding                string               `protobuf:"bytes,4,opt,name=Accept_Encoding,json=AcceptEncoding,proto3" json:"Accept_Encoding,omitempty"`
	Accept_Language                string               `protobuf:"bytes,5,opt,name=Accept_Language,json=AcceptLanguage,proto3" json:"Accept_Language,omitempty"`
	Access_Control_Request_Method  Request_Method       `protobuf:"varint,6,opt,name=Access_Control_Request_Method,json=AccessControlRequestMethod,proto3,enum=web.Request_Method" json:"Access_Control_Request_Method,omitempty"`
	Access_Control_Request_Headers *Request_Headers     `protobuf:"bytes,7,opt,name=Access_Control_Request_Headers,json=AccessControlRequestHeaders,proto3" json:"Access_Control_Request_Headers,omitempty"`
	Authorization                  string               `protobuf:"bytes,8,opt,name=Authorization,proto3" json:"Authorization,omitempty"`
	Expect                         string               `protobuf:"bytes,9,opt,name=Expect,proto3" json:"Expect,omitempty"`
	Forwarded                      []*KeyValue          `protobuf:"bytes,10,rep,name=Forwarded,proto3" json:"Forwarded,omitempty"`
	From                           string               `protobuf:"bytes,11,opt,name=From,proto3" json:"From,omitempty"`
	Host                           string               `protobuf:"bytes,12,opt,name=Host,proto3" json:"Host,omitempty"`
	HTTP2_Settings                 string               `protobuf:"bytes,13,opt,name=HTTP2_Settings,json=HTTP2Settings,proto3" json:"HTTP2_Settings,omitempty"`
	If_Match                       string               `protobuf:"bytes,14,opt,name=If_Match,json=IfMatch,proto3" json:"If_Match,omitempty"`
	If_Modified_Since              *timestamp.Timestamp `protobuf:"bytes,15,opt,name=If_Modified_Since,json=IfModifiedSince,proto3" json:"If_Modified_Since,omitempty"`
	If_None_Match                  string               `protobuf:"bytes,16,opt,name=If_None_Match,json=IfNoneMatch,proto3" json:"If_None_Match,omitempty"`
	If_Range                       string               `protobuf:"bytes,17,opt,name=If_Range,json=IfRange,proto3" json:"If_Range,omitempty"`
	If_Unmodified_Since            *timestamp.Timestamp `protobuf:"bytes,18,opt,name=If_Unmodified_Since,json=IfUnmodifiedSince,proto3" json:"If_Unmodified_Since,omitempty"`
	Max_Forwards                   uint64               `protobuf:"varint,19,opt,name=Max_Forwards,json=MaxForwards,proto3" json:"Max_Forwards,omitempty"`
	Origin                         string               `protobuf:"bytes,20,opt,name=Origin,proto3" json:"Origin,omitempty"`
	Pragma                         string               `protobuf:"bytes,21,opt,name=Pragma,proto3" json:"Pragma,omitempty"`
	Proxy_Authorization            string               `protobuf:"bytes,22,opt,name=Proxy_Authorization,json=ProxyAuthorization,proto3" json:"Proxy_Authorization,omitempty"`
	// Types that are valid to be assigned to Range:
	//	*Request_Headers_Bytes
	Range                isRequest_Headers_Range                    `protobuf_oneof:"Range"`
	Referer              string                                     `protobuf:"bytes,24,opt,name=Referer,proto3" json:"Referer,omitempty"`
	TE                   []Request_Headers_Transfer_Encodings_Value `protobuf:"varint,25,rep,packed,name=TE,proto3,enum=web.Request_Headers_Transfer_Encodings_Value" json:"TE,omitempty"`
	User_Agent           string                                     `protobuf:"bytes,26,opt,name=User_Agent,json=UserAgent,proto3" json:"User_Agent,omitempty"`
	Via                  []string                                   `protobuf:"bytes,27,rep,name=Via,proto3" json:"Via,omitempty"`
	Warning              string                                     `protobuf:"bytes,28,opt,name=Warning,proto3" json:"Warning,omitempty"`
	X_Requested_With     Request_Headers_X_Requested_With_Value     `protobuf:"varint,29,opt,name=X_Requested_With,json=XRequestedWith,proto3,enum=web.Request_Headers_X_Requested_With_Value" json:"X_Requested_With,omitempty"`
	DNT                  Request_Headers_DNT_Value                  `protobuf:"varint,30,opt,name=DNT,proto3,enum=web.Request_Headers_DNT_Value" json:"DNT,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *Request_Headers) Reset()         { *m = Request_Headers{} }
func (m *Request_Headers) String() string { return proto.CompactTextString(m) }
func (*Request_Headers) ProtoMessage()    {}
func (*Request_Headers) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{1, 0}
}

func (m *Request_Headers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request_Headers.Unmarshal(m, b)
}
func (m *Request_Headers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request_Headers.Marshal(b, m, deterministic)
}
func (m *Request_Headers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request_Headers.Merge(m, src)
}
func (m *Request_Headers) XXX_Size() int {
	return xxx_messageInfo_Request_Headers.Size(m)
}
func (m *Request_Headers) XXX_DiscardUnknown() {
	xxx_messageInfo_Request_Headers.DiscardUnknown(m)
}

var xxx_messageInfo_Request_Headers proto.InternalMessageInfo

func (m *Request_Headers) GetAccept() string {
	if m != nil {
		return m.Accept
	}
	return ""
}

func (m *Request_Headers) GetAccept_Charset() string {
	if m != nil {
		return m.Accept_Charset
	}
	return ""
}

func (m *Request_Headers) GetAccept_Datetime() string {
	if m != nil {
		return m.Accept_Datetime
	}
	return ""
}

func (m *Request_Headers) GetAccept_Encoding() string {
	if m != nil {
		return m.Accept_Encoding
	}
	return ""
}

func (m *Request_Headers) GetAccept_Language() string {
	if m != nil {
		return m.Accept_Language
	}
	return ""
}

func (m *Request_Headers) GetAccess_Control_Request_Method() Request_Method {
	if m != nil {
		return m.Access_Control_Request_Method
	}
	return Request_UNUSED_METHOD
}

func (m *Request_Headers) GetAccess_Control_Request_Headers() *Request_Headers {
	if m != nil {
		return m.Access_Control_Request_Headers
	}
	return nil
}

func (m *Request_Headers) GetAuthorization() string {
	if m != nil {
		return m.Authorization
	}
	return ""
}

func (m *Request_Headers) GetExpect() string {
	if m != nil {
		return m.Expect
	}
	return ""
}

func (m *Request_Headers) GetForwarded() []*KeyValue {
	if m != nil {
		return m.Forwarded
	}
	return nil
}

func (m *Request_Headers) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Request_Headers) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Request_Headers) GetHTTP2_Settings() string {
	if m != nil {
		return m.HTTP2_Settings
	}
	return ""
}

func (m *Request_Headers) GetIf_Match() string {
	if m != nil {
		return m.If_Match
	}
	return ""
}

func (m *Request_Headers) GetIf_Modified_Since() *timestamp.Timestamp {
	if m != nil {
		return m.If_Modified_Since
	}
	return nil
}

func (m *Request_Headers) GetIf_None_Match() string {
	if m != nil {
		return m.If_None_Match
	}
	return ""
}

func (m *Request_Headers) GetIf_Range() string {
	if m != nil {
		return m.If_Range
	}
	return ""
}

func (m *Request_Headers) GetIf_Unmodified_Since() *timestamp.Timestamp {
	if m != nil {
		return m.If_Unmodified_Since
	}
	return nil
}

func (m *Request_Headers) GetMax_Forwards() uint64 {
	if m != nil {
		return m.Max_Forwards
	}
	return 0
}

func (m *Request_Headers) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *Request_Headers) GetPragma() string {
	if m != nil {
		return m.Pragma
	}
	return ""
}

func (m *Request_Headers) GetProxy_Authorization() string {
	if m != nil {
		return m.Proxy_Authorization
	}
	return ""
}

type isRequest_Headers_Range interface {
	isRequest_Headers_Range()
}

type Request_Headers_Bytes struct {
	Bytes *Request_Headers_ByteRange `protobuf:"bytes,23,opt,name=bytes,proto3,oneof"`
}

func (*Request_Headers_Bytes) isRequest_Headers_Range() {}

func (m *Request_Headers) GetRange() isRequest_Headers_Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *Request_Headers) GetBytes() *Request_Headers_ByteRange {
	if x, ok := m.GetRange().(*Request_Headers_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (m *Request_Headers) GetReferer() string {
	if m != nil {
		return m.Referer
	}
	return ""
}

func (m *Request_Headers) GetTE() []Request_Headers_Transfer_Encodings_Value {
	if m != nil {
		return m.TE
	}
	return nil
}

func (m *Request_Headers) GetUser_Agent() string {
	if m != nil {
		return m.User_Agent
	}
	return ""
}

func (m *Request_Headers) GetVia() []string {
	if m != nil {
		return m.Via
	}
	return nil
}

func (m *Request_Headers) GetWarning() string {
	if m != nil {
		return m.Warning
	}
	return ""
}

func (m *Request_Headers) GetX_Requested_With() Request_Headers_X_Requested_With_Value {
	if m != nil {
		return m.X_Requested_With
	}
	return Request_Headers_UNUSED_X_REQUESTED_WITH_VALUE
}

func (m *Request_Headers) GetDNT() Request_Headers_DNT_Value {
	if m != nil {
		return m.DNT
	}
	return Request_Headers_UNUSED_DNT_VALUE
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Request_Headers) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Request_Headers_Bytes)(nil),
	}
}

type Request_Headers_ByteRange struct {
	Start                uint64   `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  uint64   `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request_Headers_ByteRange) Reset()         { *m = Request_Headers_ByteRange{} }
func (m *Request_Headers_ByteRange) String() string { return proto.CompactTextString(m) }
func (*Request_Headers_ByteRange) ProtoMessage()    {}
func (*Request_Headers_ByteRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{1, 0, 0}
}

func (m *Request_Headers_ByteRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request_Headers_ByteRange.Unmarshal(m, b)
}
func (m *Request_Headers_ByteRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request_Headers_ByteRange.Marshal(b, m, deterministic)
}
func (m *Request_Headers_ByteRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request_Headers_ByteRange.Merge(m, src)
}
func (m *Request_Headers_ByteRange) XXX_Size() int {
	return xxx_messageInfo_Request_Headers_ByteRange.Size(m)
}
func (m *Request_Headers_ByteRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Request_Headers_ByteRange.DiscardUnknown(m)
}

var xxx_messageInfo_Request_Headers_ByteRange proto.InternalMessageInfo

func (m *Request_Headers_ByteRange) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Request_Headers_ByteRange) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

type Response struct {
	Code                 Response_Codes `protobuf:"varint,1,opt,name=Code,proto3,enum=web.Response_Codes" json:"Code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() Response_Codes {
	if m != nil {
		return m.Code
	}
	return Response_UNUSED_CODE
}

type Response_Headers struct {
	Access_Control_Allow_Origins     string                                                  `protobuf:"bytes,1,opt,name=Access_Control_Allow_Origins,json=AccessControlAllowOrigins,proto3" json:"Access_Control_Allow_Origins,omitempty"`
	Access_Control_Allow_Credentials Response_Headers_Access_Control_Allow_Credentials_Value `protobuf:"varint,2,opt,name=Access_Control_Allow_Credentials,json=AccessControlAllowCredentials,proto3,enum=web.Response_Headers_Access_Control_Allow_Credentials_Value" json:"Access_Control_Allow_Credentials,omitempty"`
	Access_Control_Expose_Headers    []string                                                `protobuf:"bytes,3,rep,name=Access_Control_Expose_Headers,json=AccessControlExposeHeaders,proto3" json:"Access_Control_Expose_Headers,omitempty"`
	XXX_NoUnkeyedLiteral             struct{}                                                `json:"-"`
	XXX_unrecognized                 []byte                                                  `json:"-"`
	XXX_sizecache                    int32                                                   `json:"-"`
}

func (m *Response_Headers) Reset()         { *m = Response_Headers{} }
func (m *Response_Headers) String() string { return proto.CompactTextString(m) }
func (*Response_Headers) ProtoMessage()    {}
func (*Response_Headers) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2, 0}
}

func (m *Response_Headers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers.Unmarshal(m, b)
}
func (m *Response_Headers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers.Marshal(b, m, deterministic)
}
func (m *Response_Headers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers.Merge(m, src)
}
func (m *Response_Headers) XXX_Size() int {
	return xxx_messageInfo_Response_Headers.Size(m)
}
func (m *Response_Headers) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers proto.InternalMessageInfo

func (m *Response_Headers) GetAccess_Control_Allow_Origins() string {
	if m != nil {
		return m.Access_Control_Allow_Origins
	}
	return ""
}

func (m *Response_Headers) GetAccess_Control_Allow_Credentials() Response_Headers_Access_Control_Allow_Credentials_Value {
	if m != nil {
		return m.Access_Control_Allow_Credentials
	}
	return Response_Headers_UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE
}

func (m *Response_Headers) GetAccess_Control_Expose_Headers() []string {
	if m != nil {
		return m.Access_Control_Expose_Headers
	}
	return nil
}

func init() {
	proto.RegisterEnum("web.Request_Method", Request_Method_name, Request_Method_value)
	proto.RegisterEnum("web.Request_Headers_Transfer_Encodings_Value", Request_Headers_Transfer_Encodings_Value_name, Request_Headers_Transfer_Encodings_Value_value)
	proto.RegisterEnum("web.Request_Headers_X_Requested_With_Value", Request_Headers_X_Requested_With_Value_name, Request_Headers_X_Requested_With_Value_value)
	proto.RegisterEnum("web.Request_Headers_DNT_Value", Request_Headers_DNT_Value_name, Request_Headers_DNT_Value_value)
	proto.RegisterEnum("web.Response_Codes", Response_Codes_name, Response_Codes_value)
	proto.RegisterEnum("web.Response_Headers_Access_Control_Allow_Credentials_Value", Response_Headers_Access_Control_Allow_Credentials_Value_name, Response_Headers_Access_Control_Allow_Credentials_Value_value)
	proto.RegisterType((*KeyValue)(nil), "web.KeyValue")
	proto.RegisterType((*Request)(nil), "web.Request")
	proto.RegisterType((*Request_Headers)(nil), "web.Request.Headers")
	proto.RegisterType((*Request_Headers_ByteRange)(nil), "web.Request.Headers.ByteRange")
	proto.RegisterType((*Response)(nil), "web.Response")
	proto.RegisterType((*Response_Headers)(nil), "web.Response.Headers")
}

func init() { proto.RegisterFile("web.proto", fileDescriptor_461bb3ac99194e85) }

var fileDescriptor_461bb3ac99194e85 = []byte{
	// 1177 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xdb, 0x72, 0xdb, 0x36,
	0x10, 0x8d, 0x44, 0x5d, 0x57, 0xb6, 0x4c, 0xc3, 0x6e, 0x8a, 0x28, 0x71, 0xa2, 0x28, 0xbd, 0x78,
	0x26, 0x13, 0xa5, 0x55, 0x66, 0xfa, 0x94, 0x4e, 0x87, 0x21, 0xe1, 0x88, 0x8d, 0x44, 0xba, 0x24,
	0x65, 0xbb, 0x4f, 0x1c, 0xda, 0x82, 0x64, 0x4e, 0x6d, 0x52, 0x21, 0xa9, 0xda, 0xea, 0x7b, 0xa7,
	0x1f, 0xd2, 0x8f, 0xe8, 0x2f, 0xf4, 0x33, 0xfa, 0x29, 0x1d, 0x5c, 0x28, 0x5b, 0x89, 0xdc, 0xf4,
	0x0d, 0x7b, 0xf6, 0x60, 0x71, 0xb0, 0xd8, 0x5d, 0x40, 0xfd, 0x8a, 0x9e, 0x76, 0x67, 0x49, 0x9c,
	0xc5, 0x48, 0xb9, 0xa2, 0xa7, 0xad, 0x27, 0xd3, 0x38, 0x9e, 0x5e, 0xd0, 0x97, 0x1c, 0x3a, 0x9d,
	0x4f, 0x5e, 0x66, 0xe1, 0x25, 0x4d, 0xb3, 0xe0, 0x72, 0x26, 0x58, 0x9d, 0x1e, 0xd4, 0xde, 0xd1,
	0xc5, 0x51, 0x70, 0x31, 0xa7, 0x48, 0x05, 0xe5, 0x17, 0xba, 0xc0, 0x85, 0x76, 0x61, 0xbf, 0xee,
	0xb0, 0x25, 0xda, 0x85, 0xf2, 0xaf, 0xcc, 0x85, 0x8b, 0x1c, 0x13, 0x46, 0xe7, 0xaf, 0x26, 0x54,
	0x1d, 0xfa, 0x7e, 0x4e, 0xd3, 0x0c, 0x3d, 0x87, 0xca, 0x25, 0xcd, 0xce, 0xe3, 0x31, 0xdf, 0xd6,
	0xec, 0xed, 0x74, 0x99, 0x02, 0xe9, 0xed, 0x0e, 0xb9, 0xcb, 0x91, 0x14, 0x76, 0xc0, 0x3c, 0x09,
	0x65, 0x30, 0xb6, 0x44, 0xcf, 0xa0, 0xfc, 0x7e, 0x4e, 0x93, 0x05, 0x56, 0xda, 0xca, 0x7e, 0xa3,
	0xb7, 0xc9, 0x77, 0xe7, 0x82, 0x1c, 0xe1, 0x43, 0x5d, 0xa8, 0x9e, 0xd3, 0x60, 0x4c, 0x93, 0x14,
	0x97, 0xda, 0x85, 0xfd, 0x46, 0x6f, 0x77, 0xe5, 0x90, 0xbe, 0xf0, 0x39, 0x39, 0xa9, 0xf5, 0xe7,
	0x06, 0x54, 0x25, 0x88, 0xee, 0x43, 0x45, 0x3b, 0x3b, 0xa3, 0xb3, 0x4c, 0x5e, 0x4b, 0x5a, 0xe8,
	0x4b, 0x68, 0x8a, 0x95, 0xaf, 0x9f, 0x07, 0x49, 0x4a, 0x33, 0xa9, 0x6a, 0x53, 0xa0, 0x12, 0x44,
	0x5f, 0xc3, 0x96, 0xa4, 0x19, 0x41, 0x46, 0x59, 0xf2, 0xb0, 0xc2, 0x79, 0x72, 0x77, 0x8e, 0xde,
	0x22, 0x92, 0xe8, 0x2c, 0x1e, 0x87, 0xd1, 0x94, 0x6b, 0x5d, 0x12, 0x73, 0xf4, 0x16, 0x71, 0x10,
	0x44, 0xd3, 0x79, 0x30, 0xa5, 0xb8, 0x7c, 0x9b, 0x98, 0xa3, 0xe8, 0x08, 0xf6, 0x18, 0x92, 0xa6,
	0xbe, 0x1e, 0x47, 0x59, 0x12, 0x5f, 0xf8, 0xf2, 0xc2, 0xbe, 0xc8, 0x2a, 0xae, 0xdc, 0x9d, 0xf0,
	0x96, 0xd8, 0x29, 0x37, 0x4a, 0xa7, 0xf0, 0xa1, 0x9f, 0xe1, 0xf1, 0x1d, 0x71, 0x65, 0xce, 0x70,
	0xf5, 0x3f, 0x92, 0xfc, 0x70, 0x5d, 0xe4, 0x3c, 0xd9, 0x5f, 0xc0, 0xa6, 0x36, 0xcf, 0xce, 0xe3,
	0x24, 0xfc, 0x2d, 0xc8, 0xc2, 0x38, 0xc2, 0x35, 0x99, 0xd3, 0xdb, 0x20, 0x7b, 0x12, 0x72, 0x3d,
	0xa3, 0x67, 0x19, 0xae, 0x8b, 0x27, 0x11, 0x16, 0x7a, 0x0e, 0xf5, 0x83, 0x38, 0xb9, 0x0a, 0x92,
	0x31, 0x1d, 0x63, 0x58, 0x57, 0x0f, 0x37, 0x7e, 0x84, 0xa0, 0x74, 0x90, 0xc4, 0x97, 0xb8, 0xc1,
	0x43, 0xf0, 0x35, 0xc3, 0xfa, 0x71, 0x9a, 0xe1, 0x0d, 0x81, 0xb1, 0x35, 0x7b, 0xe7, 0xbe, 0xe7,
	0x1d, 0xf6, 0x7c, 0x97, 0x66, 0x59, 0x18, 0x4d, 0x53, 0xbc, 0x29, 0x34, 0x71, 0x34, 0x07, 0xd1,
	0x03, 0xa8, 0x99, 0x13, 0x7f, 0x18, 0x64, 0x67, 0xe7, 0xb8, 0xc9, 0x09, 0x55, 0x73, 0xc2, 0x4d,
	0x74, 0x00, 0xdb, 0xcc, 0x15, 0x8f, 0xc3, 0x49, 0x48, 0xc7, 0xbe, 0x1b, 0x46, 0x67, 0x14, 0x6f,
	0xf1, 0x14, 0xb5, 0xba, 0xa2, 0xbd, 0xba, 0x79, 0x7b, 0x75, 0xbd, 0xbc, 0xbd, 0x9c, 0x2d, 0x73,
	0x92, 0xef, 0xe1, 0x5b, 0x50, 0x07, 0x36, 0xcd, 0x89, 0x6f, 0xc5, 0x11, 0x95, 0xe7, 0xa8, 0xfc,
	0x9c, 0x86, 0x39, 0x61, 0x98, 0x38, 0x4b, 0xc8, 0x70, 0x82, 0x68, 0x4a, 0xf1, 0x76, 0x2e, 0x83,
	0x9b, 0xe8, 0x47, 0xd8, 0x31, 0x27, 0xfe, 0x28, 0xba, 0x5c, 0x15, 0x82, 0x3e, 0x29, 0x64, 0xdb,
	0x9c, 0xdc, 0xec, 0x12, 0x52, 0x9e, 0xc2, 0xc6, 0x30, 0xb8, 0xf6, 0x65, 0x36, 0x53, 0xbc, 0xd3,
	0x2e, 0xec, 0x97, 0x9c, 0xc6, 0x30, 0xb8, 0xce, 0x21, 0xf6, 0x48, 0x76, 0x12, 0x4e, 0xc3, 0x08,
	0xef, 0x8a, 0x47, 0x12, 0x16, 0xc3, 0x0f, 0x93, 0x60, 0x7a, 0x19, 0xe0, 0xcf, 0x04, 0x2e, 0x2c,
	0xf4, 0x12, 0x76, 0x0e, 0x93, 0xf8, 0x7a, 0xe1, 0xaf, 0x16, 0xc0, 0x7d, 0x4e, 0x42, 0xdc, 0xb5,
	0x5a, 0x05, 0xdf, 0x41, 0xf9, 0x74, 0x91, 0xd1, 0x14, 0x7f, 0xce, 0x6f, 0xf0, 0x78, 0x5d, 0xb5,
	0x75, 0xdf, 0x2c, 0x32, 0xca, 0xaf, 0xdf, 0xbf, 0xe7, 0x08, 0x3a, 0xc2, 0x6c, 0xf6, 0x4c, 0x68,
	0x42, 0x13, 0x8c, 0x45, 0x86, 0xa4, 0x89, 0xbe, 0x87, 0xa2, 0x47, 0xf0, 0x83, 0xb6, 0xb2, 0xdf,
	0xec, 0xbd, 0x58, 0x1b, 0xce, 0x4b, 0x82, 0x28, 0x9d, 0xd0, 0x64, 0xd9, 0xa3, 0xa9, 0x2f, 0x0a,
	0xab, 0xe8, 0x11, 0xb4, 0x07, 0x30, 0x4a, 0x69, 0xe2, 0x6b, 0x53, 0x1a, 0x65, 0xb8, 0xc5, 0x63,
	0xd7, 0x19, 0xc2, 0x01, 0x36, 0xbb, 0x8e, 0xc2, 0x00, 0x3f, 0x6c, 0x2b, 0x6c, 0x76, 0x1d, 0x85,
	0x01, 0x53, 0x72, 0x1c, 0x24, 0x11, 0x6b, 0xf5, 0x47, 0x42, 0x89, 0x34, 0xd1, 0x08, 0xd4, 0x93,
	0xbc, 0xab, 0xe8, 0xd8, 0x3f, 0x0e, 0xb3, 0x73, 0xbc, 0xc7, 0xbb, 0xf5, 0xf9, 0x5a, 0x5d, 0x1f,
	0x92, 0xa5, 0xaa, 0xe6, 0xc9, 0x12, 0x66, 0x28, 0xfa, 0x06, 0x14, 0xc3, 0xf2, 0xf0, 0x63, 0x1e,
	0x69, 0x7d, 0xc2, 0x0c, 0xcb, 0x93, 0x9b, 0x19, 0xb5, 0xf5, 0x0a, 0xea, 0xcb, 0x14, 0xb2, 0x61,
	0x9e, 0x66, 0x41, 0x22, 0x26, 0x61, 0xc9, 0x11, 0x06, 0xbb, 0x17, 0x8d, 0xc6, 0x7c, 0xfa, 0x95,
	0x1c, 0xb6, 0xec, 0x0c, 0x01, 0xdf, 0x95, 0x28, 0xf4, 0x0c, 0x9e, 0x8c, 0xac, 0x91, 0x4b, 0x0c,
	0xdf, 0x73, 0x34, 0xcb, 0x3d, 0x20, 0x8e, 0x4f, 0x2c, 0xdd, 0x36, 0x4c, 0xeb, 0xad, 0xeb, 0x1f,
	0x69, 0x83, 0x11, 0x51, 0xef, 0xa1, 0x0d, 0xa8, 0x79, 0x8e, 0x66, 0x0e, 0x88, 0xe3, 0xaa, 0x85,
	0x8e, 0x0d, 0xf7, 0xd7, 0xdf, 0x0f, 0x3d, 0x85, 0x3d, 0x19, 0xec, 0xc4, 0x77, 0xc8, 0x4f, 0x23,
	0xe2, 0x7a, 0xc4, 0xf0, 0x8f, 0x4d, 0xaf, 0xbf, 0x0c, 0x85, 0xa0, 0x79, 0x32, 0x1c, 0xb0, 0x5e,
	0x95, 0x04, 0xb5, 0xd0, 0x79, 0x0d, 0xf5, 0xe5, 0x35, 0xd1, 0x2e, 0xa8, 0x32, 0x06, 0xc7, 0x6e,
	0x14, 0x18, 0xa6, 0xab, 0xbd, 0x19, 0x10, 0x43, 0x2d, 0xa0, 0x06, 0x54, 0x89, 0x25, 0x8c, 0xe2,
	0x9b, 0x2a, 0x94, 0x79, 0x3a, 0x3a, 0x09, 0x54, 0xe4, 0x44, 0xdc, 0x86, 0x4d, 0x19, 0x63, 0x48,
	0xbc, 0xbe, 0x6d, 0xa8, 0xf7, 0x50, 0x15, 0x94, 0xb7, 0xc4, 0x53, 0x0b, 0xa8, 0x06, 0xa5, 0x3e,
	0xd1, 0x0c, 0xb5, 0xc8, 0x56, 0x87, 0xb6, 0xeb, 0xa9, 0x0a, 0x73, 0x1e, 0x8e, 0x3c, 0xb5, 0x84,
	0x00, 0x2a, 0x06, 0x19, 0x10, 0x8f, 0xa8, 0x65, 0x76, 0x88, 0x6e, 0x5b, 0x16, 0xd1, 0x3d, 0xb5,
	0xc2, 0x0c, 0xfb, 0xd0, 0x33, 0x6d, 0xcb, 0x55, 0xab, 0xa8, 0x0e, 0x65, 0xcf, 0xd1, 0x74, 0xa2,
	0xd6, 0x3a, 0xff, 0x28, 0x50, 0x73, 0x68, 0x3a, 0x8b, 0xa3, 0x94, 0x7d, 0x19, 0x25, 0x3d, 0x1e,
	0xd3, 0x0f, 0x3e, 0x4e, 0xe1, 0xec, 0x32, 0x4f, 0xea, 0x70, 0x42, 0xeb, 0x0f, 0xe5, 0xe6, 0x3f,
	0xfb, 0x01, 0x1e, 0x7d, 0x30, 0xbd, 0xb5, 0x8b, 0x8b, 0xf8, 0xca, 0x17, 0xed, 0x99, 0xca, 0x5f,
	0xee, 0xc1, 0xca, 0x94, 0xe6, 0x0c, 0x49, 0x40, 0xbf, 0x17, 0xa0, 0xbd, 0x36, 0x82, 0x9e, 0xd0,
	0x31, 0x8d, 0xb2, 0x30, 0xb8, 0x48, 0x79, 0x35, 0x34, 0x7b, 0xaf, 0x57, 0x25, 0xe5, 0x35, 0xf6,
	0xa9, 0xdd, 0xb2, 0x00, 0xf7, 0x3e, 0xd6, 0x70, 0x8b, 0x84, 0xb4, 0x8f, 0xbe, 0x37, 0x72, 0x3d,
	0x8b, 0x53, 0xba, 0xfc, 0x85, 0x14, 0xde, 0x69, 0xab, 0x3f, 0x99, 0xa0, 0x48, 0x46, 0x67, 0x06,
	0x5f, 0xfd, 0x3f, 0x2d, 0xe8, 0x5b, 0x78, 0x21, 0x5f, 0x58, 0xd3, 0x75, 0xe2, 0xba, 0xbe, 0x6e,
	0x5b, 0x9e, 0x63, 0x0f, 0x7c, 0x6d, 0x30, 0xb0, 0x8f, 0x7d, 0xdd, 0x21, 0x06, 0xb1, 0x3c, 0x53,
	0x1b, 0xdc, 0x14, 0x71, 0x1d, 0xca, 0x07, 0xda, 0xc0, 0x25, 0xa2, 0x06, 0x3c, 0x67, 0x44, 0xd4,
	0x62, 0xe7, 0x29, 0x94, 0xf9, 0xc3, 0xa0, 0x2d, 0x68, 0xc8, 0x80, 0xba, 0x6d, 0x10, 0x5e, 0x30,
	0x45, 0xfb, 0x9d, 0xfa, 0x77, 0xe1, 0xb4, 0xc2, 0x47, 0xf0, 0xab, 0x7f, 0x03, 0x00, 0x00, 0xff,
	0xff, 0x32, 0xd7, 0x43, 0xb7, 0x8a, 0x09, 0x00, 0x00,
}
