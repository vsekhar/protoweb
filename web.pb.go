// Code generated by protoc-gen-go. DO NOT EDIT.
// source: web.proto

package web

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// some enums only used in oneof's (so don't need UNUSED_* = 0 value)
type Wildcard int32

const (
	Wildcard_STAR Wildcard = 0
)

var Wildcard_name = map[int32]string{
	0: "STAR",
}

var Wildcard_value = map[string]int32{
	"STAR": 0,
}

func (x Wildcard) String() string {
	return proto.EnumName(Wildcard_name, int32(x))
}

func (Wildcard) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{0}
}

type Already int32

const (
	Already_ALREADY Already = 0
)

var Already_name = map[int32]string{
	0: "ALREADY",
}

var Already_value = map[string]int32{
	"ALREADY": 0,
}

func (x Already) String() string {
	return proto.EnumName(Already_name, int32(x))
}

func (Already) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{1}
}

type Clear int32

const (
	Clear_CLEAR Clear = 0
)

var Clear_name = map[int32]string{
	0: "CLEAR",
}

var Clear_value = map[string]int32{
	"CLEAR": 0,
}

func (x Clear) String() string {
	return proto.EnumName(Clear_name, int32(x))
}

func (Clear) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2}
}

type Request_Method int32

const (
	Request_UNUSED_METHOD Request_Method = 0
	Request_GET           Request_Method = 1
	Request_HEAD          Request_Method = 2
	Request_POST          Request_Method = 3
	Request_PUT           Request_Method = 4
	Request_DELETE        Request_Method = 5
	Request_CONNECT       Request_Method = 6
	Request_OPTIONS       Request_Method = 7
	Request_TRACE         Request_Method = 8
)

var Request_Method_name = map[int32]string{
	0: "UNUSED_METHOD",
	1: "GET",
	2: "HEAD",
	3: "POST",
	4: "PUT",
	5: "DELETE",
	6: "CONNECT",
	7: "OPTIONS",
	8: "TRACE",
}

var Request_Method_value = map[string]int32{
	"UNUSED_METHOD": 0,
	"GET":           1,
	"HEAD":          2,
	"POST":          3,
	"PUT":           4,
	"DELETE":        5,
	"CONNECT":       6,
	"OPTIONS":       7,
	"TRACE":         8,
}

func (x Request_Method) String() string {
	return proto.EnumName(Request_Method_name, int32(x))
}

func (Request_Method) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2, 0}
}

type Request_Headers_Transfer_Encodings_Value int32

const (
	Request_Headers_UNUSED_TRANSFER_ENCODINGS_VALUE Request_Headers_Transfer_Encodings_Value = 0
	Request_Headers_TRAILERS                        Request_Headers_Transfer_Encodings_Value = 1
)

var Request_Headers_Transfer_Encodings_Value_name = map[int32]string{
	0: "UNUSED_TRANSFER_ENCODINGS_VALUE",
	1: "TRAILERS",
}

var Request_Headers_Transfer_Encodings_Value_value = map[string]int32{
	"UNUSED_TRANSFER_ENCODINGS_VALUE": 0,
	"TRAILERS":                        1,
}

func (x Request_Headers_Transfer_Encodings_Value) String() string {
	return proto.EnumName(Request_Headers_Transfer_Encodings_Value_name, int32(x))
}

func (Request_Headers_Transfer_Encodings_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2, 0, 0}
}

type Request_Headers_X_Requested_With_Value int32

const (
	Request_Headers_UNUSED_X_REQUESTED_WITH_VALUE Request_Headers_X_Requested_With_Value = 0
	Request_Headers_XMLHTTPREQUEST                Request_Headers_X_Requested_With_Value = 1
)

var Request_Headers_X_Requested_With_Value_name = map[int32]string{
	0: "UNUSED_X_REQUESTED_WITH_VALUE",
	1: "XMLHTTPREQUEST",
}

var Request_Headers_X_Requested_With_Value_value = map[string]int32{
	"UNUSED_X_REQUESTED_WITH_VALUE": 0,
	"XMLHTTPREQUEST":                1,
}

func (x Request_Headers_X_Requested_With_Value) String() string {
	return proto.EnumName(Request_Headers_X_Requested_With_Value_name, int32(x))
}

func (Request_Headers_X_Requested_With_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2, 0, 1}
}

type Request_Headers_DNT_Value int32

const (
	Request_Headers_UNUSED_DNT_VALUE Request_Headers_DNT_Value = 0
	Request_Headers_DISABLED         Request_Headers_DNT_Value = 1
	Request_Headers_ENABLED          Request_Headers_DNT_Value = 2
)

var Request_Headers_DNT_Value_name = map[int32]string{
	0: "UNUSED_DNT_VALUE",
	1: "DISABLED",
	2: "ENABLED",
}

var Request_Headers_DNT_Value_value = map[string]int32{
	"UNUSED_DNT_VALUE": 0,
	"DISABLED":         1,
	"ENABLED":          2,
}

func (x Request_Headers_DNT_Value) String() string {
	return proto.EnumName(Request_Headers_DNT_Value_name, int32(x))
}

func (Request_Headers_DNT_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2, 0, 2}
}

type Response_Code_Value int32

const (
	Response_UNUSED_CODE Response_Code_Value = 0
	Response_OK          Response_Code_Value = 200
)

var Response_Code_Value_name = map[int32]string{
	0:   "UNUSED_CODE",
	200: "OK",
}

var Response_Code_Value_value = map[string]int32{
	"UNUSED_CODE": 0,
	"OK":          200,
}

func (x Response_Code_Value) String() string {
	return proto.EnumName(Response_Code_Value_name, int32(x))
}

func (Response_Code_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3, 0}
}

type Response_Headers_Access_Control_Allow_Credentials_Value int32

const (
	Response_Headers_UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE Response_Headers_Access_Control_Allow_Credentials_Value = 0
	Response_Headers_FALSE                                         Response_Headers_Access_Control_Allow_Credentials_Value = 1
	Response_Headers_TRUE                                          Response_Headers_Access_Control_Allow_Credentials_Value = 2
)

var Response_Headers_Access_Control_Allow_Credentials_Value_name = map[int32]string{
	0: "UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE",
	1: "FALSE",
	2: "TRUE",
}

var Response_Headers_Access_Control_Allow_Credentials_Value_value = map[string]int32{
	"UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE": 0,
	"FALSE": 1,
	"TRUE":  2,
}

func (x Response_Headers_Access_Control_Allow_Credentials_Value) String() string {
	return proto.EnumName(Response_Headers_Access_Control_Allow_Credentials_Value_name, int32(x))
}

func (Response_Headers_Access_Control_Allow_Credentials_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3, 0, 0}
}

type Response_Headers_X_Frame_Options_Value int32

const (
	Response_Headers_UNUSED_X_FRAME_OPTIONS_VALUE Response_Headers_X_Frame_Options_Value = 0
	Response_Headers_DENY                         Response_Headers_X_Frame_Options_Value = 1
	Response_Headers_SAMEORIGIN                   Response_Headers_X_Frame_Options_Value = 2
)

var Response_Headers_X_Frame_Options_Value_name = map[int32]string{
	0: "UNUSED_X_FRAME_OPTIONS_VALUE",
	1: "DENY",
	2: "SAMEORIGIN",
}

var Response_Headers_X_Frame_Options_Value_value = map[string]int32{
	"UNUSED_X_FRAME_OPTIONS_VALUE": 0,
	"DENY":                         1,
	"SAMEORIGIN":                   2,
}

func (x Response_Headers_X_Frame_Options_Value) String() string {
	return proto.EnumName(Response_Headers_X_Frame_Options_Value_name, int32(x))
}

func (Response_Headers_X_Frame_Options_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3, 0, 1}
}

// Explicitly encoding the most common MIME types saves space on the wire
type Response_Headers_Content_Type_Message_Common_MIME_Types int32

const (
	Response_Headers_Content_Type_Message_UNUSED_MIME_TYPE         Response_Headers_Content_Type_Message_Common_MIME_Types = 0
	Response_Headers_Content_Type_Message_APPLICATION_OCTET_STREAM Response_Headers_Content_Type_Message_Common_MIME_Types = 1
	Response_Headers_Content_Type_Message_TEXT_HTML                Response_Headers_Content_Type_Message_Common_MIME_Types = 2
)

var Response_Headers_Content_Type_Message_Common_MIME_Types_name = map[int32]string{
	0: "UNUSED_MIME_TYPE",
	1: "APPLICATION_OCTET_STREAM",
	2: "TEXT_HTML",
}

var Response_Headers_Content_Type_Message_Common_MIME_Types_value = map[string]int32{
	"UNUSED_MIME_TYPE":         0,
	"APPLICATION_OCTET_STREAM": 1,
	"TEXT_HTML":                2,
}

func (x Response_Headers_Content_Type_Message_Common_MIME_Types) String() string {
	return proto.EnumName(Response_Headers_Content_Type_Message_Common_MIME_Types_name, int32(x))
}

func (Response_Headers_Content_Type_Message_Common_MIME_Types) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3, 0, 1, 0}
}

type Response_Headers_Set_Cookie_Message_SameSite_Value int32

const (
	Response_Headers_Set_Cookie_Message_UNUSED_SAMESITE_VALUE Response_Headers_Set_Cookie_Message_SameSite_Value = 0
	Response_Headers_Set_Cookie_Message_STRICT                Response_Headers_Set_Cookie_Message_SameSite_Value = 1
	Response_Headers_Set_Cookie_Message_LAX                   Response_Headers_Set_Cookie_Message_SameSite_Value = 2
	Response_Headers_Set_Cookie_Message_NONE                  Response_Headers_Set_Cookie_Message_SameSite_Value = 3
)

var Response_Headers_Set_Cookie_Message_SameSite_Value_name = map[int32]string{
	0: "UNUSED_SAMESITE_VALUE",
	1: "STRICT",
	2: "LAX",
	3: "NONE",
}

var Response_Headers_Set_Cookie_Message_SameSite_Value_value = map[string]int32{
	"UNUSED_SAMESITE_VALUE": 0,
	"STRICT":                1,
	"LAX":                   2,
	"NONE":                  3,
}

func (x Response_Headers_Set_Cookie_Message_SameSite_Value) String() string {
	return proto.EnumName(Response_Headers_Set_Cookie_Message_SameSite_Value_name, int32(x))
}

func (Response_Headers_Set_Cookie_Message_SameSite_Value) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3, 0, 2, 0}
}

type KeyValue struct {
	Key                  string   `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{0}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *KeyValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// oneof's can't have repeated fields, so need to put them in their own message
type StringList struct {
	Strings              []string `protobuf:"bytes,1,rep,name=Strings,proto3" json:"Strings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StringList) Reset()         { *m = StringList{} }
func (m *StringList) String() string { return proto.CompactTextString(m) }
func (*StringList) ProtoMessage()    {}
func (*StringList) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{1}
}

func (m *StringList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringList.Unmarshal(m, b)
}
func (m *StringList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringList.Marshal(b, m, deterministic)
}
func (m *StringList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringList.Merge(m, src)
}
func (m *StringList) XXX_Size() int {
	return xxx_messageInfo_StringList.Size(m)
}
func (m *StringList) XXX_DiscardUnknown() {
	xxx_messageInfo_StringList.DiscardUnknown(m)
}

var xxx_messageInfo_StringList proto.InternalMessageInfo

func (m *StringList) GetStrings() []string {
	if m != nil {
		return m.Strings
	}
	return nil
}

type Request struct {
	Method Request_Method `protobuf:"varint,1,opt,name=method,proto3,enum=web.Request_Method" json:"method,omitempty"`
	// Unset URI implies server-wide "*" request, i.e. for OPTIONS
	// TODO: separate absolute vs. relative?
	Uri                  string           `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Query                []*KeyValue      `protobuf:"bytes,3,rep,name=query,proto3" json:"query,omitempty"`
	Headers              *Request_Headers `protobuf:"bytes,4,opt,name=headers,proto3" json:"headers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetMethod() Request_Method {
	if m != nil {
		return m.Method
	}
	return Request_UNUSED_METHOD
}

func (m *Request) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Request) GetQuery() []*KeyValue {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *Request) GetHeaders() *Request_Headers {
	if m != nil {
		return m.Headers
	}
	return nil
}

type Request_Headers struct {
	Accept                         string               `protobuf:"bytes,1,opt,name=Accept,proto3" json:"Accept,omitempty"`
	Accept_Charset                 string               `protobuf:"bytes,2,opt,name=Accept_Charset,json=AcceptCharset,proto3" json:"Accept_Charset,omitempty"`
	Accept_Datetime                string               `protobuf:"bytes,3,opt,name=Accept_Datetime,json=AcceptDatetime,proto3" json:"Accept_Datetime,omitempty"`
	Accept_Encoding                string               `protobuf:"bytes,4,opt,name=Accept_Encoding,json=AcceptEncoding,proto3" json:"Accept_Encoding,omitempty"`
	Accept_Language                string               `protobuf:"bytes,5,opt,name=Accept_Language,json=AcceptLanguage,proto3" json:"Accept_Language,omitempty"`
	Access_Control_Request_Method  Request_Method       `protobuf:"varint,6,opt,name=Access_Control_Request_Method,json=AccessControlRequestMethod,proto3,enum=web.Request_Method" json:"Access_Control_Request_Method,omitempty"`
	Access_Control_Request_Headers *Request_Headers     `protobuf:"bytes,7,opt,name=Access_Control_Request_Headers,json=AccessControlRequestHeaders,proto3" json:"Access_Control_Request_Headers,omitempty"`
	Authorization                  string               `protobuf:"bytes,8,opt,name=Authorization,proto3" json:"Authorization,omitempty"`
	Expect                         string               `protobuf:"bytes,9,opt,name=Expect,proto3" json:"Expect,omitempty"`
	Forwarded                      []*KeyValue          `protobuf:"bytes,10,rep,name=Forwarded,proto3" json:"Forwarded,omitempty"`
	From                           string               `protobuf:"bytes,11,opt,name=From,proto3" json:"From,omitempty"`
	Host                           string               `protobuf:"bytes,12,opt,name=Host,proto3" json:"Host,omitempty"`
	HTTP2_Settings                 string               `protobuf:"bytes,13,opt,name=HTTP2_Settings,json=HTTP2Settings,proto3" json:"HTTP2_Settings,omitempty"`
	If_Match                       string               `protobuf:"bytes,14,opt,name=If_Match,json=IfMatch,proto3" json:"If_Match,omitempty"`
	If_Modified_Since              *timestamp.Timestamp `protobuf:"bytes,15,opt,name=If_Modified_Since,json=IfModifiedSince,proto3" json:"If_Modified_Since,omitempty"`
	If_None_Match                  string               `protobuf:"bytes,16,opt,name=If_None_Match,json=IfNoneMatch,proto3" json:"If_None_Match,omitempty"`
	If_Range                       string               `protobuf:"bytes,17,opt,name=If_Range,json=IfRange,proto3" json:"If_Range,omitempty"`
	If_Unmodified_Since            *timestamp.Timestamp `protobuf:"bytes,18,opt,name=If_Unmodified_Since,json=IfUnmodifiedSince,proto3" json:"If_Unmodified_Since,omitempty"`
	Max_Forwards                   uint64               `protobuf:"varint,19,opt,name=Max_Forwards,json=MaxForwards,proto3" json:"Max_Forwards,omitempty"`
	Origin                         string               `protobuf:"bytes,20,opt,name=Origin,proto3" json:"Origin,omitempty"`
	Pragma                         string               `protobuf:"bytes,21,opt,name=Pragma,proto3" json:"Pragma,omitempty"`
	Proxy_Authorization            string               `protobuf:"bytes,22,opt,name=Proxy_Authorization,json=ProxyAuthorization,proto3" json:"Proxy_Authorization,omitempty"`
	// Types that are valid to be assigned to Range:
	//	*Request_Headers_Bytes
	Range                isRequest_Headers_Range                    `protobuf_oneof:"Range"`
	Referer              string                                     `protobuf:"bytes,24,opt,name=Referer,proto3" json:"Referer,omitempty"`
	TE                   []Request_Headers_Transfer_Encodings_Value `protobuf:"varint,25,rep,packed,name=TE,proto3,enum=web.Request_Headers_Transfer_Encodings_Value" json:"TE,omitempty"`
	User_Agent           string                                     `protobuf:"bytes,26,opt,name=User_Agent,json=UserAgent,proto3" json:"User_Agent,omitempty"`
	Via                  []string                                   `protobuf:"bytes,27,rep,name=Via,proto3" json:"Via,omitempty"`
	Warning              string                                     `protobuf:"bytes,28,opt,name=Warning,proto3" json:"Warning,omitempty"`
	X_Requested_With     Request_Headers_X_Requested_With_Value     `protobuf:"varint,29,opt,name=X_Requested_With,json=XRequestedWith,proto3,enum=web.Request_Headers_X_Requested_With_Value" json:"X_Requested_With,omitempty"`
	DNT                  Request_Headers_DNT_Value                  `protobuf:"varint,30,opt,name=DNT,proto3,enum=web.Request_Headers_DNT_Value" json:"DNT,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                   `json:"-"`
	XXX_unrecognized     []byte                                     `json:"-"`
	XXX_sizecache        int32                                      `json:"-"`
}

func (m *Request_Headers) Reset()         { *m = Request_Headers{} }
func (m *Request_Headers) String() string { return proto.CompactTextString(m) }
func (*Request_Headers) ProtoMessage()    {}
func (*Request_Headers) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2, 0}
}

func (m *Request_Headers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request_Headers.Unmarshal(m, b)
}
func (m *Request_Headers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request_Headers.Marshal(b, m, deterministic)
}
func (m *Request_Headers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request_Headers.Merge(m, src)
}
func (m *Request_Headers) XXX_Size() int {
	return xxx_messageInfo_Request_Headers.Size(m)
}
func (m *Request_Headers) XXX_DiscardUnknown() {
	xxx_messageInfo_Request_Headers.DiscardUnknown(m)
}

var xxx_messageInfo_Request_Headers proto.InternalMessageInfo

func (m *Request_Headers) GetAccept() string {
	if m != nil {
		return m.Accept
	}
	return ""
}

func (m *Request_Headers) GetAccept_Charset() string {
	if m != nil {
		return m.Accept_Charset
	}
	return ""
}

func (m *Request_Headers) GetAccept_Datetime() string {
	if m != nil {
		return m.Accept_Datetime
	}
	return ""
}

func (m *Request_Headers) GetAccept_Encoding() string {
	if m != nil {
		return m.Accept_Encoding
	}
	return ""
}

func (m *Request_Headers) GetAccept_Language() string {
	if m != nil {
		return m.Accept_Language
	}
	return ""
}

func (m *Request_Headers) GetAccess_Control_Request_Method() Request_Method {
	if m != nil {
		return m.Access_Control_Request_Method
	}
	return Request_UNUSED_METHOD
}

func (m *Request_Headers) GetAccess_Control_Request_Headers() *Request_Headers {
	if m != nil {
		return m.Access_Control_Request_Headers
	}
	return nil
}

func (m *Request_Headers) GetAuthorization() string {
	if m != nil {
		return m.Authorization
	}
	return ""
}

func (m *Request_Headers) GetExpect() string {
	if m != nil {
		return m.Expect
	}
	return ""
}

func (m *Request_Headers) GetForwarded() []*KeyValue {
	if m != nil {
		return m.Forwarded
	}
	return nil
}

func (m *Request_Headers) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Request_Headers) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Request_Headers) GetHTTP2_Settings() string {
	if m != nil {
		return m.HTTP2_Settings
	}
	return ""
}

func (m *Request_Headers) GetIf_Match() string {
	if m != nil {
		return m.If_Match
	}
	return ""
}

func (m *Request_Headers) GetIf_Modified_Since() *timestamp.Timestamp {
	if m != nil {
		return m.If_Modified_Since
	}
	return nil
}

func (m *Request_Headers) GetIf_None_Match() string {
	if m != nil {
		return m.If_None_Match
	}
	return ""
}

func (m *Request_Headers) GetIf_Range() string {
	if m != nil {
		return m.If_Range
	}
	return ""
}

func (m *Request_Headers) GetIf_Unmodified_Since() *timestamp.Timestamp {
	if m != nil {
		return m.If_Unmodified_Since
	}
	return nil
}

func (m *Request_Headers) GetMax_Forwards() uint64 {
	if m != nil {
		return m.Max_Forwards
	}
	return 0
}

func (m *Request_Headers) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

func (m *Request_Headers) GetPragma() string {
	if m != nil {
		return m.Pragma
	}
	return ""
}

func (m *Request_Headers) GetProxy_Authorization() string {
	if m != nil {
		return m.Proxy_Authorization
	}
	return ""
}

type isRequest_Headers_Range interface {
	isRequest_Headers_Range()
}

type Request_Headers_Bytes struct {
	Bytes *Request_Headers_ByteRange `protobuf:"bytes,23,opt,name=Bytes,proto3,oneof"`
}

func (*Request_Headers_Bytes) isRequest_Headers_Range() {}

func (m *Request_Headers) GetRange() isRequest_Headers_Range {
	if m != nil {
		return m.Range
	}
	return nil
}

func (m *Request_Headers) GetBytes() *Request_Headers_ByteRange {
	if x, ok := m.GetRange().(*Request_Headers_Bytes); ok {
		return x.Bytes
	}
	return nil
}

func (m *Request_Headers) GetReferer() string {
	if m != nil {
		return m.Referer
	}
	return ""
}

func (m *Request_Headers) GetTE() []Request_Headers_Transfer_Encodings_Value {
	if m != nil {
		return m.TE
	}
	return nil
}

func (m *Request_Headers) GetUser_Agent() string {
	if m != nil {
		return m.User_Agent
	}
	return ""
}

func (m *Request_Headers) GetVia() []string {
	if m != nil {
		return m.Via
	}
	return nil
}

func (m *Request_Headers) GetWarning() string {
	if m != nil {
		return m.Warning
	}
	return ""
}

func (m *Request_Headers) GetX_Requested_With() Request_Headers_X_Requested_With_Value {
	if m != nil {
		return m.X_Requested_With
	}
	return Request_Headers_UNUSED_X_REQUESTED_WITH_VALUE
}

func (m *Request_Headers) GetDNT() Request_Headers_DNT_Value {
	if m != nil {
		return m.DNT
	}
	return Request_Headers_UNUSED_DNT_VALUE
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Request_Headers) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Request_Headers_Bytes)(nil),
	}
}

type Request_Headers_ByteRange struct {
	Start                uint64   `protobuf:"varint,1,opt,name=Start,proto3" json:"Start,omitempty"`
	End                  uint64   `protobuf:"varint,2,opt,name=End,proto3" json:"End,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request_Headers_ByteRange) Reset()         { *m = Request_Headers_ByteRange{} }
func (m *Request_Headers_ByteRange) String() string { return proto.CompactTextString(m) }
func (*Request_Headers_ByteRange) ProtoMessage()    {}
func (*Request_Headers_ByteRange) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{2, 0, 0}
}

func (m *Request_Headers_ByteRange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request_Headers_ByteRange.Unmarshal(m, b)
}
func (m *Request_Headers_ByteRange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request_Headers_ByteRange.Marshal(b, m, deterministic)
}
func (m *Request_Headers_ByteRange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request_Headers_ByteRange.Merge(m, src)
}
func (m *Request_Headers_ByteRange) XXX_Size() int {
	return xxx_messageInfo_Request_Headers_ByteRange.Size(m)
}
func (m *Request_Headers_ByteRange) XXX_DiscardUnknown() {
	xxx_messageInfo_Request_Headers_ByteRange.DiscardUnknown(m)
}

var xxx_messageInfo_Request_Headers_ByteRange proto.InternalMessageInfo

func (m *Request_Headers_ByteRange) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Request_Headers_ByteRange) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

type Response struct {
	Code                 Response_Code_Value `protobuf:"varint,1,opt,name=Code,proto3,enum=web.Response_Code_Value" json:"Code,omitempty"`
	Headers              *Response_Headers   `protobuf:"bytes,2,opt,name=headers,proto3" json:"headers,omitempty"`
	Body                 []byte              `protobuf:"bytes,3,opt,name=Body,proto3" json:"Body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetCode() Response_Code_Value {
	if m != nil {
		return m.Code
	}
	return Response_UNUSED_CODE
}

func (m *Response) GetHeaders() *Response_Headers {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Response) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Response_Headers struct {
	// Types that are valid to be assigned to Access_Control_Allow_Origin:
	//	*Response_Headers_Access_Control_Allow_Origin_All
	//	*Response_Headers_Access_Control_Allow_Origin_Origins
	Access_Control_Allow_Origin      isResponse_Headers_Access_Control_Allow_Origin          `protobuf_oneof:"Access_Control_Allow_Origin"`
	Access_Control_Allow_Credentials Response_Headers_Access_Control_Allow_Credentials_Value `protobuf:"varint,3,opt,name=Access_Control_Allow_Credentials,json=AccessControlAllowCredentials,proto3,enum=web.Response_Headers_Access_Control_Allow_Credentials_Value" json:"Access_Control_Allow_Credentials,omitempty"`
	Access_Control_Expose_Headers    []string                                                `protobuf:"bytes,4,rep,name=Access_Control_Expose_Headers,json=AccessControlExposeHeaders,proto3" json:"Access_Control_Expose_Headers,omitempty"`
	// Types that are valid to be assigned to Alt_Svc:
	//	*Response_Headers_Alt_Svc_Clear
	//	*Response_Headers_Service
	Alt_Svc      isResponse_Headers_Alt_Svc             `protobuf_oneof:"Alt_Svc"`
	Content_Type *Response_Headers_Content_Type_Message `protobuf:"bytes,7,opt,name=Content_Type,json=ContentType,proto3" json:"Content_Type,omitempty"`
	Date         *timestamp.Timestamp                   `protobuf:"bytes,8,opt,name=Date,proto3" json:"Date,omitempty"`
	// Types that are valid to be assigned to Expires:
	//	*Response_Headers_Expires_Already
	//	*Response_Headers_Expires_Date
	Expires isResponse_Headers_Expires `protobuf_oneof:"Expires"`
	Server  string                     `protobuf:"bytes,11,opt,name=Server,proto3" json:"Server,omitempty"`
	// Types that are valid to be assigned to Vary:
	//	*Response_Headers_Vary_All
	//	*Response_Headers_Vary_Headers
	Vary                 isResponse_Headers_Vary                `protobuf_oneof:"Vary"`
	X_Frame_Options      Response_Headers_X_Frame_Options_Value `protobuf:"varint,14,opt,name=X_Frame_Options,json=XFrameOptions,proto3,enum=web.Response_Headers_X_Frame_Options_Value" json:"X_Frame_Options,omitempty"`
	X_XSS_Protection     string                                 `protobuf:"bytes,15,opt,name=X_XSS_Protection,json=XXSSProtection,proto3" json:"X_XSS_Protection,omitempty"`
	Set_Cookie           []*Response_Headers_Set_Cookie_Message `protobuf:"bytes,16,rep,name=Set_Cookie,json=SetCookie,proto3" json:"Set_Cookie,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *Response_Headers) Reset()         { *m = Response_Headers{} }
func (m *Response_Headers) String() string { return proto.CompactTextString(m) }
func (*Response_Headers) ProtoMessage()    {}
func (*Response_Headers) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3, 0}
}

func (m *Response_Headers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers.Unmarshal(m, b)
}
func (m *Response_Headers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers.Marshal(b, m, deterministic)
}
func (m *Response_Headers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers.Merge(m, src)
}
func (m *Response_Headers) XXX_Size() int {
	return xxx_messageInfo_Response_Headers.Size(m)
}
func (m *Response_Headers) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers proto.InternalMessageInfo

type isResponse_Headers_Access_Control_Allow_Origin interface {
	isResponse_Headers_Access_Control_Allow_Origin()
}

type Response_Headers_Access_Control_Allow_Origin_All struct {
	Access_Control_Allow_Origin_All Wildcard `protobuf:"varint,1,opt,name=Access_Control_Allow_Origin_All,json=AccessControlAllowOriginAll,proto3,enum=web.Wildcard,oneof"`
}

type Response_Headers_Access_Control_Allow_Origin_Origins struct {
	Access_Control_Allow_Origin_Origins *StringList `protobuf:"bytes,2,opt,name=Access_Control_Allow_Origin_Origins,json=AccessControlAllowOriginOrigins,proto3,oneof"`
}

func (*Response_Headers_Access_Control_Allow_Origin_All) isResponse_Headers_Access_Control_Allow_Origin() {
}

func (*Response_Headers_Access_Control_Allow_Origin_Origins) isResponse_Headers_Access_Control_Allow_Origin() {
}

func (m *Response_Headers) GetAccess_Control_Allow_Origin() isResponse_Headers_Access_Control_Allow_Origin {
	if m != nil {
		return m.Access_Control_Allow_Origin
	}
	return nil
}

func (m *Response_Headers) GetAccess_Control_Allow_Origin_All() Wildcard {
	if x, ok := m.GetAccess_Control_Allow_Origin().(*Response_Headers_Access_Control_Allow_Origin_All); ok {
		return x.Access_Control_Allow_Origin_All
	}
	return Wildcard_STAR
}

func (m *Response_Headers) GetAccess_Control_Allow_Origin_Origins() *StringList {
	if x, ok := m.GetAccess_Control_Allow_Origin().(*Response_Headers_Access_Control_Allow_Origin_Origins); ok {
		return x.Access_Control_Allow_Origin_Origins
	}
	return nil
}

func (m *Response_Headers) GetAccess_Control_Allow_Credentials() Response_Headers_Access_Control_Allow_Credentials_Value {
	if m != nil {
		return m.Access_Control_Allow_Credentials
	}
	return Response_Headers_UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE
}

func (m *Response_Headers) GetAccess_Control_Expose_Headers() []string {
	if m != nil {
		return m.Access_Control_Expose_Headers
	}
	return nil
}

type isResponse_Headers_Alt_Svc interface {
	isResponse_Headers_Alt_Svc()
}

type Response_Headers_Alt_Svc_Clear struct {
	Alt_Svc_Clear Clear `protobuf:"varint,5,opt,name=Alt_Svc_Clear,json=AltSvcClear,proto3,enum=web.Clear,oneof"`
}

type Response_Headers_Service struct {
	Service *Response_Headers_Alt_Svc_Message `protobuf:"bytes,6,opt,name=Service,proto3,oneof"`
}

func (*Response_Headers_Alt_Svc_Clear) isResponse_Headers_Alt_Svc() {}

func (*Response_Headers_Service) isResponse_Headers_Alt_Svc() {}

func (m *Response_Headers) GetAlt_Svc() isResponse_Headers_Alt_Svc {
	if m != nil {
		return m.Alt_Svc
	}
	return nil
}

func (m *Response_Headers) GetAlt_Svc_Clear() Clear {
	if x, ok := m.GetAlt_Svc().(*Response_Headers_Alt_Svc_Clear); ok {
		return x.Alt_Svc_Clear
	}
	return Clear_CLEAR
}

func (m *Response_Headers) GetService() *Response_Headers_Alt_Svc_Message {
	if x, ok := m.GetAlt_Svc().(*Response_Headers_Service); ok {
		return x.Service
	}
	return nil
}

func (m *Response_Headers) GetContent_Type() *Response_Headers_Content_Type_Message {
	if m != nil {
		return m.Content_Type
	}
	return nil
}

func (m *Response_Headers) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type isResponse_Headers_Expires interface {
	isResponse_Headers_Expires()
}

type Response_Headers_Expires_Already struct {
	Expires_Already Already `protobuf:"varint,9,opt,name=Expires_Already,json=ExpiresAlready,proto3,enum=web.Already,oneof"`
}

type Response_Headers_Expires_Date struct {
	Expires_Date *timestamp.Timestamp `protobuf:"bytes,10,opt,name=Expires_Date,json=ExpiresDate,proto3,oneof"`
}

func (*Response_Headers_Expires_Already) isResponse_Headers_Expires() {}

func (*Response_Headers_Expires_Date) isResponse_Headers_Expires() {}

func (m *Response_Headers) GetExpires() isResponse_Headers_Expires {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *Response_Headers) GetExpires_Already() Already {
	if x, ok := m.GetExpires().(*Response_Headers_Expires_Already); ok {
		return x.Expires_Already
	}
	return Already_ALREADY
}

func (m *Response_Headers) GetExpires_Date() *timestamp.Timestamp {
	if x, ok := m.GetExpires().(*Response_Headers_Expires_Date); ok {
		return x.Expires_Date
	}
	return nil
}

func (m *Response_Headers) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

type isResponse_Headers_Vary interface {
	isResponse_Headers_Vary()
}

type Response_Headers_Vary_All struct {
	Vary_All Wildcard `protobuf:"varint,12,opt,name=Vary_All,json=VaryAll,proto3,enum=web.Wildcard,oneof"`
}

type Response_Headers_Vary_Headers struct {
	Vary_Headers *StringList `protobuf:"bytes,13,opt,name=Vary_Headers,json=VaryHeaders,proto3,oneof"`
}

func (*Response_Headers_Vary_All) isResponse_Headers_Vary() {}

func (*Response_Headers_Vary_Headers) isResponse_Headers_Vary() {}

func (m *Response_Headers) GetVary() isResponse_Headers_Vary {
	if m != nil {
		return m.Vary
	}
	return nil
}

func (m *Response_Headers) GetVary_All() Wildcard {
	if x, ok := m.GetVary().(*Response_Headers_Vary_All); ok {
		return x.Vary_All
	}
	return Wildcard_STAR
}

func (m *Response_Headers) GetVary_Headers() *StringList {
	if x, ok := m.GetVary().(*Response_Headers_Vary_Headers); ok {
		return x.Vary_Headers
	}
	return nil
}

func (m *Response_Headers) GetX_Frame_Options() Response_Headers_X_Frame_Options_Value {
	if m != nil {
		return m.X_Frame_Options
	}
	return Response_Headers_UNUSED_X_FRAME_OPTIONS_VALUE
}

func (m *Response_Headers) GetX_XSS_Protection() string {
	if m != nil {
		return m.X_XSS_Protection
	}
	return ""
}

func (m *Response_Headers) GetSet_Cookie() []*Response_Headers_Set_Cookie_Message {
	if m != nil {
		return m.Set_Cookie
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Response_Headers) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Response_Headers_Access_Control_Allow_Origin_All)(nil),
		(*Response_Headers_Access_Control_Allow_Origin_Origins)(nil),
		(*Response_Headers_Alt_Svc_Clear)(nil),
		(*Response_Headers_Service)(nil),
		(*Response_Headers_Expires_Already)(nil),
		(*Response_Headers_Expires_Date)(nil),
		(*Response_Headers_Vary_All)(nil),
		(*Response_Headers_Vary_Headers)(nil),
	}
}

type Response_Headers_Alt_Svc_Message struct {
	Services             []*Response_Headers_Alt_Svc_Message_Service `protobuf:"bytes,1,rep,name=Services,proto3" json:"Services,omitempty"`
	Max_Age              uint64                                      `protobuf:"varint,2,opt,name=Max_Age,json=MaxAge,proto3" json:"Max_Age,omitempty"`
	Persist              bool                                        `protobuf:"varint,3,opt,name=Persist,proto3" json:"Persist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *Response_Headers_Alt_Svc_Message) Reset()         { *m = Response_Headers_Alt_Svc_Message{} }
func (m *Response_Headers_Alt_Svc_Message) String() string { return proto.CompactTextString(m) }
func (*Response_Headers_Alt_Svc_Message) ProtoMessage()    {}
func (*Response_Headers_Alt_Svc_Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3, 0, 0}
}

func (m *Response_Headers_Alt_Svc_Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers_Alt_Svc_Message.Unmarshal(m, b)
}
func (m *Response_Headers_Alt_Svc_Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers_Alt_Svc_Message.Marshal(b, m, deterministic)
}
func (m *Response_Headers_Alt_Svc_Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers_Alt_Svc_Message.Merge(m, src)
}
func (m *Response_Headers_Alt_Svc_Message) XXX_Size() int {
	return xxx_messageInfo_Response_Headers_Alt_Svc_Message.Size(m)
}
func (m *Response_Headers_Alt_Svc_Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers_Alt_Svc_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers_Alt_Svc_Message proto.InternalMessageInfo

func (m *Response_Headers_Alt_Svc_Message) GetServices() []*Response_Headers_Alt_Svc_Message_Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *Response_Headers_Alt_Svc_Message) GetMax_Age() uint64 {
	if m != nil {
		return m.Max_Age
	}
	return 0
}

func (m *Response_Headers_Alt_Svc_Message) GetPersist() bool {
	if m != nil {
		return m.Persist
	}
	return false
}

type Response_Headers_Alt_Svc_Message_Service struct {
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Host_Name            string   `protobuf:"bytes,2,opt,name=Host_Name,json=HostName,proto3" json:"Host_Name,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response_Headers_Alt_Svc_Message_Service) Reset() {
	*m = Response_Headers_Alt_Svc_Message_Service{}
}
func (m *Response_Headers_Alt_Svc_Message_Service) String() string { return proto.CompactTextString(m) }
func (*Response_Headers_Alt_Svc_Message_Service) ProtoMessage()    {}
func (*Response_Headers_Alt_Svc_Message_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3, 0, 0, 0}
}

func (m *Response_Headers_Alt_Svc_Message_Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers_Alt_Svc_Message_Service.Unmarshal(m, b)
}
func (m *Response_Headers_Alt_Svc_Message_Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers_Alt_Svc_Message_Service.Marshal(b, m, deterministic)
}
func (m *Response_Headers_Alt_Svc_Message_Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers_Alt_Svc_Message_Service.Merge(m, src)
}
func (m *Response_Headers_Alt_Svc_Message_Service) XXX_Size() int {
	return xxx_messageInfo_Response_Headers_Alt_Svc_Message_Service.Size(m)
}
func (m *Response_Headers_Alt_Svc_Message_Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers_Alt_Svc_Message_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers_Alt_Svc_Message_Service proto.InternalMessageInfo

func (m *Response_Headers_Alt_Svc_Message_Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response_Headers_Alt_Svc_Message_Service) GetHost_Name() string {
	if m != nil {
		return m.Host_Name
	}
	return ""
}

func (m *Response_Headers_Alt_Svc_Message_Service) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Response_Headers_Content_Type_Message struct {
	// Types that are valid to be assigned to Content_Type_Message:
	//	*Response_Headers_Content_Type_Message_Common_MIME_Type
	//	*Response_Headers_Content_Type_Message_Other
	Content_Type_Message isResponse_Headers_Content_Type_Message_Content_Type_Message `protobuf_oneof:"Content_Type_Message"`
	Parameter            *KeyValue                                                    `protobuf:"bytes,3,opt,name=Parameter,proto3" json:"Parameter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                                     `json:"-"`
	XXX_unrecognized     []byte                                                       `json:"-"`
	XXX_sizecache        int32                                                        `json:"-"`
}

func (m *Response_Headers_Content_Type_Message) Reset()         { *m = Response_Headers_Content_Type_Message{} }
func (m *Response_Headers_Content_Type_Message) String() string { return proto.CompactTextString(m) }
func (*Response_Headers_Content_Type_Message) ProtoMessage()    {}
func (*Response_Headers_Content_Type_Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3, 0, 1}
}

func (m *Response_Headers_Content_Type_Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers_Content_Type_Message.Unmarshal(m, b)
}
func (m *Response_Headers_Content_Type_Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers_Content_Type_Message.Marshal(b, m, deterministic)
}
func (m *Response_Headers_Content_Type_Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers_Content_Type_Message.Merge(m, src)
}
func (m *Response_Headers_Content_Type_Message) XXX_Size() int {
	return xxx_messageInfo_Response_Headers_Content_Type_Message.Size(m)
}
func (m *Response_Headers_Content_Type_Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers_Content_Type_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers_Content_Type_Message proto.InternalMessageInfo

type isResponse_Headers_Content_Type_Message_Content_Type_Message interface {
	isResponse_Headers_Content_Type_Message_Content_Type_Message()
}

type Response_Headers_Content_Type_Message_Common_MIME_Type struct {
	Common_MIME_Type Response_Headers_Content_Type_Message_Common_MIME_Types `protobuf:"varint,1,opt,name=Common_MIME_Type,json=CommonMIMEType,proto3,enum=web.Response_Headers_Content_Type_Message_Common_MIME_Types,oneof"`
}

type Response_Headers_Content_Type_Message_Other struct {
	Other string `protobuf:"bytes,2,opt,name=Other,proto3,oneof"`
}

func (*Response_Headers_Content_Type_Message_Common_MIME_Type) isResponse_Headers_Content_Type_Message_Content_Type_Message() {
}

func (*Response_Headers_Content_Type_Message_Other) isResponse_Headers_Content_Type_Message_Content_Type_Message() {
}

func (m *Response_Headers_Content_Type_Message) GetContent_Type_Message() isResponse_Headers_Content_Type_Message_Content_Type_Message {
	if m != nil {
		return m.Content_Type_Message
	}
	return nil
}

func (m *Response_Headers_Content_Type_Message) GetCommon_MIME_Type() Response_Headers_Content_Type_Message_Common_MIME_Types {
	if x, ok := m.GetContent_Type_Message().(*Response_Headers_Content_Type_Message_Common_MIME_Type); ok {
		return x.Common_MIME_Type
	}
	return Response_Headers_Content_Type_Message_UNUSED_MIME_TYPE
}

func (m *Response_Headers_Content_Type_Message) GetOther() string {
	if x, ok := m.GetContent_Type_Message().(*Response_Headers_Content_Type_Message_Other); ok {
		return x.Other
	}
	return ""
}

func (m *Response_Headers_Content_Type_Message) GetParameter() *KeyValue {
	if m != nil {
		return m.Parameter
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Response_Headers_Content_Type_Message) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Response_Headers_Content_Type_Message_Common_MIME_Type)(nil),
		(*Response_Headers_Content_Type_Message_Other)(nil),
	}
}

type Response_Headers_Set_Cookie_Message struct {
	Name                 string                                             `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Value                string                                             `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	Expires              *timestamp.Timestamp                               `protobuf:"bytes,3,opt,name=Expires,proto3" json:"Expires,omitempty"`
	Max_Age              int64                                              `protobuf:"varint,4,opt,name=Max_Age,json=MaxAge,proto3" json:"Max_Age,omitempty"`
	Domain               string                                             `protobuf:"bytes,5,opt,name=Domain,proto3" json:"Domain,omitempty"`
	Path                 string                                             `protobuf:"bytes,6,opt,name=Path,proto3" json:"Path,omitempty"`
	Secure               bool                                               `protobuf:"varint,7,opt,name=Secure,proto3" json:"Secure,omitempty"`
	HttpOnly             bool                                               `protobuf:"varint,8,opt,name=HttpOnly,proto3" json:"HttpOnly,omitempty"`
	SameSite             Response_Headers_Set_Cookie_Message_SameSite_Value `protobuf:"varint,9,opt,name=SameSite,proto3,enum=web.Response_Headers_Set_Cookie_Message_SameSite_Value" json:"SameSite,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                           `json:"-"`
	XXX_unrecognized     []byte                                             `json:"-"`
	XXX_sizecache        int32                                              `json:"-"`
}

func (m *Response_Headers_Set_Cookie_Message) Reset()         { *m = Response_Headers_Set_Cookie_Message{} }
func (m *Response_Headers_Set_Cookie_Message) String() string { return proto.CompactTextString(m) }
func (*Response_Headers_Set_Cookie_Message) ProtoMessage()    {}
func (*Response_Headers_Set_Cookie_Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_461bb3ac99194e85, []int{3, 0, 2}
}

func (m *Response_Headers_Set_Cookie_Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers_Set_Cookie_Message.Unmarshal(m, b)
}
func (m *Response_Headers_Set_Cookie_Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers_Set_Cookie_Message.Marshal(b, m, deterministic)
}
func (m *Response_Headers_Set_Cookie_Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers_Set_Cookie_Message.Merge(m, src)
}
func (m *Response_Headers_Set_Cookie_Message) XXX_Size() int {
	return xxx_messageInfo_Response_Headers_Set_Cookie_Message.Size(m)
}
func (m *Response_Headers_Set_Cookie_Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers_Set_Cookie_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers_Set_Cookie_Message proto.InternalMessageInfo

func (m *Response_Headers_Set_Cookie_Message) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response_Headers_Set_Cookie_Message) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Response_Headers_Set_Cookie_Message) GetExpires() *timestamp.Timestamp {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *Response_Headers_Set_Cookie_Message) GetMax_Age() int64 {
	if m != nil {
		return m.Max_Age
	}
	return 0
}

func (m *Response_Headers_Set_Cookie_Message) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Response_Headers_Set_Cookie_Message) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Response_Headers_Set_Cookie_Message) GetSecure() bool {
	if m != nil {
		return m.Secure
	}
	return false
}

func (m *Response_Headers_Set_Cookie_Message) GetHttpOnly() bool {
	if m != nil {
		return m.HttpOnly
	}
	return false
}

func (m *Response_Headers_Set_Cookie_Message) GetSameSite() Response_Headers_Set_Cookie_Message_SameSite_Value {
	if m != nil {
		return m.SameSite
	}
	return Response_Headers_Set_Cookie_Message_UNUSED_SAMESITE_VALUE
}

func init() {
	proto.RegisterEnum("web.Wildcard", Wildcard_name, Wildcard_value)
	proto.RegisterEnum("web.Already", Already_name, Already_value)
	proto.RegisterEnum("web.Clear", Clear_name, Clear_value)
	proto.RegisterEnum("web.Request_Method", Request_Method_name, Request_Method_value)
	proto.RegisterEnum("web.Request_Headers_Transfer_Encodings_Value", Request_Headers_Transfer_Encodings_Value_name, Request_Headers_Transfer_Encodings_Value_value)
	proto.RegisterEnum("web.Request_Headers_X_Requested_With_Value", Request_Headers_X_Requested_With_Value_name, Request_Headers_X_Requested_With_Value_value)
	proto.RegisterEnum("web.Request_Headers_DNT_Value", Request_Headers_DNT_Value_name, Request_Headers_DNT_Value_value)
	proto.RegisterEnum("web.Response_Code_Value", Response_Code_Value_name, Response_Code_Value_value)
	proto.RegisterEnum("web.Response_Headers_Access_Control_Allow_Credentials_Value", Response_Headers_Access_Control_Allow_Credentials_Value_name, Response_Headers_Access_Control_Allow_Credentials_Value_value)
	proto.RegisterEnum("web.Response_Headers_X_Frame_Options_Value", Response_Headers_X_Frame_Options_Value_name, Response_Headers_X_Frame_Options_Value_value)
	proto.RegisterEnum("web.Response_Headers_Content_Type_Message_Common_MIME_Types", Response_Headers_Content_Type_Message_Common_MIME_Types_name, Response_Headers_Content_Type_Message_Common_MIME_Types_value)
	proto.RegisterEnum("web.Response_Headers_Set_Cookie_Message_SameSite_Value", Response_Headers_Set_Cookie_Message_SameSite_Value_name, Response_Headers_Set_Cookie_Message_SameSite_Value_value)
	proto.RegisterType((*KeyValue)(nil), "web.KeyValue")
	proto.RegisterType((*StringList)(nil), "web.StringList")
	proto.RegisterType((*Request)(nil), "web.Request")
	proto.RegisterType((*Request_Headers)(nil), "web.Request.Headers")
	proto.RegisterType((*Request_Headers_ByteRange)(nil), "web.Request.Headers.ByteRange")
	proto.RegisterType((*Response)(nil), "web.Response")
	proto.RegisterType((*Response_Headers)(nil), "web.Response.Headers")
	proto.RegisterType((*Response_Headers_Alt_Svc_Message)(nil), "web.Response.Headers.Alt_Svc_Message")
	proto.RegisterType((*Response_Headers_Alt_Svc_Message_Service)(nil), "web.Response.Headers.Alt_Svc_Message.Service")
	proto.RegisterType((*Response_Headers_Content_Type_Message)(nil), "web.Response.Headers.Content_Type_Message")
	proto.RegisterType((*Response_Headers_Set_Cookie_Message)(nil), "web.Response.Headers.Set_Cookie_Message")
}

func init() { proto.RegisterFile("web.proto", fileDescriptor_461bb3ac99194e85) }

var fileDescriptor_461bb3ac99194e85 = []byte{
	// 1982 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x57, 0xd9, 0x72, 0xdb, 0xc8,
	0x15, 0x15, 0x77, 0xf2, 0x72, 0x11, 0xd4, 0x96, 0x35, 0x30, 0x6d, 0xd9, 0x1a, 0x3a, 0xe3, 0xa8,
	0xec, 0x0c, 0x3d, 0xe1, 0x4c, 0x65, 0x5e, 0x26, 0x95, 0x82, 0xc0, 0x96, 0x89, 0x31, 0xb7, 0x34,
	0x40, 0x89, 0x7e, 0x42, 0xc1, 0x64, 0x93, 0x42, 0x85, 0x04, 0x38, 0x00, 0x64, 0x8b, 0x79, 0xcf,
	0x6b, 0x5e, 0xf2, 0x09, 0xf9, 0x86, 0x54, 0x7e, 0x21, 0x7f, 0x91, 0x0f, 0xc8, 0x4f, 0xa4, 0x7a,
	0x01, 0xa9, 0x05, 0x92, 0xe7, 0x89, 0x7d, 0xcf, 0x5d, 0xfa, 0xe2, 0xf6, 0xdd, 0x08, 0xa5, 0xcf,
	0xf4, 0x63, 0x73, 0x15, 0xf8, 0x91, 0x8f, 0x32, 0x9f, 0xe9, 0xc7, 0xfa, 0x8b, 0xb9, 0xef, 0xcf,
	0x17, 0xf4, 0x2d, 0x87, 0x3e, 0x5e, 0xce, 0xde, 0x46, 0xee, 0x92, 0x86, 0x91, 0xb3, 0x5c, 0x09,
	0xa9, 0x46, 0x0b, 0x8a, 0xef, 0xe9, 0xfa, 0xcc, 0x59, 0x5c, 0x52, 0xa4, 0x40, 0xe6, 0x3d, 0x5d,
	0xab, 0xa9, 0xa3, 0xd4, 0x71, 0x89, 0xb0, 0x23, 0xda, 0x87, 0x1c, 0x67, 0xa9, 0x69, 0x8e, 0x09,
	0xa2, 0xf1, 0x0a, 0xc0, 0x8c, 0x02, 0xd7, 0x9b, 0x77, 0xdd, 0x30, 0x42, 0x2a, 0x14, 0x04, 0x15,
	0xaa, 0xa9, 0xa3, 0xcc, 0x71, 0x89, 0xc4, 0x64, 0xe3, 0xdf, 0x35, 0x28, 0x10, 0xfa, 0xcb, 0x25,
	0x0d, 0x23, 0xf4, 0x06, 0xf2, 0x4b, 0x1a, 0x5d, 0xf8, 0x53, 0x6e, 0xbe, 0xd6, 0x7a, 0xd4, 0x64,
	0x9e, 0x4a, 0x6e, 0xb3, 0xc7, 0x59, 0x44, 0x8a, 0x30, 0x47, 0x2e, 0x03, 0x57, 0x5e, 0xca, 0x8e,
	0xe8, 0x25, 0xe4, 0x7e, 0xb9, 0xa4, 0xc1, 0x5a, 0xcd, 0x1c, 0x65, 0x8e, 0xcb, 0xad, 0x2a, 0xd7,
	0x8e, 0x1d, 0x27, 0x82, 0x87, 0x9a, 0x50, 0xb8, 0xa0, 0xce, 0x94, 0x06, 0xa1, 0x9a, 0x3d, 0x4a,
	0x1d, 0x97, 0x5b, 0xfb, 0x37, 0x2e, 0xe9, 0x08, 0x1e, 0x89, 0x85, 0xea, 0xff, 0xac, 0x40, 0x41,
	0x82, 0xe8, 0x00, 0xf2, 0xda, 0x64, 0x42, 0x57, 0x91, 0xfc, 0x7c, 0x49, 0xa1, 0x6f, 0xa0, 0x26,
	0x4e, 0xb6, 0x7e, 0xe1, 0x04, 0x21, 0x8d, 0xa4, 0x57, 0x55, 0x81, 0x4a, 0x10, 0xfd, 0x16, 0x76,
	0xa5, 0x58, 0xdb, 0x89, 0x28, 0x0b, 0xb2, 0x9a, 0xe1, 0x72, 0x52, 0x3b, 0x46, 0xaf, 0x09, 0x62,
	0x6f, 0xe2, 0x4f, 0x5d, 0x6f, 0xce, 0x7d, 0xdd, 0x08, 0xc6, 0xe8, 0x35, 0xc1, 0xae, 0xe3, 0xcd,
	0x2f, 0x9d, 0x39, 0x55, 0x73, 0xd7, 0x05, 0x63, 0x14, 0x9d, 0xc1, 0x21, 0x43, 0xc2, 0xd0, 0xd6,
	0x7d, 0x2f, 0x0a, 0xfc, 0x85, 0x2d, 0x3f, 0xd8, 0x16, 0x51, 0x55, 0xf3, 0xf7, 0x07, 0xbc, 0x2e,
	0x34, 0xa5, 0xa2, 0x64, 0x0a, 0x1e, 0xfa, 0x00, 0xcf, 0xef, 0xb1, 0x2b, 0x63, 0xa6, 0x16, 0x1e,
	0x08, 0xf2, 0xd3, 0x24, 0xcb, 0x71, 0xb0, 0x7f, 0x03, 0x55, 0xed, 0x32, 0xba, 0xf0, 0x03, 0xf7,
	0xaf, 0x4e, 0xe4, 0xfa, 0x9e, 0x5a, 0x94, 0x31, 0xbd, 0x0e, 0xb2, 0x27, 0xc1, 0x57, 0x2b, 0x3a,
	0x89, 0xd4, 0x92, 0x78, 0x12, 0x41, 0xa1, 0x37, 0x50, 0x3a, 0xf5, 0x83, 0xcf, 0x4e, 0x30, 0xa5,
	0x53, 0x15, 0x92, 0xf2, 0x61, 0xcb, 0x47, 0x08, 0xb2, 0xa7, 0x81, 0xbf, 0x54, 0xcb, 0xdc, 0x04,
	0x3f, 0x33, 0xac, 0xe3, 0x87, 0x91, 0x5a, 0x11, 0x18, 0x3b, 0xb3, 0x77, 0xee, 0x58, 0xd6, 0xb0,
	0x65, 0x9b, 0x34, 0x8a, 0x78, 0x32, 0x57, 0x85, 0x4f, 0x1c, 0x8d, 0x41, 0xf4, 0x04, 0x8a, 0xc6,
	0xcc, 0xee, 0x39, 0xd1, 0xe4, 0x42, 0xad, 0x71, 0x81, 0x82, 0x31, 0xe3, 0x24, 0x3a, 0x85, 0x3d,
	0xc6, 0xf2, 0xa7, 0xee, 0xcc, 0xa5, 0x53, 0xdb, 0x74, 0xbd, 0x09, 0x55, 0x77, 0x79, 0x88, 0xea,
	0x4d, 0x51, 0x86, 0xcd, 0xb8, 0x0c, 0x9b, 0x56, 0x5c, 0x86, 0x64, 0xd7, 0x98, 0xc5, 0x3a, 0x5c,
	0x05, 0x35, 0xa0, 0x6a, 0xcc, 0xec, 0xbe, 0xef, 0x51, 0x79, 0x8f, 0xc2, 0xef, 0x29, 0x1b, 0x33,
	0x86, 0x89, 0xbb, 0x84, 0x1b, 0xc4, 0xf1, 0xe6, 0x54, 0xdd, 0x8b, 0xdd, 0xe0, 0x24, 0xfa, 0x19,
	0x1e, 0x19, 0x33, 0x7b, 0xe4, 0x2d, 0x6f, 0x3a, 0x82, 0xbe, 0xe8, 0xc8, 0x9e, 0x31, 0xdb, 0x6a,
	0x09, 0x57, 0xbe, 0x86, 0x4a, 0xcf, 0xb9, 0xb2, 0x65, 0x34, 0x43, 0xf5, 0xd1, 0x51, 0xea, 0x38,
	0x4b, 0xca, 0x3d, 0xe7, 0x2a, 0x86, 0xd8, 0x23, 0x0d, 0x02, 0x77, 0xee, 0x7a, 0xea, 0xbe, 0x78,
	0x24, 0x41, 0x31, 0x7c, 0x18, 0x38, 0xf3, 0xa5, 0xa3, 0x3e, 0x16, 0xb8, 0xa0, 0xd0, 0x5b, 0x78,
	0x34, 0x0c, 0xfc, 0xab, 0xb5, 0x7d, 0x33, 0x01, 0x0e, 0xb8, 0x10, 0xe2, 0xac, 0x9b, 0x59, 0xf0,
	0x07, 0xc8, 0x9d, 0xac, 0x23, 0x1a, 0xaa, 0x5f, 0xf1, 0x2f, 0x78, 0x9e, 0x94, 0x6d, 0x4d, 0x26,
	0xc1, 0x3f, 0xbf, 0xb3, 0x43, 0x84, 0x38, 0x6b, 0x4b, 0x84, 0xce, 0x68, 0x40, 0x03, 0x55, 0x15,
	0x11, 0x92, 0x24, 0xfa, 0x23, 0xa4, 0x2d, 0xac, 0x3e, 0x39, 0xca, 0x1c, 0xd7, 0x5a, 0xdf, 0x26,
	0x9a, 0xb3, 0x02, 0xc7, 0x0b, 0x67, 0x34, 0xd8, 0xd4, 0x68, 0x68, 0x8b, 0xc4, 0x4a, 0x5b, 0x18,
	0x1d, 0x02, 0x8c, 0x42, 0x1a, 0xd8, 0xda, 0x9c, 0x7a, 0x91, 0x5a, 0xe7, 0xb6, 0x4b, 0x0c, 0xe1,
	0x00, 0xeb, 0x5d, 0x67, 0xae, 0xa3, 0x3e, 0xe5, 0xad, 0x90, 0x1d, 0x99, 0x27, 0xe7, 0x4e, 0xe0,
	0xb1, 0x52, 0x7f, 0x26, 0x3c, 0x91, 0x24, 0x1a, 0x81, 0x32, 0x8e, 0xab, 0x8a, 0x4e, 0xed, 0x73,
	0x37, 0xba, 0x50, 0x0f, 0x79, 0xb5, 0xbe, 0x49, 0xf4, 0xeb, 0xb6, 0xb0, 0xf4, 0xaa, 0x36, 0xde,
	0xc0, 0x0c, 0x45, 0xdf, 0x41, 0xa6, 0xdd, 0xb7, 0xd4, 0xe7, 0xdc, 0x52, 0x72, 0xc0, 0xda, 0x7d,
	0x4b, 0x2a, 0x33, 0xd1, 0xfa, 0xf7, 0x50, 0xda, 0x84, 0x90, 0x35, 0x7d, 0x33, 0x72, 0x02, 0xd1,
	0x09, 0xb3, 0x44, 0x10, 0xec, 0xbb, 0xb0, 0x37, 0xe5, 0xdd, 0x2f, 0x4b, 0xd8, 0xb1, 0xd1, 0x03,
	0xf5, 0xbe, 0x40, 0xa1, 0x97, 0xf0, 0x62, 0xd4, 0x1f, 0x99, 0xb8, 0x6d, 0x5b, 0x44, 0xeb, 0x9b,
	0xa7, 0x98, 0xd8, 0xb8, 0xaf, 0x0f, 0xda, 0x46, 0xff, 0x9d, 0x69, 0x9f, 0x69, 0xdd, 0x11, 0x56,
	0x76, 0x50, 0x05, 0x8a, 0x16, 0xd1, 0x8c, 0x2e, 0x26, 0xa6, 0x92, 0x6a, 0x0c, 0xe0, 0x20, 0xf9,
	0xfb, 0xd0, 0xd7, 0x70, 0x28, 0x8d, 0x8d, 0x6d, 0x82, 0xff, 0x3c, 0xc2, 0xa6, 0x85, 0xdb, 0xf6,
	0xb9, 0x61, 0x75, 0x36, 0xa6, 0x10, 0xd4, 0xc6, 0xbd, 0x2e, 0xab, 0x55, 0x29, 0xa0, 0xa4, 0x1a,
	0x3f, 0x41, 0x69, 0xf3, 0x99, 0x68, 0x1f, 0x14, 0x69, 0x83, 0x63, 0x5b, 0x0f, 0xda, 0x86, 0xa9,
	0x9d, 0x74, 0x71, 0x5b, 0x49, 0xa1, 0x32, 0x14, 0x70, 0x5f, 0x10, 0xe9, 0x93, 0x02, 0xe4, 0x78,
	0x38, 0x1a, 0x01, 0xe4, 0x65, 0x47, 0xdc, 0x83, 0xaa, 0xb4, 0xd1, 0xc3, 0x56, 0x67, 0xd0, 0x56,
	0x76, 0x50, 0x01, 0x32, 0xef, 0xb0, 0xa5, 0xa4, 0x50, 0x11, 0xb2, 0x1d, 0xac, 0xb5, 0x95, 0x34,
	0x3b, 0x0d, 0x07, 0xa6, 0xa5, 0x64, 0x18, 0x73, 0x38, 0xb2, 0x94, 0x2c, 0x02, 0xc8, 0xb7, 0x71,
	0x17, 0x5b, 0x58, 0xc9, 0xb1, 0x4b, 0xf4, 0x41, 0xbf, 0x8f, 0x75, 0x4b, 0xc9, 0x33, 0x62, 0x30,
	0xb4, 0x8c, 0x41, 0xdf, 0x54, 0x0a, 0xa8, 0x04, 0x39, 0x8b, 0x68, 0x3a, 0x56, 0x8a, 0x8d, 0x7f,
	0x3c, 0x82, 0x22, 0xa1, 0xe1, 0xca, 0xf7, 0x42, 0x8a, 0x7e, 0x07, 0x59, 0xdd, 0x9f, 0x52, 0x39,
	0x38, 0x55, 0xf9, 0x9e, 0x82, 0xd9, 0x64, 0x1c, 0xf9, 0x92, 0x5c, 0x0a, 0xbd, 0xdd, 0x0e, 0xc1,
	0x34, 0xaf, 0x98, 0xc7, 0x37, 0x15, 0x6e, 0x4f, 0x41, 0xd6, 0x0d, 0x4f, 0xfc, 0xe9, 0x9a, 0xcf,
	0xab, 0x0a, 0xe1, 0xe7, 0xfa, 0xff, 0xf6, 0xb6, 0x93, 0x71, 0x04, 0x2f, 0x6e, 0xcd, 0x01, 0x6d,
	0xb1, 0xf0, 0x3f, 0xdb, 0xa2, 0xd0, 0x19, 0x21, 0x3d, 0x13, 0x4d, 0xf8, 0xdc, 0x5d, 0x4c, 0x27,
	0x4e, 0x30, 0xed, 0xec, 0xdc, 0x9a, 0x01, 0x5c, 0x4b, 0x28, 0x69, 0x8b, 0x05, 0xb2, 0xe1, 0xe5,
	0x43, 0x66, 0xc5, 0x4f, 0xfc, 0x0d, 0xbb, 0xdc, 0xf4, 0x76, 0xe9, 0xe8, 0xec, 0x90, 0x17, 0xf7,
	0x19, 0x97, 0x9a, 0xe8, 0x6f, 0x29, 0x38, 0x4a, 0xbc, 0x41, 0x0f, 0xe8, 0x94, 0x7a, 0x91, 0xeb,
	0x2c, 0x42, 0xfe, 0xd1, 0xb5, 0xd6, 0x4f, 0x89, 0x21, 0x6a, 0x7e, 0x49, 0x5b, 0xc6, 0xfd, 0xf0,
	0xae, 0x27, 0xd7, 0x84, 0x90, 0x76, 0x67, 0x3e, 0xe3, 0xab, 0x95, 0x1f, 0xd2, 0xcd, 0x18, 0xcd,
	0xf2, 0x56, 0x71, 0x73, 0x14, 0x0b, 0x91, 0xf8, 0x09, 0xbe, 0x83, 0xaa, 0xb6, 0x88, 0x6c, 0xf3,
	0xd3, 0xc4, 0xd6, 0x17, 0xd4, 0x09, 0xf8, 0x26, 0x50, 0x6b, 0x01, 0x77, 0x9b, 0x23, 0x9d, 0x14,
	0x29, 0x6b, 0x8b, 0xc8, 0xfc, 0x34, 0xe1, 0x24, 0xd2, 0xa0, 0x60, 0xd2, 0xe0, 0x93, 0x3b, 0xa1,
	0x7c, 0xfc, 0x97, 0x5b, 0xdf, 0xdc, 0xf3, 0x89, 0xd2, 0x6c, 0x8f, 0x86, 0xa1, 0x33, 0xa7, 0x9d,
	0x14, 0x89, 0xf5, 0x50, 0x0f, 0x2a, 0xcc, 0x19, 0xea, 0x45, 0xb6, 0xb5, 0x5e, 0x51, 0x39, 0xed,
	0x5f, 0x27, 0xdb, 0xb9, 0x2e, 0x19, 0x1b, 0x23, 0x65, 0x89, 0x32, 0x10, 0x35, 0x21, 0xcb, 0x96,
	0x20, 0x3e, 0xea, 0x1f, 0x1e, 0x44, 0x5c, 0x0e, 0xfd, 0x08, 0xbb, 0xf8, 0x6a, 0xe5, 0x06, 0x34,
	0xb4, 0xb5, 0x45, 0x40, 0x9d, 0xe9, 0x9a, 0xaf, 0x01, 0xb5, 0x56, 0x85, 0x7b, 0x20, 0xb1, 0x4e,
	0x9a, 0xd4, 0xa4, 0x98, 0x44, 0xd0, 0x9f, 0xa0, 0x12, 0x2b, 0xf2, 0x0b, 0xe1, 0x4b, 0x17, 0x76,
	0xd2, 0xa4, 0x2c, 0x35, 0xf8, 0xcd, 0x07, 0x90, 0x67, 0x31, 0xa0, 0x81, 0x5c, 0x1a, 0x24, 0x85,
	0x5e, 0x43, 0xf1, 0xcc, 0x09, 0xd6, 0x3c, 0xe3, 0x2b, 0x49, 0x19, 0x9f, 0x21, 0x05, 0x26, 0xc0,
	0xb2, 0xfb, 0x07, 0xa8, 0x70, 0xd9, 0xf8, 0x8d, 0xab, 0xc9, 0x69, 0x9c, 0x21, 0x65, 0x26, 0x16,
	0xbf, 0xb3, 0x09, 0xbb, 0x63, 0xfb, 0x34, 0x70, 0x96, 0xd4, 0x1e, 0xac, 0xd8, 0xf4, 0x0b, 0xf9,
	0x92, 0xb1, 0x1d, 0x07, 0xb7, 0xa2, 0x7e, 0x4b, 0x58, 0xe6, 0x63, 0x75, 0xcc, 0x51, 0x09, 0xa2,
	0x63, 0x36, 0x64, 0xc6, 0xa6, 0x69, 0x0f, 0x03, 0x3f, 0xa2, 0x13, 0x3e, 0x6e, 0x77, 0xc5, 0x26,
	0x39, 0x1e, 0x9b, 0xe6, 0x16, 0x45, 0xef, 0x00, 0x4c, 0x1a, 0xd9, 0xba, 0xef, 0xff, 0xc5, 0xa5,
	0xaa, 0xc2, 0x37, 0xab, 0xe3, 0xe4, 0x9b, 0xb7, 0x72, 0x9b, 0xd7, 0x2e, 0x99, 0x34, 0x12, 0x50,
	0xfd, 0xbf, 0x29, 0xd8, 0xbd, 0x95, 0x59, 0xc8, 0x80, 0xa2, 0xcc, 0x2c, 0xf1, 0x3f, 0xa1, 0xbc,
	0x99, 0xbd, 0x0f, 0xa7, 0x64, 0x53, 0x6a, 0x91, 0x8d, 0x3a, 0xfa, 0x0a, 0x0a, 0x6c, 0x2d, 0xd1,
	0xe6, 0x54, 0x8e, 0xa3, 0x7c, 0xcf, 0xb9, 0xd2, 0xe6, 0x94, 0x4d, 0xda, 0x21, 0x0d, 0x42, 0x37,
	0x8c, 0x78, 0x61, 0x17, 0x49, 0x4c, 0xd6, 0xfb, 0x9b, 0x7a, 0x60, 0xfd, 0xae, 0xef, 0x2c, 0xa9,
	0xdc, 0xf3, 0xf9, 0x19, 0x3d, 0x85, 0x12, 0xdb, 0x02, 0x6d, 0xce, 0x10, 0x0b, 0x7e, 0x91, 0x01,
	0x9c, 0x89, 0x20, 0x3b, 0xf4, 0x03, 0x61, 0xb2, 0x4a, 0xf8, 0xb9, 0xfe, 0xaf, 0x34, 0xec, 0x27,
	0xe5, 0x3c, 0xba, 0x00, 0x45, 0xf7, 0x97, 0x4b, 0xdf, 0xb3, 0x7b, 0x46, 0x0f, 0x8b, 0xca, 0x49,
	0x3d, 0xd4, 0x64, 0x92, 0xac, 0x34, 0x6f, 0x9b, 0x08, 0x3b, 0x3b, 0xa4, 0x26, 0x40, 0x86, 0xf1,
	0x82, 0x3a, 0x80, 0xdc, 0x20, 0xba, 0xa0, 0x81, 0xf0, 0x97, 0x2d, 0x3e, 0x9c, 0x64, 0xeb, 0xf1,
	0xd0, 0x61, 0x09, 0x10, 0xd1, 0x80, 0xfb, 0x7c, 0x77, 0x3d, 0xde, 0xf0, 0x1b, 0x67, 0xb0, 0x77,
	0xe7, 0xae, 0x6b, 0xb3, 0x52, 0x80, 0x1f, 0x86, 0x6c, 0x56, 0x3e, 0x03, 0x55, 0x1b, 0x0e, 0xbb,
	0x86, 0xae, 0xb1, 0x81, 0x65, 0x0f, 0x74, 0x0b, 0x5b, 0xb6, 0x69, 0x11, 0xac, 0xf5, 0x94, 0x14,
	0xaa, 0x42, 0xc9, 0xc2, 0x63, 0xcb, 0xee, 0x58, 0xbd, 0xae, 0x92, 0x3e, 0x39, 0x48, 0x0e, 0x4f,
	0xfd, 0xef, 0x19, 0x40, 0x77, 0x73, 0x27, 0xf1, 0x4d, 0x12, 0xff, 0x7b, 0xa2, 0x1f, 0xa0, 0x20,
	0x6b, 0x55, 0x7e, 0xdb, 0x43, 0x9d, 0x24, 0x16, 0xbd, 0x9e, 0x31, 0xec, 0xdf, 0x56, 0x66, 0x93,
	0x31, 0x07, 0x90, 0x6f, 0xfb, 0x4b, 0xc7, 0xf5, 0xe4, 0x9f, 0x2b, 0x49, 0xf1, 0x37, 0x77, 0xa2,
	0x0b, 0xde, 0x3c, 0x4b, 0x84, 0x9f, 0x45, 0x5f, 0x98, 0x5c, 0x06, 0xa2, 0x15, 0x16, 0x89, 0xa4,
	0x50, 0x1d, 0x8a, 0x9d, 0x28, 0x5a, 0x0d, 0xbc, 0xc5, 0x9a, 0x77, 0xb7, 0x22, 0xd9, 0xd0, 0xc8,
	0x84, 0xa2, 0xe9, 0x2c, 0xa9, 0xe9, 0x46, 0x54, 0xb6, 0xaf, 0x1f, 0x7f, 0x6d, 0x41, 0x35, 0x63,
	0x45, 0x59, 0xd6, 0x1b, 0x43, 0x8d, 0x9f, 0xa1, 0x76, 0x93, 0x87, 0x9e, 0xc0, 0x63, 0xf9, 0x62,
	0xa6, 0xd6, 0xc3, 0xa6, 0x61, 0xe1, 0xcd, 0x8a, 0x03, 0x90, 0x37, 0x2d, 0x62, 0xe8, 0x6c, 0x49,
	0x29, 0x40, 0xa6, 0xab, 0x8d, 0xc5, 0x8e, 0xd2, 0x1f, 0xf4, 0xb1, 0x92, 0x69, 0xac, 0xe0, 0xd5,
	0xaf, 0x1b, 0x73, 0xe8, 0xf7, 0xf0, 0xad, 0xbc, 0x43, 0xd3, 0x75, 0x6c, 0x9a, 0xb6, 0x3e, 0xe8,
	0x5b, 0x64, 0xd0, 0xb5, 0xb5, 0x6e, 0x77, 0x70, 0x6e, 0xeb, 0x04, 0xb7, 0x71, 0xdf, 0x32, 0xb4,
	0xee, 0x76, 0xc1, 0x2b, 0x41, 0xee, 0x54, 0xeb, 0x9a, 0x58, 0xec, 0x47, 0x16, 0x19, 0x61, 0x25,
	0xdd, 0x30, 0xe1, 0x71, 0x62, 0xdf, 0x42, 0x47, 0xf0, 0x6c, 0xb3, 0xe6, 0x9d, 0x12, 0xad, 0x87,
	0x6d, 0xb9, 0x1b, 0x6d, 0xec, 0x15, 0x21, 0xdb, 0xc6, 0xfd, 0x0f, 0x4a, 0x0a, 0xd5, 0x00, 0xd8,
	0x97, 0x0e, 0x88, 0xf1, 0xce, 0xe8, 0x2b, 0xe9, 0x93, 0x43, 0x78, 0xfa, 0xc0, 0x36, 0x71, 0x52,
	0x82, 0x82, 0x6c, 0x2b, 0xec, 0x28, 0xb3, 0xe2, 0x24, 0x0f, 0x59, 0xd6, 0x7d, 0x1b, 0xaf, 0x00,
	0xb6, 0x6b, 0x14, 0xda, 0x85, 0xb2, 0x74, 0x43, 0x1f, 0xb4, 0x31, 0xdf, 0xf1, 0xd2, 0x83, 0xf7,
	0xca, 0x7f, 0x52, 0xaf, 0xf7, 0xa1, 0x18, 0xf7, 0x7a, 0xe6, 0x8a, 0x69, 0x69, 0x44, 0xd9, 0x79,
	0x7d, 0xc0, 0x6c, 0x8b, 0xd1, 0x53, 0x86, 0x82, 0xd6, 0x25, 0x58, 0x6b, 0x7f, 0x50, 0x76, 0x5e,
	0x23, 0xc8, 0x89, 0x59, 0x5c, 0x82, 0x9c, 0xde, 0xc5, 0x4c, 0xf6, 0x63, 0x9e, 0x27, 0xe9, 0xf7,
	0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0x78, 0x74, 0x76, 0x02, 0xa7, 0x11, 0x00, 0x00,
}
