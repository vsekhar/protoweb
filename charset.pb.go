// Code generated by protoc-gen-go. DO NOT EDIT.
// source: charset.proto

package web

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// http://www.iana.org/assignments/character-sets/character-sets.xhtml
type Charsets int32

const (
	Charsets_CHARSET_UNSPECIFIED Charsets = 0
	Charsets_UTF_8               Charsets = 1
	Charsets_US_ASCII            Charsets = 3
	Charsets_UTF_8_ORIG          Charsets = 106
)

var Charsets_name = map[int32]string{
	0:   "CHARSET_UNSPECIFIED",
	1:   "UTF_8",
	3:   "US_ASCII",
	106: "UTF_8_ORIG",
}

var Charsets_value = map[string]int32{
	"CHARSET_UNSPECIFIED": 0,
	"UTF_8":               1,
	"US_ASCII":            3,
	"UTF_8_ORIG":          106,
}

func (x Charsets) String() string {
	return proto.EnumName(Charsets_name, int32(x))
}

func (Charsets) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3f549c8c888b32b7, []int{0}
}

type CharsetDescriptor struct {
	HttpName             string   `protobuf:"bytes,1,opt,name=http_name,json=httpName,proto3" json:"http_name,omitempty"`
	Mibenum              uint64   `protobuf:"varint,2,opt,name=mibenum,proto3" json:"mibenum,omitempty"`
	PreferredMimeName    string   `protobuf:"bytes,3,opt,name=preferred_mime_name,json=preferredMimeName,proto3" json:"preferred_mime_name,omitempty"`
	Source               string   `protobuf:"bytes,4,opt,name=source,proto3" json:"source,omitempty"`
	PreferredAlias       string   `protobuf:"bytes,5,opt,name=preferred_alias,json=preferredAlias,proto3" json:"preferred_alias,omitempty"`
	Aliases              []string `protobuf:"bytes,6,rep,name=aliases,proto3" json:"aliases,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CharsetDescriptor) Reset()         { *m = CharsetDescriptor{} }
func (m *CharsetDescriptor) String() string { return proto.CompactTextString(m) }
func (*CharsetDescriptor) ProtoMessage()    {}
func (*CharsetDescriptor) Descriptor() ([]byte, []int) {
	return fileDescriptor_3f549c8c888b32b7, []int{0}
}

func (m *CharsetDescriptor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CharsetDescriptor.Unmarshal(m, b)
}
func (m *CharsetDescriptor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CharsetDescriptor.Marshal(b, m, deterministic)
}
func (m *CharsetDescriptor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CharsetDescriptor.Merge(m, src)
}
func (m *CharsetDescriptor) XXX_Size() int {
	return xxx_messageInfo_CharsetDescriptor.Size(m)
}
func (m *CharsetDescriptor) XXX_DiscardUnknown() {
	xxx_messageInfo_CharsetDescriptor.DiscardUnknown(m)
}

var xxx_messageInfo_CharsetDescriptor proto.InternalMessageInfo

func (m *CharsetDescriptor) GetHttpName() string {
	if m != nil {
		return m.HttpName
	}
	return ""
}

func (m *CharsetDescriptor) GetMibenum() uint64 {
	if m != nil {
		return m.Mibenum
	}
	return 0
}

func (m *CharsetDescriptor) GetPreferredMimeName() string {
	if m != nil {
		return m.PreferredMimeName
	}
	return ""
}

func (m *CharsetDescriptor) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *CharsetDescriptor) GetPreferredAlias() string {
	if m != nil {
		return m.PreferredAlias
	}
	return ""
}

func (m *CharsetDescriptor) GetAliases() []string {
	if m != nil {
		return m.Aliases
	}
	return nil
}

var E_CharsetDescriptor = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.EnumValueOptions)(nil),
	ExtensionType: (*CharsetDescriptor)(nil),
	Field:         7982317,
	Name:          "web.charset_descriptor",
	Tag:           "bytes,7982317,opt,name=charset_descriptor",
	Filename:      "charset.proto",
}

func init() {
	proto.RegisterEnum("web.Charsets", Charsets_name, Charsets_value)
	proto.RegisterType((*CharsetDescriptor)(nil), "web.CharsetDescriptor")
	proto.RegisterExtension(E_CharsetDescriptor)
}

func init() { proto.RegisterFile("charset.proto", fileDescriptor_3f549c8c888b32b7) }

var fileDescriptor_3f549c8c888b32b7 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xcd, 0x6e, 0xaa, 0x40,
	0x18, 0x86, 0x05, 0xfc, 0xc1, 0x39, 0xe7, 0x78, 0x70, 0x4c, 0x0c, 0xb1, 0x89, 0xa1, 0x6e, 0x6a,
	0xba, 0xc0, 0xa4, 0xdd, 0x34, 0xdd, 0x19, 0xc4, 0x96, 0x45, 0xb5, 0x01, 0xed, 0x96, 0x00, 0x7e,
	0x2a, 0xd6, 0x01, 0x32, 0x03, 0xf1, 0x5a, 0x7a, 0x29, 0xbd, 0x89, 0xee, 0x7a, 0x0d, 0x4d, 0x9a,
	0xf4, 0x1e, 0x1a, 0x06, 0x7f, 0x92, 0x76, 0xf9, 0x3d, 0xef, 0xcb, 0x1b, 0xe6, 0x41, 0xff, 0x82,
	0xb5, 0x47, 0x19, 0xa4, 0x7a, 0x42, 0xe3, 0x34, 0xc6, 0xd2, 0x0e, 0xfc, 0x8e, 0xb6, 0x8a, 0xe3,
	0xd5, 0x16, 0x06, 0x1c, 0xf9, 0xd9, 0x72, 0xb0, 0x00, 0x16, 0xd0, 0x30, 0x49, 0x63, 0x5a, 0xd4,
	0x7a, 0xef, 0x02, 0x6a, 0x1a, 0xc5, 0x87, 0xa3, 0x63, 0x86, 0xcf, 0x50, 0x7d, 0x9d, 0xa6, 0x89,
	0x1b, 0x79, 0x04, 0x54, 0x41, 0x13, 0xfa, 0x75, 0x5b, 0xce, 0xc1, 0xc4, 0x23, 0x80, 0x55, 0x54,
	0x23, 0xa1, 0x0f, 0x51, 0x46, 0x54, 0x51, 0x13, 0xfa, 0x65, 0xfb, 0x70, 0x62, 0x1d, 0xb5, 0x12,
	0x0a, 0x4b, 0xa0, 0x14, 0x16, 0x2e, 0x09, 0x09, 0x14, 0x03, 0x12, 0x1f, 0x68, 0x1e, 0xa3, 0x87,
	0x90, 0x00, 0x5f, 0x6a, 0xa3, 0x2a, 0x8b, 0x33, 0x1a, 0x80, 0x5a, 0xe6, 0x95, 0xfd, 0x85, 0x2f,
	0xd0, 0xff, 0xd3, 0x8e, 0xb7, 0x0d, 0x3d, 0xa6, 0x56, 0x78, 0xa1, 0x71, 0xc4, 0xc3, 0x9c, 0xe6,
	0xbf, 0xc2, 0x63, 0x60, 0x6a, 0x55, 0x93, 0xfa, 0x75, 0xfb, 0x70, 0x5e, 0xfa, 0x48, 0xde, 0x3f,
	0x8b, 0xe1, 0x2e, 0x6a, 0x19, 0xf7, 0x43, 0xdb, 0x31, 0x67, 0xee, 0x7c, 0xe2, 0x3c, 0x9a, 0x86,
	0x35, 0xb6, 0xcc, 0x91, 0x52, 0xea, 0x54, 0x3e, 0xdf, 0x5e, 0xbb, 0x25, 0x8c, 0x51, 0x65, 0x3e,
	0x1b, 0xbb, 0x37, 0x8a, 0xd0, 0xa9, 0xe5, 0x44, 0x54, 0x36, 0xf8, 0x2f, 0x92, 0xe7, 0x8e, 0x3b,
	0x74, 0x0c, 0xcb, 0x52, 0x24, 0xdc, 0x40, 0x88, 0x37, 0xdc, 0xa9, 0x6d, 0xdd, 0x29, 0x9b, 0x5e,
	0x59, 0x16, 0x15, 0xf1, 0xf6, 0x19, 0xe1, 0xbd, 0x73, 0xf7, 0xe4, 0x15, 0x9f, 0xeb, 0x85, 0x74,
	0xfd, 0x20, 0x5d, 0x37, 0xa3, 0x8c, 0x3c, 0x79, 0xdb, 0x0c, 0xa6, 0x49, 0x1a, 0xc6, 0x11, 0x53,
	0xbf, 0x5e, 0x3e, 0x72, 0x27, 0x7f, 0xae, 0xda, 0xfa, 0x0e, 0x7c, 0xfd, 0x97, 0x7f, 0xbb, 0x19,
	0xfc, 0x44, 0x7e, 0x95, 0xcf, 0x5d, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x49, 0xb6, 0xa8, 0x17,
	0xe7, 0x01, 0x00, 0x00,
}
