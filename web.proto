syntax = "proto3";

package web;

import "google/protobuf/timestamp.proto";
import "mime.proto";
import "status.proto";

// This line prevents updates to the local generated .go file.
// option go_package = "github.com/vsekhar/protoweb/web";

message KeyValue {
  string key = 1;
  string value = 2;
}

// StringList is used when a list of strings is needed inside
// a oneof, since oneof's don't support repeated fields.
message StringList {
  repeated string strings = 1;
}

// Wildcard is a directive for use inside a oneof.
//
// NB: The oneof handles the unspecified case (when populated by
// one of the other values) so we don't need a *_UNSPECIFIED=0
// value.
enum Wildcard {
  STAR = 0;
}

// Already is a directive for use inside a oneof.
//
// NB: The oneof handles the unspecified case (when populated by
// one of the other values) so we don't need a *_UNSPECIFIED=0
// value.
enum Already {
  ALREADY = 0;
}

// Clear is a directive for use inside a oneof.
//
// NB: The oneof handles the unspecified case (when populated by
// one of the other values) so we don't need a *_UNSPECIFIED=0
// value.
enum Clear {
  CLEAR = 0;
}

message CacheControlRequest {
  enum Directives {
    UNUSED_DIRECTIVE = 0;
    MAX_AGE = 1;
    MAX_STALE = 2;
    MIN_FRESH = 3;
    NO_CACHE = 4;
    NO_STORE = 5;
    NO_TRANSFORM = 6;
    ONLY_OF_CACHED = 7;
  }
  Directives directive = 1;
  uint64 seconds = 2;
}

message CacheControlResponse {
  enum Directives {
    UNUSED_DIRECTIVE = 0;
    MUST_REVALIDATE = 1;
    NO_CACHE = 2;
    NO_STORE = 3;
    NO_TRANSFORM = 4;
    PUBLIC = 5;
    PRIVATE = 6;
    PROXY_REVALIDATE = 7;
    MAX_AGE = 8;
    S_MAXAGE = 9;
  }
  Directives directive = 1;
  uint64 seconds = 2;
}

message Request {
  enum Method {
    UNUSED_METHOD = 0;
    GET = 1;
    HEAD = 2;
    POST = 3;
    PUT = 4;
    DELETE = 5;
    CONNECT = 6;
    OPTIONS = 7;
    TRACE = 8;
  }
  Method method = 1;
  // TODO: separate absolute vs. relative?
  oneof URI {
    Wildcard uri_wildcard = 2; // server-wide "*" request, i.e. OPTIONS
    string uri_string = 3;
  }
  repeated KeyValue query = 4;
  message Headers {
    string accept = 1;
    string accept_charset = 2;
    string accept_datetime = 3;
    string accept_encoding = 4;
    string accept_language = 5;
    Method access_control_request_method = 6;
    Headers access_control_request_headers = 7;
    string authorization = 8;
    CacheControlRequest cache_control = 32;
    string expect = 9;
    repeated KeyValue forwarded = 10;
    string from = 11;
    string host = 12;
    string http2_settings = 13;
    string if_match = 14;
    google.protobuf.Timestamp if_modified_since = 15;
    repeated string if_none_match = 16;
    string if_range = 17;
    google.protobuf.Timestamp if_unmodified_since = 18;
    uint64 max_forwards = 19;
    string origin = 20;
    string pragma = 21;
    string proxy_authorization = 22;
    message ByteRange {
      uint64 start = 1;
      uint64 end = 2;
    }
    oneof Range {
      ByteRange bytes = 23;
    }
    string referer = 24;
    enum TransferEncodingsValue {
      UNUSED_TRANSFER_ENCODINGS_VALUE = 0;
      TRAILERS = 1; // only trailers is supported in HTTP/2
    }
    repeated TransferEncodingsValue te = 25;
    string user_agent = 26;
    repeated string via = 27;
    string warning = 28;
    // common non-standard fields

    enum XRequestedWithValue {
      UNUSED_X_REQUESTED_WITH_VALUE = 0;
      XMLHTTPREQUEST = 1;
    }
    XRequestedWithValue x_requested_with = 29;
    enum DNTValue {
      UNUSED_DNT_VALUE = 0;
      DISABLED = 1;
      ENABLED = 2;
    }
    DNTValue dnt = 30;
    repeated KeyValue other = 31;
    // next field number = 33

  }
  // message Headers
  Headers header = 5;
}

// message Request

message Response {
  StatusCodes status = 1;
  message Headers {
    oneof AccessControlAllowOrigin {
      Wildcard access_control_allow_origin_all = 1;
      StringList access_control_allow_origin_origins = 2;
    }
    enum AccessControlAllowCredentialsValue {
      UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE = 0;
      FALSE = 1;
      TRUE = 2;
    }
    AccessControlAllowCredentialsValue access_control_allow_credentials = 3;
    repeated string access_control_expose_headers = 4;
    message AltSvcMessage {
      message Service {
        string name = 1;
        string host_name = 2;
        uint32 port = 3;
      }
      repeated Service services = 1;
      uint64 max_age = 2;
      bool persist = 3;
    }
    oneof Alt_Svc {
      Clear alt_svc_clear = 5;
      AltSvcMessage service = 6;
    }
    CacheControlResponse cache_control = 18;
    MIMEType content_type = 7;
    google.protobuf.Timestamp date = 8;
    oneof Expires {
      Already expires_already = 9;
      google.protobuf.Timestamp expires_date = 10;
    }
    string server = 11;
    oneof Vary {
      Wildcard vary_all = 12;
      StringList vary_headers = 13;
    }
    enum XFrameOptionsValue {
      UNUSED_X_FRAME_OPTIONS_VALUE = 0;
      DENY = 1;
      SAMEORIGIN = 2;
    }
    XFrameOptionsValue x_frame_options = 14;
    string x_xss_protection = 15;
    message SetCookieMessage {
      string name = 1;
      string value = 2;
      google.protobuf.Timestamp expires = 3;
      int64 max_age = 4;
      string domain = 5;
      string path = 6;
      bool secure = 7;
      bool http_only = 8;
      enum SameSiteValue {
        UNUSED_SAMESITE_VALUE = 0;
        STRICT = 1;
        LAX = 2;
        NONE = 3;
      }
      SameSiteValue samesite = 9;
    }
    repeated SetCookieMessage set_cookie = 16;
    repeated KeyValue other = 17;
    // next field number = 19

  }
  // message Headers
  Headers header = 2;
  bytes body = 3;
}

// message Response

service Web {
  // TODO: should the methods be captured here? separate request/response messages?
  rpc DO(Request) returns (stream Response);
}
