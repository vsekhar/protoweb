// Code generated by protoc-gen-go. DO NOT EDIT.
// source: response.proto

package web

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Response_Headers_AccessControlAllowCredentialsValue int32

const (
	Response_Headers_UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE Response_Headers_AccessControlAllowCredentialsValue = 0
	Response_Headers_FALSE                                         Response_Headers_AccessControlAllowCredentialsValue = 1
	Response_Headers_TRUE                                          Response_Headers_AccessControlAllowCredentialsValue = 2
)

var Response_Headers_AccessControlAllowCredentialsValue_name = map[int32]string{
	0: "UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE",
	1: "FALSE",
	2: "TRUE",
}

var Response_Headers_AccessControlAllowCredentialsValue_value = map[string]int32{
	"UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE": 0,
	"FALSE": 1,
	"TRUE":  2,
}

func (x Response_Headers_AccessControlAllowCredentialsValue) String() string {
	return proto.EnumName(Response_Headers_AccessControlAllowCredentialsValue_name, int32(x))
}

func (Response_Headers_AccessControlAllowCredentialsValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{0, 0, 0}
}

type Response_Headers_XFrameOptionsValue int32

const (
	Response_Headers_UNUSED_X_FRAME_OPTIONS_VALUE Response_Headers_XFrameOptionsValue = 0
	Response_Headers_DENY                         Response_Headers_XFrameOptionsValue = 1
	Response_Headers_SAMEORIGIN                   Response_Headers_XFrameOptionsValue = 2
)

var Response_Headers_XFrameOptionsValue_name = map[int32]string{
	0: "UNUSED_X_FRAME_OPTIONS_VALUE",
	1: "DENY",
	2: "SAMEORIGIN",
}

var Response_Headers_XFrameOptionsValue_value = map[string]int32{
	"UNUSED_X_FRAME_OPTIONS_VALUE": 0,
	"DENY":                         1,
	"SAMEORIGIN":                   2,
}

func (x Response_Headers_XFrameOptionsValue) String() string {
	return proto.EnumName(Response_Headers_XFrameOptionsValue_name, int32(x))
}

func (Response_Headers_XFrameOptionsValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{0, 0, 1}
}

type Response_Headers_SetCookieMessage_SameSiteValue int32

const (
	Response_Headers_SetCookieMessage_UNUSED_SAMESITE_VALUE Response_Headers_SetCookieMessage_SameSiteValue = 0
	Response_Headers_SetCookieMessage_STRICT                Response_Headers_SetCookieMessage_SameSiteValue = 1
	Response_Headers_SetCookieMessage_LAX                   Response_Headers_SetCookieMessage_SameSiteValue = 2
	Response_Headers_SetCookieMessage_NONE                  Response_Headers_SetCookieMessage_SameSiteValue = 3
)

var Response_Headers_SetCookieMessage_SameSiteValue_name = map[int32]string{
	0: "UNUSED_SAMESITE_VALUE",
	1: "STRICT",
	2: "LAX",
	3: "NONE",
}

var Response_Headers_SetCookieMessage_SameSiteValue_value = map[string]int32{
	"UNUSED_SAMESITE_VALUE": 0,
	"STRICT":                1,
	"LAX":                   2,
	"NONE":                  3,
}

func (x Response_Headers_SetCookieMessage_SameSiteValue) String() string {
	return proto.EnumName(Response_Headers_SetCookieMessage_SameSiteValue_name, int32(x))
}

func (Response_Headers_SetCookieMessage_SameSiteValue) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{0, 0, 1, 0}
}

type Response struct {
	Status StatusCodes `protobuf:"varint,1,opt,name=status,proto3,enum=web.StatusCodes" json:"status,omitempty"`
	// message Headers
	Header               *Response_Headers `protobuf:"bytes,2,opt,name=header,proto3" json:"header,omitempty"`
	Body                 []byte            `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{0}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() StatusCodes {
	if m != nil {
		return m.Status
	}
	return StatusCodes_STATUS_CODE_UNUSED
}

func (m *Response) GetHeader() *Response_Headers {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Response) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Response_Headers struct {
	// Types that are valid to be assigned to AccessControlAllowOrigin:
	//	*Response_Headers_AccessControlAllowOriginOrigins
	//	*Response_Headers_AccessControlAllowOriginAll
	AccessControlAllowOrigin      isResponse_Headers_AccessControlAllowOrigin         `protobuf_oneof:"AccessControlAllowOrigin"`
	AccessControlAllowCredentials Response_Headers_AccessControlAllowCredentialsValue `protobuf:"varint,3,opt,name=access_control_allow_credentials,json=accessControlAllowCredentials,proto3,enum=web.Response_Headers_AccessControlAllowCredentialsValue" json:"access_control_allow_credentials,omitempty"`
	AccessControlExposeHeaders    []string                                            `protobuf:"bytes,4,rep,name=access_control_expose_headers,json=accessControlExposeHeaders,proto3" json:"access_control_expose_headers,omitempty"`
	// Types that are valid to be assigned to Alt_Svc:
	//	*Response_Headers_Service
	//	*Response_Headers_AltSvcClear
	Alt_Svc      isResponse_Headers_Alt_Svc `protobuf_oneof:"Alt_Svc"`
	CacheControl *CacheControlResponse      `protobuf:"bytes,18,opt,name=cache_control,json=cacheControl,proto3" json:"cache_control,omitempty"`
	ContentType  *MIMEType                  `protobuf:"bytes,7,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Date         *timestamp.Timestamp       `protobuf:"bytes,8,opt,name=date,proto3" json:"date,omitempty"`
	// Types that are valid to be assigned to Expires:
	//	*Response_Headers_ExpiresDate
	//	*Response_Headers_ExpiresAlready
	Expires isResponse_Headers_Expires `protobuf_oneof:"Expires"`
	Server  string                     `protobuf:"bytes,11,opt,name=server,proto3" json:"server,omitempty"`
	// Types that are valid to be assigned to Vary:
	//	*Response_Headers_VaryHeaders
	//	*Response_Headers_VaryAll
	Vary                 isResponse_Headers_Vary              `protobuf_oneof:"Vary"`
	XFrameOptions        Response_Headers_XFrameOptionsValue  `protobuf:"varint,16,opt,name=x_frame_options,json=xFrameOptions,proto3,enum=web.Response_Headers_XFrameOptionsValue" json:"x_frame_options,omitempty"`
	XXssProtection       string                               `protobuf:"bytes,15,opt,name=x_xss_protection,json=xXssProtection,proto3" json:"x_xss_protection,omitempty"`
	SetCookie            []*Response_Headers_SetCookieMessage `protobuf:"bytes,14,rep,name=set_cookie,json=setCookie,proto3" json:"set_cookie,omitempty"`
	Other                []*KeyValue                          `protobuf:"bytes,17,rep,name=other,proto3" json:"other,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *Response_Headers) Reset()         { *m = Response_Headers{} }
func (m *Response_Headers) String() string { return proto.CompactTextString(m) }
func (*Response_Headers) ProtoMessage()    {}
func (*Response_Headers) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{0, 0}
}

func (m *Response_Headers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers.Unmarshal(m, b)
}
func (m *Response_Headers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers.Marshal(b, m, deterministic)
}
func (m *Response_Headers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers.Merge(m, src)
}
func (m *Response_Headers) XXX_Size() int {
	return xxx_messageInfo_Response_Headers.Size(m)
}
func (m *Response_Headers) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers proto.InternalMessageInfo

type isResponse_Headers_AccessControlAllowOrigin interface {
	isResponse_Headers_AccessControlAllowOrigin()
}

type Response_Headers_AccessControlAllowOriginOrigins struct {
	AccessControlAllowOriginOrigins *StringList `protobuf:"bytes,1,opt,name=access_control_allow_origin_origins,json=accessControlAllowOriginOrigins,proto3,oneof"`
}

type Response_Headers_AccessControlAllowOriginAll struct {
	AccessControlAllowOriginAll bool `protobuf:"varint,2,opt,name=access_control_allow_origin_all,json=accessControlAllowOriginAll,proto3,oneof"`
}

func (*Response_Headers_AccessControlAllowOriginOrigins) isResponse_Headers_AccessControlAllowOrigin() {
}

func (*Response_Headers_AccessControlAllowOriginAll) isResponse_Headers_AccessControlAllowOrigin() {}

func (m *Response_Headers) GetAccessControlAllowOrigin() isResponse_Headers_AccessControlAllowOrigin {
	if m != nil {
		return m.AccessControlAllowOrigin
	}
	return nil
}

func (m *Response_Headers) GetAccessControlAllowOriginOrigins() *StringList {
	if x, ok := m.GetAccessControlAllowOrigin().(*Response_Headers_AccessControlAllowOriginOrigins); ok {
		return x.AccessControlAllowOriginOrigins
	}
	return nil
}

func (m *Response_Headers) GetAccessControlAllowOriginAll() bool {
	if x, ok := m.GetAccessControlAllowOrigin().(*Response_Headers_AccessControlAllowOriginAll); ok {
		return x.AccessControlAllowOriginAll
	}
	return false
}

func (m *Response_Headers) GetAccessControlAllowCredentials() Response_Headers_AccessControlAllowCredentialsValue {
	if m != nil {
		return m.AccessControlAllowCredentials
	}
	return Response_Headers_UNUSED_ACCESS_CONTROL_ALLOW_CREDENTIALS_VALUE
}

func (m *Response_Headers) GetAccessControlExposeHeaders() []string {
	if m != nil {
		return m.AccessControlExposeHeaders
	}
	return nil
}

type isResponse_Headers_Alt_Svc interface {
	isResponse_Headers_Alt_Svc()
}

type Response_Headers_Service struct {
	Service *Response_Headers_AltSvcMessage `protobuf:"bytes,5,opt,name=service,proto3,oneof"`
}

type Response_Headers_AltSvcClear struct {
	AltSvcClear bool `protobuf:"varint,6,opt,name=alt_svc_clear,json=altSvcClear,proto3,oneof"`
}

func (*Response_Headers_Service) isResponse_Headers_Alt_Svc() {}

func (*Response_Headers_AltSvcClear) isResponse_Headers_Alt_Svc() {}

func (m *Response_Headers) GetAlt_Svc() isResponse_Headers_Alt_Svc {
	if m != nil {
		return m.Alt_Svc
	}
	return nil
}

func (m *Response_Headers) GetService() *Response_Headers_AltSvcMessage {
	if x, ok := m.GetAlt_Svc().(*Response_Headers_Service); ok {
		return x.Service
	}
	return nil
}

func (m *Response_Headers) GetAltSvcClear() bool {
	if x, ok := m.GetAlt_Svc().(*Response_Headers_AltSvcClear); ok {
		return x.AltSvcClear
	}
	return false
}

func (m *Response_Headers) GetCacheControl() *CacheControlResponse {
	if m != nil {
		return m.CacheControl
	}
	return nil
}

func (m *Response_Headers) GetContentType() *MIMEType {
	if m != nil {
		return m.ContentType
	}
	return nil
}

func (m *Response_Headers) GetDate() *timestamp.Timestamp {
	if m != nil {
		return m.Date
	}
	return nil
}

type isResponse_Headers_Expires interface {
	isResponse_Headers_Expires()
}

type Response_Headers_ExpiresDate struct {
	ExpiresDate *timestamp.Timestamp `protobuf:"bytes,9,opt,name=expires_date,json=expiresDate,proto3,oneof"`
}

type Response_Headers_ExpiresAlready struct {
	ExpiresAlready bool `protobuf:"varint,10,opt,name=expires_already,json=expiresAlready,proto3,oneof"`
}

func (*Response_Headers_ExpiresDate) isResponse_Headers_Expires() {}

func (*Response_Headers_ExpiresAlready) isResponse_Headers_Expires() {}

func (m *Response_Headers) GetExpires() isResponse_Headers_Expires {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *Response_Headers) GetExpiresDate() *timestamp.Timestamp {
	if x, ok := m.GetExpires().(*Response_Headers_ExpiresDate); ok {
		return x.ExpiresDate
	}
	return nil
}

func (m *Response_Headers) GetExpiresAlready() bool {
	if x, ok := m.GetExpires().(*Response_Headers_ExpiresAlready); ok {
		return x.ExpiresAlready
	}
	return false
}

func (m *Response_Headers) GetServer() string {
	if m != nil {
		return m.Server
	}
	return ""
}

type isResponse_Headers_Vary interface {
	isResponse_Headers_Vary()
}

type Response_Headers_VaryHeaders struct {
	VaryHeaders *StringList `protobuf:"bytes,12,opt,name=vary_headers,json=varyHeaders,proto3,oneof"`
}

type Response_Headers_VaryAll struct {
	VaryAll bool `protobuf:"varint,13,opt,name=vary_all,json=varyAll,proto3,oneof"`
}

func (*Response_Headers_VaryHeaders) isResponse_Headers_Vary() {}

func (*Response_Headers_VaryAll) isResponse_Headers_Vary() {}

func (m *Response_Headers) GetVary() isResponse_Headers_Vary {
	if m != nil {
		return m.Vary
	}
	return nil
}

func (m *Response_Headers) GetVaryHeaders() *StringList {
	if x, ok := m.GetVary().(*Response_Headers_VaryHeaders); ok {
		return x.VaryHeaders
	}
	return nil
}

func (m *Response_Headers) GetVaryAll() bool {
	if x, ok := m.GetVary().(*Response_Headers_VaryAll); ok {
		return x.VaryAll
	}
	return false
}

func (m *Response_Headers) GetXFrameOptions() Response_Headers_XFrameOptionsValue {
	if m != nil {
		return m.XFrameOptions
	}
	return Response_Headers_UNUSED_X_FRAME_OPTIONS_VALUE
}

func (m *Response_Headers) GetXXssProtection() string {
	if m != nil {
		return m.XXssProtection
	}
	return ""
}

func (m *Response_Headers) GetSetCookie() []*Response_Headers_SetCookieMessage {
	if m != nil {
		return m.SetCookie
	}
	return nil
}

func (m *Response_Headers) GetOther() []*KeyValue {
	if m != nil {
		return m.Other
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Response_Headers) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Response_Headers_AccessControlAllowOriginOrigins)(nil),
		(*Response_Headers_AccessControlAllowOriginAll)(nil),
		(*Response_Headers_Service)(nil),
		(*Response_Headers_AltSvcClear)(nil),
		(*Response_Headers_ExpiresDate)(nil),
		(*Response_Headers_ExpiresAlready)(nil),
		(*Response_Headers_VaryHeaders)(nil),
		(*Response_Headers_VaryAll)(nil),
	}
}

type Response_Headers_AltSvcMessage struct {
	Services             []*Response_Headers_AltSvcMessage_Service `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
	MaxAge               uint64                                    `protobuf:"varint,2,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	Persist              bool                                      `protobuf:"varint,3,opt,name=persist,proto3" json:"persist,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *Response_Headers_AltSvcMessage) Reset()         { *m = Response_Headers_AltSvcMessage{} }
func (m *Response_Headers_AltSvcMessage) String() string { return proto.CompactTextString(m) }
func (*Response_Headers_AltSvcMessage) ProtoMessage()    {}
func (*Response_Headers_AltSvcMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{0, 0, 0}
}

func (m *Response_Headers_AltSvcMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers_AltSvcMessage.Unmarshal(m, b)
}
func (m *Response_Headers_AltSvcMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers_AltSvcMessage.Marshal(b, m, deterministic)
}
func (m *Response_Headers_AltSvcMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers_AltSvcMessage.Merge(m, src)
}
func (m *Response_Headers_AltSvcMessage) XXX_Size() int {
	return xxx_messageInfo_Response_Headers_AltSvcMessage.Size(m)
}
func (m *Response_Headers_AltSvcMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers_AltSvcMessage.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers_AltSvcMessage proto.InternalMessageInfo

func (m *Response_Headers_AltSvcMessage) GetServices() []*Response_Headers_AltSvcMessage_Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *Response_Headers_AltSvcMessage) GetMaxAge() uint64 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

func (m *Response_Headers_AltSvcMessage) GetPersist() bool {
	if m != nil {
		return m.Persist
	}
	return false
}

type Response_Headers_AltSvcMessage_Service struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	HostName             string   `protobuf:"bytes,2,opt,name=host_name,json=hostName,proto3" json:"host_name,omitempty"`
	Port                 uint32   `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response_Headers_AltSvcMessage_Service) Reset() {
	*m = Response_Headers_AltSvcMessage_Service{}
}
func (m *Response_Headers_AltSvcMessage_Service) String() string { return proto.CompactTextString(m) }
func (*Response_Headers_AltSvcMessage_Service) ProtoMessage()    {}
func (*Response_Headers_AltSvcMessage_Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{0, 0, 0, 0}
}

func (m *Response_Headers_AltSvcMessage_Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers_AltSvcMessage_Service.Unmarshal(m, b)
}
func (m *Response_Headers_AltSvcMessage_Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers_AltSvcMessage_Service.Marshal(b, m, deterministic)
}
func (m *Response_Headers_AltSvcMessage_Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers_AltSvcMessage_Service.Merge(m, src)
}
func (m *Response_Headers_AltSvcMessage_Service) XXX_Size() int {
	return xxx_messageInfo_Response_Headers_AltSvcMessage_Service.Size(m)
}
func (m *Response_Headers_AltSvcMessage_Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers_AltSvcMessage_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers_AltSvcMessage_Service proto.InternalMessageInfo

func (m *Response_Headers_AltSvcMessage_Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response_Headers_AltSvcMessage_Service) GetHostName() string {
	if m != nil {
		return m.HostName
	}
	return ""
}

func (m *Response_Headers_AltSvcMessage_Service) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Response_Headers_SetCookieMessage struct {
	Name                 string                                          `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string                                          `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Expires              *timestamp.Timestamp                            `protobuf:"bytes,3,opt,name=expires,proto3" json:"expires,omitempty"`
	MaxAge               int64                                           `protobuf:"varint,4,opt,name=max_age,json=maxAge,proto3" json:"max_age,omitempty"`
	Domain               string                                          `protobuf:"bytes,5,opt,name=domain,proto3" json:"domain,omitempty"`
	Path                 string                                          `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Secure               bool                                            `protobuf:"varint,7,opt,name=secure,proto3" json:"secure,omitempty"`
	HttpOnly             bool                                            `protobuf:"varint,8,opt,name=http_only,json=httpOnly,proto3" json:"http_only,omitempty"`
	Samesite             Response_Headers_SetCookieMessage_SameSiteValue `protobuf:"varint,9,opt,name=samesite,proto3,enum=web.Response_Headers_SetCookieMessage_SameSiteValue" json:"samesite,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                        `json:"-"`
	XXX_unrecognized     []byte                                          `json:"-"`
	XXX_sizecache        int32                                           `json:"-"`
}

func (m *Response_Headers_SetCookieMessage) Reset()         { *m = Response_Headers_SetCookieMessage{} }
func (m *Response_Headers_SetCookieMessage) String() string { return proto.CompactTextString(m) }
func (*Response_Headers_SetCookieMessage) ProtoMessage()    {}
func (*Response_Headers_SetCookieMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0fbc901015fa5021, []int{0, 0, 1}
}

func (m *Response_Headers_SetCookieMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response_Headers_SetCookieMessage.Unmarshal(m, b)
}
func (m *Response_Headers_SetCookieMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response_Headers_SetCookieMessage.Marshal(b, m, deterministic)
}
func (m *Response_Headers_SetCookieMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response_Headers_SetCookieMessage.Merge(m, src)
}
func (m *Response_Headers_SetCookieMessage) XXX_Size() int {
	return xxx_messageInfo_Response_Headers_SetCookieMessage.Size(m)
}
func (m *Response_Headers_SetCookieMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_Response_Headers_SetCookieMessage.DiscardUnknown(m)
}

var xxx_messageInfo_Response_Headers_SetCookieMessage proto.InternalMessageInfo

func (m *Response_Headers_SetCookieMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Response_Headers_SetCookieMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Response_Headers_SetCookieMessage) GetExpires() *timestamp.Timestamp {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *Response_Headers_SetCookieMessage) GetMaxAge() int64 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

func (m *Response_Headers_SetCookieMessage) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Response_Headers_SetCookieMessage) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Response_Headers_SetCookieMessage) GetSecure() bool {
	if m != nil {
		return m.Secure
	}
	return false
}

func (m *Response_Headers_SetCookieMessage) GetHttpOnly() bool {
	if m != nil {
		return m.HttpOnly
	}
	return false
}

func (m *Response_Headers_SetCookieMessage) GetSamesite() Response_Headers_SetCookieMessage_SameSiteValue {
	if m != nil {
		return m.Samesite
	}
	return Response_Headers_SetCookieMessage_UNUSED_SAMESITE_VALUE
}

func init() {
	proto.RegisterEnum("web.Response_Headers_AccessControlAllowCredentialsValue", Response_Headers_AccessControlAllowCredentialsValue_name, Response_Headers_AccessControlAllowCredentialsValue_value)
	proto.RegisterEnum("web.Response_Headers_XFrameOptionsValue", Response_Headers_XFrameOptionsValue_name, Response_Headers_XFrameOptionsValue_value)
	proto.RegisterEnum("web.Response_Headers_SetCookieMessage_SameSiteValue", Response_Headers_SetCookieMessage_SameSiteValue_name, Response_Headers_SetCookieMessage_SameSiteValue_value)
	proto.RegisterType((*Response)(nil), "web.Response")
	proto.RegisterType((*Response_Headers)(nil), "web.Response.Headers")
	proto.RegisterType((*Response_Headers_AltSvcMessage)(nil), "web.Response.Headers.AltSvcMessage")
	proto.RegisterType((*Response_Headers_AltSvcMessage_Service)(nil), "web.Response.Headers.AltSvcMessage.Service")
	proto.RegisterType((*Response_Headers_SetCookieMessage)(nil), "web.Response.Headers.SetCookieMessage")
}

func init() { proto.RegisterFile("response.proto", fileDescriptor_0fbc901015fa5021) }

var fileDescriptor_0fbc901015fa5021 = []byte{
	// 1071 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x5d, 0x6f, 0xdb, 0x36,
	0x14, 0x8d, 0x6c, 0xc7, 0x96, 0xaf, 0x3f, 0xa2, 0x11, 0x6b, 0xa7, 0x3a, 0x2b, 0x62, 0x24, 0xc3,
	0xe0, 0x61, 0xa8, 0xbb, 0x79, 0x79, 0xd8, 0xd3, 0x0a, 0xc5, 0x51, 0x1a, 0x63, 0x8e, 0x1d, 0x50,
	0x4e, 0x96, 0x3d, 0x11, 0x8c, 0xcc, 0x3a, 0xc2, 0x64, 0x49, 0x10, 0x19, 0xc7, 0x7e, 0xdc, 0xe3,
	0x7e, 0xc5, 0x9e, 0xf6, 0xab, 0xf6, 0x67, 0x0a, 0x52, 0x94, 0x9b, 0xb4, 0x4e, 0xda, 0x97, 0x84,
	0xbc, 0xf7, 0x9c, 0x73, 0xc9, 0xab, 0x73, 0x69, 0x68, 0xa6, 0x8c, 0x27, 0x71, 0xc4, 0x59, 0x37,
	0x49, 0x63, 0x11, 0xa3, 0xe2, 0x1d, 0xbb, 0x6e, 0x21, 0x9f, 0xfa, 0x37, 0xcc, 0x8f, 0x23, 0x91,
	0xc6, 0x61, 0x96, 0x68, 0xed, 0xcd, 0xe2, 0x78, 0x16, 0xb2, 0xd7, 0x6a, 0x77, 0x7d, 0xfb, 0xee,
	0xb5, 0x08, 0xe6, 0x8c, 0x0b, 0x3a, 0x4f, 0x34, 0x00, 0xe6, 0xc1, 0x5c, 0xab, 0xb4, 0xea, 0x5c,
	0x50, 0x71, 0xcb, 0xf3, 0xcc, 0xad, 0x08, 0xb4, 0xcc, 0xfe, 0xbf, 0x16, 0x98, 0x58, 0x97, 0x44,
	0x1d, 0x28, 0x67, 0x40, 0xdb, 0x68, 0x1b, 0x9d, 0x66, 0xcf, 0xea, 0xde, 0xb1, 0xeb, 0xae, 0xa7,
	0x42, 0xfd, 0x78, 0xca, 0x38, 0xd6, 0x79, 0xf4, 0x0a, 0xca, 0x37, 0x8c, 0x4e, 0x59, 0x6a, 0x17,
	0xda, 0x46, 0xa7, 0xd6, 0x7b, 0xa6, 0x90, 0xb9, 0x50, 0xf7, 0x54, 0xe5, 0x38, 0xd6, 0x20, 0x84,
	0xa0, 0x74, 0x1d, 0x4f, 0x57, 0x76, 0xb1, 0x6d, 0x74, 0xea, 0x58, 0xad, 0x5b, 0xff, 0xed, 0x40,
	0x45, 0xe3, 0x10, 0x81, 0x03, 0xea, 0xfb, 0x8c, 0x73, 0xa2, 0x2f, 0x49, 0x68, 0x18, 0xc6, 0x77,
	0x24, 0x4e, 0x83, 0x59, 0x10, 0xe9, 0x7f, 0xd9, 0xa9, 0x6a, 0xbd, 0x1d, 0x7d, 0xaa, 0x34, 0x88,
	0x66, 0xc3, 0x80, 0x8b, 0xd3, 0x2d, 0xbc, 0x97, 0xb1, 0xfb, 0x19, 0xd9, 0x91, 0xdc, 0xb1, 0xe2,
	0x64, 0x7f, 0x39, 0x3a, 0x81, 0xbd, 0xa7, 0x0a, 0xd0, 0x30, 0x54, 0x17, 0x31, 0x4f, 0xb7, 0xf0,
	0xee, 0x63, 0x5a, 0x4e, 0x18, 0xa2, 0xbf, 0x0d, 0x68, 0x6f, 0x14, 0xf2, 0x53, 0x36, 0x65, 0x91,
	0x08, 0x68, 0xc8, 0xd5, 0x2d, 0x9b, 0xbd, 0x5f, 0x37, 0xb6, 0xa4, 0xeb, 0x7c, 0xa2, 0xde, 0xff,
	0x40, 0xbd, 0xa4, 0xe1, 0x2d, 0xc3, 0x2f, 0xe9, 0x53, 0x18, 0xe4, 0xc0, 0xcb, 0x8f, 0x8e, 0xc0,
	0x96, 0x49, 0xcc, 0x19, 0xc9, 0x9a, 0xcd, 0xed, 0x52, 0xbb, 0xd8, 0xa9, 0xe2, 0xd6, 0x03, 0x15,
	0x57, 0x41, 0xf2, 0x7e, 0xbf, 0x81, 0x0a, 0x67, 0xe9, 0x22, 0xf0, 0x99, 0xbd, 0xad, 0x7a, 0x7a,
	0xf0, 0xc8, 0x61, 0x43, 0xe1, 0x2d, 0xfc, 0x33, 0xc6, 0x39, 0x9d, 0xb1, 0x53, 0x03, 0xe7, 0x2c,
	0xf4, 0x1d, 0x34, 0x68, 0x28, 0x08, 0x5f, 0xf8, 0xc4, 0x0f, 0x19, 0x4d, 0xed, 0xb2, 0xea, 0x9e,
	0x81, 0x6b, 0x54, 0x51, 0xfa, 0x32, 0x88, 0x7e, 0x83, 0x86, 0x72, 0x6e, 0x7e, 0x50, 0x1b, 0xa9,
	0x62, 0x2f, 0x54, 0xb1, 0xbe, 0xcc, 0xe8, 0xd3, 0xe5, 0x85, 0x71, 0xdd, 0xbf, 0x17, 0x45, 0x3f,
	0x41, 0x5d, 0x32, 0x59, 0x24, 0x88, 0x58, 0x25, 0xcc, 0xae, 0x28, 0x7a, 0x43, 0xd1, 0xcf, 0x06,
	0x67, 0xee, 0x64, 0x95, 0x30, 0x5c, 0xd3, 0x10, 0xb9, 0x41, 0x5d, 0x28, 0x4d, 0xa9, 0x60, 0xb6,
	0xa9, 0x90, 0xad, 0x6e, 0x36, 0x24, 0xdd, 0x7c, 0x48, 0xba, 0x93, 0x7c, 0x48, 0xb0, 0xc2, 0xa1,
	0x37, 0x50, 0x67, 0xcb, 0x24, 0x48, 0x19, 0x27, 0x8a, 0x57, 0xfd, 0x1c, 0xef, 0xb4, 0x80, 0x6b,
	0x9a, 0x71, 0x2c, 0x05, 0x7e, 0x80, 0x9d, 0x5c, 0x80, 0x86, 0x29, 0xa3, 0xd3, 0x95, 0x0d, 0xaa,
	0x15, 0x05, 0xdc, 0xd4, 0x09, 0x27, 0x8b, 0xa3, 0xe7, 0x50, 0x96, 0xed, 0x63, 0xa9, 0x5d, 0x6b,
	0x1b, 0x9d, 0x2a, 0xd6, 0x3b, 0x74, 0x08, 0xf5, 0x05, 0x4d, 0x57, 0xeb, 0xcf, 0x57, 0xdf, 0xec,
	0xf2, 0x22, 0xae, 0x49, 0x58, 0xfe, 0x09, 0x77, 0xc1, 0x54, 0x2c, 0x69, 0xdd, 0x86, 0xaa, 0x58,
	0xc4, 0x15, 0x19, 0x91, 0x36, 0x3d, 0x87, 0x9d, 0x25, 0x79, 0x97, 0xd2, 0x39, 0x23, 0x71, 0x22,
	0x82, 0x38, 0xe2, 0xb6, 0xa5, 0x4c, 0xd9, 0xd9, 0xfc, 0x9d, 0xaf, 0x4e, 0x24, 0x76, 0x9c, 0x41,
	0x33, 0x13, 0x36, 0x96, 0xf7, 0x63, 0xa8, 0x03, 0xd6, 0x92, 0x2c, 0x39, 0x27, 0xb2, 0x25, 0xcc,
	0x97, 0x41, 0x7b, 0x47, 0x5d, 0xa3, 0xb9, 0xbc, 0xe2, 0xfc, 0x7c, 0x1d, 0x45, 0x2e, 0x00, 0x67,
	0x82, 0xf8, 0x71, 0xfc, 0x57, 0xc0, 0xec, 0x66, 0xbb, 0xd8, 0xa9, 0xf5, 0xbe, 0xdf, 0x5c, 0xd6,
	0x63, 0xa2, 0xaf, 0x60, 0xda, 0x61, 0xb8, 0xca, 0xf3, 0x08, 0x3a, 0x80, 0xed, 0x58, 0xdc, 0xb0,
	0xd4, 0xfe, 0x4a, 0x29, 0x64, 0x1f, 0xfd, 0x77, 0xb6, 0xca, 0x4e, 0x97, 0xe5, 0x5a, 0xff, 0x1b,
	0xd0, 0x78, 0xe0, 0x51, 0xf4, 0x16, 0x4c, 0xed, 0x51, 0xf9, 0x5c, 0x48, 0xe6, 0x8f, 0x5f, 0x60,
	0xed, 0xae, 0x97, 0x71, 0xf0, 0x9a, 0x8c, 0xbe, 0x81, 0xca, 0x9c, 0x2e, 0x09, 0x9d, 0x31, 0xf5,
	0x32, 0x94, 0x70, 0x79, 0x4e, 0x97, 0xce, 0x8c, 0x21, 0x1b, 0x2a, 0x09, 0x4b, 0x79, 0xc0, 0x85,
	0x1a, 0x74, 0x13, 0xe7, 0xdb, 0xd6, 0x08, 0x2a, 0x5a, 0x47, 0x3e, 0x78, 0x11, 0x9d, 0x33, 0xf5,
	0x62, 0x55, 0xb1, 0x5a, 0xa3, 0x5d, 0xa8, 0xde, 0xc4, 0x5c, 0x10, 0x95, 0x28, 0xa8, 0x84, 0x29,
	0x03, 0x23, 0x99, 0x44, 0x50, 0x4a, 0xe2, 0x34, 0x93, 0x6c, 0x60, 0xb5, 0x6e, 0xfd, 0x53, 0x04,
	0xeb, 0xe3, 0x16, 0x6d, 0x54, 0xfe, 0x1a, 0xb6, 0x17, 0xb2, 0x2d, 0x5a, 0x35, 0xdb, 0xa0, 0x43,
	0xa8, 0x68, 0x07, 0x2a, 0xd5, 0xa7, 0xc7, 0x21, 0x87, 0xde, 0xbf, 0x77, 0xa9, 0x6d, 0x74, 0x8a,
	0xeb, 0x7b, 0x3f, 0x87, 0xf2, 0x34, 0x9e, 0xd3, 0x20, 0x52, 0x4f, 0x46, 0x15, 0xeb, 0x9d, 0x3a,
	0x39, 0x15, 0x37, 0xea, 0x05, 0xa8, 0x62, 0xb5, 0xce, 0xac, 0xee, 0xdf, 0xa6, 0xd9, 0xc8, 0x9a,
	0x58, 0xef, 0x54, 0x0b, 0x84, 0x48, 0x48, 0x1c, 0x85, 0x2b, 0x35, 0xa3, 0x26, 0x36, 0x65, 0x60,
	0x1c, 0x85, 0x2b, 0x74, 0x0e, 0x26, 0xa7, 0x73, 0xc6, 0x03, 0x3d, 0x87, 0xcd, 0xde, 0xe1, 0x97,
	0xd9, 0xa6, 0xeb, 0xd1, 0x39, 0xf3, 0x02, 0xc1, 0x32, 0x6f, 0xac, 0x55, 0xf6, 0x07, 0xd0, 0x78,
	0x90, 0x42, 0x2f, 0xe0, 0xd9, 0xc5, 0xe8, 0xc2, 0x73, 0x8f, 0x89, 0xe7, 0x9c, 0xb9, 0xde, 0x60,
	0xe2, 0x92, 0x4b, 0x67, 0x78, 0xe1, 0x5a, 0x5b, 0x08, 0xa0, 0xec, 0x4d, 0xf0, 0xa0, 0x3f, 0xb1,
	0x0c, 0x54, 0x81, 0xe2, 0xd0, 0xb9, 0xb2, 0x0a, 0xc8, 0x84, 0xd2, 0x68, 0x3c, 0x72, 0xad, 0xe2,
	0x7e, 0x08, 0xfb, 0x9f, 0x7f, 0xb9, 0xd1, 0xcf, 0xf0, 0x4a, 0xeb, 0x3b, 0xfd, 0xbe, 0xeb, 0x79,
	0xa4, 0x3f, 0x1e, 0x4d, 0xf0, 0x78, 0x48, 0x9c, 0xe1, 0x70, 0xfc, 0x07, 0xe9, 0x63, 0xf7, 0xd8,
	0x1d, 0x4d, 0x06, 0xce, 0xd0, 0x5b, 0xd7, 0xad, 0xc2, 0xf6, 0x89, 0x33, 0xf4, 0x5c, 0xcb, 0x90,
	0xd5, 0x26, 0xf8, 0xc2, 0xb5, 0x0a, 0xfb, 0xe7, 0x80, 0x3e, 0x1d, 0x49, 0xd4, 0x86, 0x6f, 0xb5,
	0xfa, 0x15, 0x39, 0xc1, 0xce, 0x99, 0x4b, 0xc6, 0xe7, 0x93, 0xc1, 0x78, 0xf4, 0x41, 0xcc, 0x84,
	0xd2, 0xb1, 0x3b, 0xfa, 0xd3, 0x32, 0x50, 0x13, 0x40, 0x5e, 0x71, 0x8c, 0x07, 0x6f, 0x07, 0x23,
	0xab, 0x70, 0xd4, 0x02, 0xdb, 0x79, 0xe4, 0x77, 0xed, 0xa8, 0x0a, 0x15, 0x27, 0x14, 0xc4, 0x5b,
	0xf8, 0x72, 0xe9, 0x66, 0x46, 0x38, 0x2a, 0x43, 0xe9, 0x92, 0xa6, 0xab, 0xeb, 0xb2, 0x72, 0xcb,
	0x2f, 0xef, 0x03, 0x00, 0x00, 0xff, 0xff, 0xe1, 0x3b, 0x25, 0x9d, 0x9a, 0x08, 0x00, 0x00,
}
